

Microchip Technology PIC LITE Macro Assembler V1.33 build 59893 
                                                                                               Tue Mar 19 09:15:46 2024

Microchip Technology Omniscient Code Generator (Lite mode) build 59893
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	inittext,global,class=CODE,delta=2
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	maintext,global,class=CODE,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2
    16                           	psect	text5,local,class=CODE,merge=1,delta=2
    17                           	psect	text6,local,class=CODE,merge=1,delta=2
    18                           	psect	intentry,global,class=CODE,delta=2
    19                           	dabs	1,0x7E,2
    20  0000                     	;# 
    21  0001                     	;# 
    22  0002                     	;# 
    23  0003                     	;# 
    24  0004                     	;# 
    25  0005                     	;# 
    26  0006                     	;# 
    27  0007                     	;# 
    28  0008                     	;# 
    29  0009                     	;# 
    30  000A                     	;# 
    31  000B                     	;# 
    32  000C                     	;# 
    33  000D                     	;# 
    34  000E                     	;# 
    35  000E                     	;# 
    36  000F                     	;# 
    37  0010                     	;# 
    38  0011                     	;# 
    39  0012                     	;# 
    40  0013                     	;# 
    41  0014                     	;# 
    42  0015                     	;# 
    43  0015                     	;# 
    44  0016                     	;# 
    45  0017                     	;# 
    46  0018                     	;# 
    47  0019                     	;# 
    48  001A                     	;# 
    49  001B                     	;# 
    50  001B                     	;# 
    51  001C                     	;# 
    52  001D                     	;# 
    53  001E                     	;# 
    54  001F                     	;# 
    55  0081                     	;# 
    56  0085                     	;# 
    57  0086                     	;# 
    58  0087                     	;# 
    59  0088                     	;# 
    60  0089                     	;# 
    61  008C                     	;# 
    62  008D                     	;# 
    63  008E                     	;# 
    64  0091                     	;# 
    65  0092                     	;# 
    66  0093                     	;# 
    67  0094                     	;# 
    68  0098                     	;# 
    69  0099                     	;# 
    70  009C                     	;# 
    71  009D                     	;# 
    72  009E                     	;# 
    73  009F                     	;# 
    74  010C                     	;# 
    75  010D                     	;# 
    76  010E                     	;# 
    77  010F                     	;# 
    78  018C                     	;# 
    79  018D                     	;# 
    80                           
    81                           	psect	idataBANK0
    82  01B7                     __pidataBANK0:	
    83                           
    84                           ;initializer for _timerMaxCount
    85  01B7  3453               	retlw	83
    86  01B8  3400               	retlw	0
    87  01B9  34D0               	retlw	208
    88  01BA  3400               	retlw	0
    89  01BB  34A1               	retlw	161
    90  01BC  3401               	retlw	1
    91  01BD  3471               	retlw	113
    92  01BE  3402               	retlw	2
    93  01BF  3418               	retlw	24
    94  01C0  3403               	retlw	3
    95  01C1  3432               	retlw	50
    96  01C2  3400               	retlw	0
    97  01C3  347D               	retlw	125
    98  01C4  3400               	retlw	0
    99  01C5  34FA               	retlw	250
   100  01C6  3400               	retlw	0
   101  01C7  3477               	retlw	119
   102  01C8  3401               	retlw	1
   103  01C9  34DB               	retlw	219
   104  01CA  3401               	retlw	1
   105  01CB  3419               	retlw	25
   106  01CC  3400               	retlw	0
   107  01CD  343F               	retlw	63
   108  01CE  3400               	retlw	0
   109  01CF  347D               	retlw	125
   110  01D0  3400               	retlw	0
   111  01D1  34BC               	retlw	188
   112  01D2  3400               	retlw	0
   113  01D3  34EE               	retlw	238
   114  01D4  3400               	retlw	0
   115                           
   116                           ;initializer for _PR2Values
   117  01D5  34CF               	retlw	207
   118  01D6  3400               	retlw	0
   119  01D7  347C               	retlw	124
   120  01D8  3400               	retlw	0
   121  01D9  343E               	retlw	62
   122  01DA  3400               	retlw	0
   123                           
   124                           ;initializer for _flag
   125  01DB  3401               	retlw	1
   126  01DC  3400               	retlw	0
   127  0017                     _CCP1CON	set	23
   128  0015                     _CCPR1L	set	21
   129  0006                     _PORTB	set	6
   130  0012                     _T2CON	set	18
   131  005F                     _GIE	set	95
   132  005C                     _INTE	set	92
   133  005E                     _PEIE	set	94
   134  003A                     _RC2	set	58
   135  0040                     _RD0	set	64
   136  0041                     _RD1	set	65
   137  005D                     _TMR0IE	set	93
   138  005A                     _TMR0IF	set	90
   139  0081                     _OPTION_REG	set	129
   140  0092                     _PR2	set	146
   141  0086                     _TRISB	set	134
   142  0087                     _TRISC	set	135
   143  0088                     _TRISD	set	136
   144                           
   145                           ; #config settings
   146  0000                     
   147                           	psect	cinit
   148  0015                     start_initialization:	
   149  0015                     __initialization:	
   150                           
   151                           ; Clear objects allocated to COMMON
   152  0015  01F0               	clrf	__pbssCOMMON& (0+127)
   153  0016  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
   154  0017  01F2               	clrf	(__pbssCOMMON+2)& (0+127)
   155  0018  01F3               	clrf	(__pbssCOMMON+3)& (0+127)
   156  0019  01F4               	clrf	(__pbssCOMMON+4)& (0+127)
   157  001A  01F5               	clrf	(__pbssCOMMON+5)& (0+127)
   158                           
   159                           ; Initialize objects allocated to BANK0
   160  001B  1383               	bcf	3,7	;select IRP bank0
   161  001C  3046               	movlw	low (__pdataBANK0+38)
   162  001D  00FD               	movwf	btemp+-1
   163  001E  3001               	movlw	high __pidataBANK0
   164  001F  00FE               	movwf	btemp
   165  0020  30B7               	movlw	low __pidataBANK0
   166  0021  00FF               	movwf	btemp+1
   167  0022  3020               	movlw	low __pdataBANK0
   168  0023  0084               	movwf	4
   169  0024  120A  118A  2229   	fcall	init_ram0
   170  0027                     end_of_initialization:	
   171                           ;End of C runtime variable initialization code
   172                           
   173  0027                     __end_of__initialization:	
   174  0027  0183               	clrf	3
   175  0028  120A  118A  282B   	ljmp	_main	;jump to C main() function
   176                           
   177                           	psect	bssCOMMON
   178  0070                     __pbssCOMMON:	
   179  0070                     _count_flag:	
   180  0070                     	ds	2
   181  0072                     _dutyCycleIndex:	
   182  0072                     	ds	2
   183  0074                     _frequencyIndex:	
   184  0074                     	ds	2
   185                           
   186                           	psect	dataBANK0
   187  0020                     __pdataBANK0:	
   188  0020                     _timerMaxCount:	
   189  0020                     	ds	30
   190  003E                     _PR2Values:	
   191  003E                     	ds	6
   192  0044                     _flag:	
   193  0044                     	ds	2
   194                           
   195                           	psect	inittext
   196  0225                     init_fetch0:	
   197                           ;	Called with low address in FSR and high address in W
   198                           
   199  0225  087E               	movf	126,w
   200  0226  008A               	movwf	10
   201  0227  087F               	movf	127,w
   202  0228  0082               	movwf	2
   203  0229                     init_ram0:	
   204                           ;Called with:
   205                           ;	high address of idata address in btemp 
   206                           ;	low address of idata address in btemp+1 
   207                           ;	low address of data in FSR
   208                           ;	high address + 1 of data in btemp-1
   209                           
   210  0229  2225  120A  118A   	fcall	init_fetch0
   211  022C  0080               	movwf	0
   212  022D  0A84               	incf	4,f
   213  022E  0804               	movf	4,w
   214  022F  067D               	xorwf	125,w
   215  0230  1903               	btfsc	3,2
   216  0231  3400               	retlw	0
   217  0232  0AFF               	incf	127,f
   218  0233  1903               	btfsc	3,2
   219  0234  0AFE               	incf	126,f
   220  0235  2A29               	goto	init_ram0
   221                           
   222                           	psect	cstackCOMMON
   223  0076                     __pcstackCOMMON:	
   224  0076                     ?_displayMode:	
   225  0076                     ?_delay:	
   226                           ; 0 bytes @ 0x0
   227                           
   228  0076                     ?_incDutyCycle:	
   229                           ; 0 bytes @ 0x0
   230                           
   231  0076                     ?_incFrequency:	
   232                           ; 0 bytes @ 0x0
   233                           
   234  0076                     ?_ISR:	
   235                           ; 0 bytes @ 0x0
   236                           
   237  0076                     ??_ISR:	
   238                           ; 0 bytes @ 0x0
   239                           
   240  0076                     ?_main:	
   241                           ; 0 bytes @ 0x0
   242                           
   243                           
   244                           ; 0 bytes @ 0x0
   245  0076                     	ds	4
   246  007A                     ??_displayMode:	
   247  007A                     ??_delay:	
   248                           ; 0 bytes @ 0x4
   249                           
   250  007A                     ??_incDutyCycle:	
   251                           ; 0 bytes @ 0x4
   252                           
   253  007A                     ??_incFrequency:	
   254                           ; 0 bytes @ 0x4
   255                           
   256                           
   257                           	psect	cstackBANK0
   258  0046                     __pcstackBANK0:	
   259                           ; 0 bytes @ 0x4
   260                           
   261  0046                     ?___bmul:	
   262  0046                     ___bmul@multiplicand:	
   263                           ; 1 bytes @ 0x0
   264                           
   265  0046                     displayMode@temp:	
   266                           ; 1 bytes @ 0x0
   267                           
   268  0046                     delay@localClock:	
   269                           ; 2 bytes @ 0x0
   270                           
   271                           
   272                           ; 2 bytes @ 0x0
   273  0046                     	ds	1
   274  0047                     ??___bmul:	
   275                           
   276                           ; 0 bytes @ 0x1
   277  0047                     	ds	1
   278  0048                     ___bmul@product:	
   279  0048                     displayMode@temp2:	
   280                           ; 1 bytes @ 0x2
   281                           
   282                           
   283                           ; 2 bytes @ 0x2
   284  0048                     	ds	1
   285  0049                     ___bmul@multiplier:	
   286                           
   287                           ; 1 bytes @ 0x3
   288  0049                     	ds	1
   289  004A                     ??_main:	
   290                           
   291                           ; 0 bytes @ 0x4
   292  004A                     	ds	5
   293                           
   294                           	psect	maintext
   295  002B                     __pmaintext:	
   296 ;;
   297 ;;Main: autosize = 0, tempsize = 5, incstack = 0, save=0
   298 ;;
   299 ;; *************** function _main *****************
   300 ;; Defined at:
   301 ;;		line 71 in file "C:\Users\notjo\OneDrive\Desktop\USC\USC-Year3-Sem2\3201-EmbeddedSystems\Labs\LE_04\LE4-7\LE4-7.c"
   302 ;; Parameters:    Size  Location     Type
   303 ;;		None
   304 ;; Auto vars:     Size  Location     Type
   305 ;;		None
   306 ;; Return value:  Size  Location     Type
   307 ;;		None               void
   308 ;; Registers used:
   309 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   310 ;; Tracked objects:
   311 ;;		On entry : 17F/0
   312 ;;		On exit  : 0/0
   313 ;;		Unchanged: 0/0
   314 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   315 ;;      Params:         0       0       0       0       0
   316 ;;      Locals:         0       0       0       0       0
   317 ;;      Temps:          0       5       0       0       0
   318 ;;      Totals:         0       5       0       0       0
   319 ;;Total ram usage:        5 bytes
   320 ;; Hardware stack levels required when called:    2
   321 ;; This function calls:
   322 ;;		___bmul
   323 ;;		_delay
   324 ;;		_displayMode
   325 ;;		_incDutyCycle
   326 ;;		_incFrequency
   327 ;; This function is called by:
   328 ;;		Startup code after reset
   329 ;; This function uses a non-reentrant model
   330 ;;
   331                           
   332                           
   333                           ;psect for function _main
   334  002B                     _main:	
   335                           
   336                           ;LE4-7.c: 74: PR2 = PR2Values[frequencyIndex];
   337                           
   338                           ;incstack = 0
   339                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   340  002B  0874               	movf	_frequencyIndex,w
   341  002C  1283               	bcf	3,5	;RP0=0, select bank0
   342  002D  1303               	bcf	3,6	;RP1=0, select bank0
   343  002E  00CA               	movwf	??_main
   344  002F  074A               	addwf	??_main,w
   345  0030  3E3E               	addlw	_PR2Values& (0+255)
   346  0031  0084               	movwf	4
   347  0032  1383               	bcf	3,7	;select IRP bank0
   348  0033  0800               	movf	0,w
   349  0034  1683               	bsf	3,5	;RP0=1, select bank1
   350  0035  1303               	bcf	3,6	;RP1=0, select bank1
   351  0036  0092               	movwf	18	;volatile
   352                           
   353                           ;LE4-7.c: 75: CCPR1L = (timerMaxCount[frequencyIndex][dutyCycleIndex] & 0x3FC) >> 2;
   354  0037  0872               	movf	_dutyCycleIndex,w
   355  0038  1283               	bcf	3,5	;RP0=0, select bank0
   356  0039  1303               	bcf	3,6	;RP1=0, select bank0
   357  003A  00CA               	movwf	??_main
   358  003B  3001               	movlw	1
   359  003C                     u385:	
   360  003C  1003               	clrc
   361  003D  0DCA               	rlf	??_main,f
   362  003E  3EFF               	addlw	-1
   363  003F  1D03               	skipz
   364  0040  283C               	goto	u385
   365  0041  300A               	movlw	10
   366  0042  00CB               	movwf	??_main+1
   367  0043  084B               	movf	??_main+1,w
   368  0044  00C6               	movwf	___bmul@multiplicand
   369  0045  0874               	movf	_frequencyIndex,w
   370  0046  120A  118A  2212  120A  118A  	fcall	___bmul
   371  004B  3E20               	addlw	_timerMaxCount& (0+255)
   372  004C  1283               	bcf	3,5	;RP0=0, select bank0
   373  004D  1303               	bcf	3,6	;RP1=0, select bank0
   374  004E  074A               	addwf	??_main,w
   375  004F  00CC               	movwf	??_main+2
   376  0050  084C               	movf	??_main+2,w
   377  0051  0084               	movwf	4
   378  0052  1383               	bcf	3,7	;select IRP bank0
   379  0053  0800               	movf	0,w
   380  0054  00CD               	movwf	??_main+3
   381  0055  0A84               	incf	4,f
   382  0056  0800               	movf	0,w
   383  0057  00CE               	movwf	??_main+4
   384  0058  1003               	clrc
   385  0059  0CCE               	rrf	??_main+4,f
   386  005A  0CCD               	rrf	??_main+3,f
   387  005B  1003               	clrc
   388  005C  0CCE               	rrf	??_main+4,f
   389  005D  0CCD               	rrf	??_main+3,f
   390  005E  084D               	movf	??_main+3,w
   391  005F  0095               	movwf	21	;volatile
   392                           
   393                           ;LE4-7.c: 76: CCP1CON = ((timerMaxCount[frequencyIndex][dutyCycleIndex] & 0x003) << 4) +
      +                           0x0C;
   394  0060  0872               	movf	_dutyCycleIndex,w
   395  0061  00CA               	movwf	??_main
   396  0062  3001               	movlw	1
   397  0063                     u395:	
   398  0063  1003               	clrc
   399  0064  0DCA               	rlf	??_main,f
   400  0065  3EFF               	addlw	-1
   401  0066  1D03               	skipz
   402  0067  2863               	goto	u395
   403  0068  300A               	movlw	10
   404  0069  00CB               	movwf	??_main+1
   405  006A  084B               	movf	??_main+1,w
   406  006B  00C6               	movwf	___bmul@multiplicand
   407  006C  0874               	movf	_frequencyIndex,w
   408  006D  120A  118A  2212  120A  118A  	fcall	___bmul
   409  0072  3E20               	addlw	_timerMaxCount& (0+255)
   410  0073  1283               	bcf	3,5	;RP0=0, select bank0
   411  0074  1303               	bcf	3,6	;RP1=0, select bank0
   412  0075  074A               	addwf	??_main,w
   413  0076  00CC               	movwf	??_main+2
   414  0077  084C               	movf	??_main+2,w
   415  0078  0084               	movwf	4
   416  0079  1383               	bcf	3,7	;select IRP bank0
   417  007A  0800               	movf	0,w
   418  007B  3903               	andlw	3
   419  007C  00CD               	movwf	??_main+3
   420  007D  3003               	movlw	3
   421  007E                     u405:	
   422  007E  1003               	clrc
   423  007F  0DCD               	rlf	??_main+3,f
   424  0080  3EFF               	addlw	-1
   425  0081  1D03               	skipz
   426  0082  287E               	goto	u405
   427  0083  1003               	clrc
   428  0084  0D4D               	rlf	??_main+3,w
   429  0085  3E0C               	addlw	12
   430  0086  0097               	movwf	23	;volatile
   431                           
   432                           ;LE4-7.c: 77: T2CON = 0x06;
   433  0087  3006               	movlw	6
   434  0088  0092               	movwf	18	;volatile
   435                           
   436                           ;LE4-7.c: 80: OPTION_REG = 0x44;
   437  0089  3044               	movlw	68
   438  008A  1683               	bsf	3,5	;RP0=1, select bank1
   439  008B  1303               	bcf	3,6	;RP1=0, select bank1
   440  008C  0081               	movwf	1	;volatile
   441                           
   442                           ;LE4-7.c: 82: GIE = 1;
   443  008D  178B               	bsf	11,7	;volatile
   444                           
   445                           ;LE4-7.c: 83: PEIE = 1;
   446  008E  170B               	bsf	11,6	;volatile
   447                           
   448                           ;LE4-7.c: 84: INTE = 1;
   449  008F  160B               	bsf	11,4	;volatile
   450                           
   451                           ;LE4-7.c: 85: TMR0IE = 1;
   452  0090  168B               	bsf	11,5	;volatile
   453                           
   454                           ;LE4-7.c: 86: TMR0IF = 0;
   455  0091  110B               	bcf	11,2	;volatile
   456                           
   457                           ;LE4-7.c: 89: TRISC = 0x00;
   458  0092  0187               	clrf	7	;volatile
   459                           
   460                           ;LE4-7.c: 90: TRISD = 0xFF;
   461  0093  30FF               	movlw	255
   462  0094  0088               	movwf	8	;volatile
   463                           
   464                           ;LE4-7.c: 91: TRISB = 0x00;
   465  0095  0186               	clrf	6	;volatile
   466                           
   467                           ;LE4-7.c: 92: RC2 = 0;
   468  0096  1283               	bcf	3,5	;RP0=0, select bank0
   469  0097  1303               	bcf	3,6	;RP1=0, select bank0
   470  0098  1107               	bcf	7,2	;volatile
   471  0099                     L1:	
   472                           
   473                           ;LE4-7.c: 95: displayMode();
   474  0099  120A  118A  216E  120A  118A  	fcall	_displayMode
   475  009E                     l998:	
   476                           ;LE4-7.c: 97: for(;;)
   477                           
   478                           
   479                           ;LE4-7.c: 98: {
   480                           ;LE4-7.c: 100: if(RD0 == 1)
   481  009E  1283               	bcf	3,5	;RP0=0, select bank0
   482  009F  1303               	bcf	3,6	;RP1=0, select bank0
   483  00A0  1C08               	btfss	8,0	;volatile
   484  00A1  290D               	goto	l1012
   485                           
   486                           ;LE4-7.c: 101: {
   487                           ;LE4-7.c: 102: delay();
   488  00A2  120A  118A  21DD  120A  118A  	fcall	_delay
   489                           
   490                           ;LE4-7.c: 103: incDutyCycle();
   491  00A7  120A  118A  2247  120A  118A  	fcall	_incDutyCycle
   492                           
   493                           ;LE4-7.c: 104: PR2 = PR2Values[frequencyIndex];
   494  00AC  0874               	movf	_frequencyIndex,w
   495  00AD  1283               	bcf	3,5	;RP0=0, select bank0
   496  00AE  1303               	bcf	3,6	;RP1=0, select bank0
   497  00AF  00CA               	movwf	??_main
   498  00B0  074A               	addwf	??_main,w
   499  00B1  3E3E               	addlw	_PR2Values& (0+255)
   500  00B2  0084               	movwf	4
   501  00B3  1383               	bcf	3,7	;select IRP bank0
   502  00B4  0800               	movf	0,w
   503  00B5  1683               	bsf	3,5	;RP0=1, select bank1
   504  00B6  1303               	bcf	3,6	;RP1=0, select bank1
   505  00B7  0092               	movwf	18	;volatile
   506                           
   507                           ;LE4-7.c: 105: CCPR1L = (timerMaxCount[frequencyIndex][dutyCycleIndex] & 0x3FC) >> 2;
   508  00B8  0872               	movf	_dutyCycleIndex,w
   509  00B9  1283               	bcf	3,5	;RP0=0, select bank0
   510  00BA  1303               	bcf	3,6	;RP1=0, select bank0
   511  00BB  00CA               	movwf	??_main
   512  00BC  3001               	movlw	1
   513  00BD                     u425:	
   514  00BD  1003               	clrc
   515  00BE  0DCA               	rlf	??_main,f
   516  00BF  3EFF               	addlw	-1
   517  00C0  1D03               	skipz
   518  00C1  28BD               	goto	u425
   519  00C2  300A               	movlw	10
   520  00C3  00CB               	movwf	??_main+1
   521  00C4  084B               	movf	??_main+1,w
   522  00C5  00C6               	movwf	___bmul@multiplicand
   523  00C6  0874               	movf	_frequencyIndex,w
   524  00C7  120A  118A  2212  120A  118A  	fcall	___bmul
   525  00CC  3E20               	addlw	_timerMaxCount& (0+255)
   526  00CD  1283               	bcf	3,5	;RP0=0, select bank0
   527  00CE  1303               	bcf	3,6	;RP1=0, select bank0
   528  00CF  074A               	addwf	??_main,w
   529  00D0  00CC               	movwf	??_main+2
   530  00D1  084C               	movf	??_main+2,w
   531  00D2  0084               	movwf	4
   532  00D3  1383               	bcf	3,7	;select IRP bank0
   533  00D4  0800               	movf	0,w
   534  00D5  00CD               	movwf	??_main+3
   535  00D6  0A84               	incf	4,f
   536  00D7  0800               	movf	0,w
   537  00D8  00CE               	movwf	??_main+4
   538  00D9  1003               	clrc
   539  00DA  0CCE               	rrf	??_main+4,f
   540  00DB  0CCD               	rrf	??_main+3,f
   541  00DC  1003               	clrc
   542  00DD  0CCE               	rrf	??_main+4,f
   543  00DE  0CCD               	rrf	??_main+3,f
   544  00DF  084D               	movf	??_main+3,w
   545  00E0  0095               	movwf	21	;volatile
   546                           
   547                           ;LE4-7.c: 106: CCP1CON = ((timerMaxCount[frequencyIndex][dutyCycleIndex] & 0x003) << 4) 
      +                          + 0x0C;
   548  00E1  0872               	movf	_dutyCycleIndex,w
   549  00E2  00CA               	movwf	??_main
   550  00E3  3001               	movlw	1
   551  00E4                     u435:	
   552  00E4  1003               	clrc
   553  00E5  0DCA               	rlf	??_main,f
   554  00E6  3EFF               	addlw	-1
   555  00E7  1D03               	skipz
   556  00E8  28E4               	goto	u435
   557  00E9  300A               	movlw	10
   558  00EA  00CB               	movwf	??_main+1
   559  00EB  084B               	movf	??_main+1,w
   560  00EC  00C6               	movwf	___bmul@multiplicand
   561  00ED  0874               	movf	_frequencyIndex,w
   562  00EE  120A  118A  2212  120A  118A  	fcall	___bmul
   563  00F3  3E20               	addlw	_timerMaxCount& (0+255)
   564  00F4  1283               	bcf	3,5	;RP0=0, select bank0
   565  00F5  1303               	bcf	3,6	;RP1=0, select bank0
   566  00F6  074A               	addwf	??_main,w
   567  00F7  00CC               	movwf	??_main+2
   568  00F8  084C               	movf	??_main+2,w
   569  00F9  0084               	movwf	4
   570  00FA  1383               	bcf	3,7	;select IRP bank0
   571  00FB  0800               	movf	0,w
   572  00FC  3903               	andlw	3
   573  00FD  00CD               	movwf	??_main+3
   574  00FE  3003               	movlw	3
   575  00FF                     u445:	
   576  00FF  1003               	clrc
   577  0100  0DCD               	rlf	??_main+3,f
   578  0101  3EFF               	addlw	-1
   579  0102  1D03               	skipz
   580  0103  28FF               	goto	u445
   581  0104  1003               	clrc
   582  0105  0D4D               	rlf	??_main+3,w
   583  0106  3E0C               	addlw	12
   584  0107  0097               	movwf	23	;volatile
   585                           
   586                           ;LE4-7.c: 107: displayMode();
   587  0108  120A  118A  216E  120A  118A  	fcall	_displayMode
   588  010D                     l1012:	
   589                           
   590                           ;LE4-7.c: 108: }
   591                           ;LE4-7.c: 109: if(RD1 == 1)
   592  010D  1283               	bcf	3,5	;RP0=0, select bank0
   593  010E  1303               	bcf	3,6	;RP1=0, select bank0
   594  010F  1C88               	btfss	8,1	;volatile
   595  0110  289E               	goto	l998
   596                           
   597                           ;LE4-7.c: 110: {
   598                           ;LE4-7.c: 111: delay();
   599  0111  120A  118A  21DD  120A  118A  	fcall	_delay
   600                           
   601                           ;LE4-7.c: 112: incFrequency();
   602  0116  120A  118A  2236  120A  118A  	fcall	_incFrequency
   603                           
   604                           ;LE4-7.c: 113: PR2 = PR2Values[frequencyIndex];
   605  011B  0874               	movf	_frequencyIndex,w
   606  011C  1283               	bcf	3,5	;RP0=0, select bank0
   607  011D  1303               	bcf	3,6	;RP1=0, select bank0
   608  011E  00CA               	movwf	??_main
   609  011F  074A               	addwf	??_main,w
   610  0120  3E3E               	addlw	_PR2Values& (0+255)
   611  0121  0084               	movwf	4
   612  0122  1383               	bcf	3,7	;select IRP bank0
   613  0123  0800               	movf	0,w
   614  0124  1683               	bsf	3,5	;RP0=1, select bank1
   615  0125  1303               	bcf	3,6	;RP1=0, select bank1
   616  0126  0092               	movwf	18	;volatile
   617                           
   618                           ;LE4-7.c: 114: CCPR1L = timerMaxCount[frequencyIndex][dutyCycleIndex] & 0x003;
   619  0127  0872               	movf	_dutyCycleIndex,w
   620  0128  1283               	bcf	3,5	;RP0=0, select bank0
   621  0129  1303               	bcf	3,6	;RP1=0, select bank0
   622  012A  00CA               	movwf	??_main
   623  012B  3001               	movlw	1
   624  012C                     u465:	
   625  012C  1003               	clrc
   626  012D  0DCA               	rlf	??_main,f
   627  012E  3EFF               	addlw	-1
   628  012F  1D03               	skipz
   629  0130  292C               	goto	u465
   630  0131  300A               	movlw	10
   631  0132  00CB               	movwf	??_main+1
   632  0133  084B               	movf	??_main+1,w
   633  0134  00C6               	movwf	___bmul@multiplicand
   634  0135  0874               	movf	_frequencyIndex,w
   635  0136  120A  118A  2212  120A  118A  	fcall	___bmul
   636  013B  3E20               	addlw	_timerMaxCount& (0+255)
   637  013C  1283               	bcf	3,5	;RP0=0, select bank0
   638  013D  1303               	bcf	3,6	;RP1=0, select bank0
   639  013E  074A               	addwf	??_main,w
   640  013F  00CC               	movwf	??_main+2
   641  0140  084C               	movf	??_main+2,w
   642  0141  0084               	movwf	4
   643  0142  1383               	bcf	3,7	;select IRP bank0
   644  0143  0800               	movf	0,w
   645  0144  3903               	andlw	3
   646  0145  0095               	movwf	21	;volatile
   647                           
   648                           ;LE4-7.c: 115: CCP1CON = (timerMaxCount[frequencyIndex][dutyCycleIndex] & 0x3FC) >> 2;
   649  0146  0872               	movf	_dutyCycleIndex,w
   650  0147  00CA               	movwf	??_main
   651  0148  3001               	movlw	1
   652  0149                     u475:	
   653  0149  1003               	clrc
   654  014A  0DCA               	rlf	??_main,f
   655  014B  3EFF               	addlw	-1
   656  014C  1D03               	skipz
   657  014D  2949               	goto	u475
   658  014E  300A               	movlw	10
   659  014F  00CB               	movwf	??_main+1
   660  0150  084B               	movf	??_main+1,w
   661  0151  00C6               	movwf	___bmul@multiplicand
   662  0152  0874               	movf	_frequencyIndex,w
   663  0153  120A  118A  2212  120A  118A  	fcall	___bmul
   664  0158  3E20               	addlw	_timerMaxCount& (0+255)
   665  0159  1283               	bcf	3,5	;RP0=0, select bank0
   666  015A  1303               	bcf	3,6	;RP1=0, select bank0
   667  015B  074A               	addwf	??_main,w
   668  015C  00CC               	movwf	??_main+2
   669  015D  084C               	movf	??_main+2,w
   670  015E  0084               	movwf	4
   671  015F  1383               	bcf	3,7	;select IRP bank0
   672  0160  0800               	movf	0,w
   673  0161  00CD               	movwf	??_main+3
   674  0162  0A84               	incf	4,f
   675  0163  0800               	movf	0,w
   676  0164  00CE               	movwf	??_main+4
   677  0165  1003               	clrc
   678  0166  0CCE               	rrf	??_main+4,f
   679  0167  0CCD               	rrf	??_main+3,f
   680  0168  1003               	clrc
   681  0169  0CCE               	rrf	??_main+4,f
   682  016A  0CCD               	rrf	??_main+3,f
   683  016B  084D               	movf	??_main+3,w
   684  016C  0097               	movwf	23	;volatile
   685  016D  2899               	goto	L1
   686  016E                     __end_of_main:	
   687                           ;LE4-7.c: 117: }
   688                           ;LE4-7.c: 118: }
   689                           
   690                           ;LE4-7.c: 116: displayMode();
   691                           
   692                           
   693                           	psect	text1
   694  0236                     __ptext1:	
   695 ;; *************** function _incFrequency *****************
   696 ;; Defined at:
   697 ;;		line 191 in file "C:\Users\notjo\OneDrive\Desktop\USC\USC-Year3-Sem2\3201-EmbeddedSystems\Labs\LE_04\LE4-7\LE4-7.c"
   698 ;; Parameters:    Size  Location     Type
   699 ;;		None
   700 ;; Auto vars:     Size  Location     Type
   701 ;;		None
   702 ;; Return value:  Size  Location     Type
   703 ;;		None               void
   704 ;; Registers used:
   705 ;;		wreg, status,2
   706 ;; Tracked objects:
   707 ;;		On entry : 0/0
   708 ;;		On exit  : 0/0
   709 ;;		Unchanged: 0/0
   710 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   711 ;;      Params:         0       0       0       0       0
   712 ;;      Locals:         0       0       0       0       0
   713 ;;      Temps:          0       0       0       0       0
   714 ;;      Totals:         0       0       0       0       0
   715 ;;Total ram usage:        0 bytes
   716 ;; Hardware stack levels used:    1
   717 ;; Hardware stack levels required when called:    1
   718 ;; This function calls:
   719 ;;		Nothing
   720 ;; This function is called by:
   721 ;;		_main
   722 ;; This function uses a non-reentrant model
   723 ;;
   724                           
   725                           
   726                           ;psect for function _incFrequency
   727  0236                     _incFrequency:	
   728                           
   729                           ;LE4-7.c: 193: if(frequencyIndex < 2)
   730                           
   731                           ;incstack = 0
   732                           ; Regs used in _incFrequency: [wreg+status,2]
   733  0236  3000               	movlw	0
   734  0237  0275               	subwf	_frequencyIndex+1,w
   735  0238  3002               	movlw	2
   736  0239  1903               	skipnz
   737  023A  0274               	subwf	_frequencyIndex,w
   738  023B  1803               	skipnc
   739  023C  2A44               	goto	l790
   740                           
   741                           ;LE4-7.c: 194: frequencyIndex++;
   742  023D  3001               	movlw	1
   743  023E  07F4               	addwf	_frequencyIndex,f
   744  023F  1803               	skipnc
   745  0240  0AF5               	incf	_frequencyIndex+1,f
   746  0241  3000               	movlw	0
   747  0242  07F5               	addwf	_frequencyIndex+1,f
   748  0243  0008               	return
   749  0244                     l790:	
   750                           
   751                           ;LE4-7.c: 195: else
   752                           ;LE4-7.c: 196: frequencyIndex = 0;
   753  0244  01F4               	clrf	_frequencyIndex
   754  0245  01F5               	clrf	_frequencyIndex+1
   755  0246  0008               	return
   756  0247                     __end_of_incFrequency:	
   757                           
   758                           	psect	text2
   759  0247                     __ptext2:	
   760 ;; *************** function _incDutyCycle *****************
   761 ;; Defined at:
   762 ;;		line 183 in file "C:\Users\notjo\OneDrive\Desktop\USC\USC-Year3-Sem2\3201-EmbeddedSystems\Labs\LE_04\LE4-7\LE4-7.c"
   763 ;; Parameters:    Size  Location     Type
   764 ;;		None
   765 ;; Auto vars:     Size  Location     Type
   766 ;;		None
   767 ;; Return value:  Size  Location     Type
   768 ;;		None               void
   769 ;; Registers used:
   770 ;;		wreg, status,2
   771 ;; Tracked objects:
   772 ;;		On entry : 0/0
   773 ;;		On exit  : 0/0
   774 ;;		Unchanged: 0/0
   775 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   776 ;;      Params:         0       0       0       0       0
   777 ;;      Locals:         0       0       0       0       0
   778 ;;      Temps:          0       0       0       0       0
   779 ;;      Totals:         0       0       0       0       0
   780 ;;Total ram usage:        0 bytes
   781 ;; Hardware stack levels used:    1
   782 ;; Hardware stack levels required when called:    1
   783 ;; This function calls:
   784 ;;		Nothing
   785 ;; This function is called by:
   786 ;;		_main
   787 ;; This function uses a non-reentrant model
   788 ;;
   789                           
   790                           
   791                           ;psect for function _incDutyCycle
   792  0247                     _incDutyCycle:	
   793                           
   794                           ;LE4-7.c: 185: if(dutyCycleIndex < 4)
   795                           
   796                           ;incstack = 0
   797                           ; Regs used in _incDutyCycle: [wreg+status,2]
   798  0247  3000               	movlw	0
   799  0248  0273               	subwf	_dutyCycleIndex+1,w
   800  0249  3004               	movlw	4
   801  024A  1903               	skipnz
   802  024B  0272               	subwf	_dutyCycleIndex,w
   803  024C  1803               	skipnc
   804  024D  2A55               	goto	l784
   805                           
   806                           ;LE4-7.c: 186: dutyCycleIndex++;
   807  024E  3001               	movlw	1
   808  024F  07F2               	addwf	_dutyCycleIndex,f
   809  0250  1803               	skipnc
   810  0251  0AF3               	incf	_dutyCycleIndex+1,f
   811  0252  3000               	movlw	0
   812  0253  07F3               	addwf	_dutyCycleIndex+1,f
   813  0254  0008               	return
   814  0255                     l784:	
   815                           
   816                           ;LE4-7.c: 187: else
   817                           ;LE4-7.c: 188: dutyCycleIndex = 0;
   818  0255  01F2               	clrf	_dutyCycleIndex
   819  0256  01F3               	clrf	_dutyCycleIndex+1
   820  0257  0008               	return
   821  0258                     __end_of_incDutyCycle:	
   822                           
   823                           	psect	text3
   824  016E                     __ptext3:	
   825 ;; *************** function _displayMode *****************
   826 ;; Defined at:
   827 ;;		line 121 in file "C:\Users\notjo\OneDrive\Desktop\USC\USC-Year3-Sem2\3201-EmbeddedSystems\Labs\LE_04\LE4-7\LE4-7.c"
   828 ;; Parameters:    Size  Location     Type
   829 ;;		None
   830 ;; Auto vars:     Size  Location     Type
   831 ;;  temp2           2    2[BANK0 ] unsigned int 
   832 ;;  temp            2    0[BANK0 ] unsigned int 
   833 ;; Return value:  Size  Location     Type
   834 ;;		None               void
   835 ;; Registers used:
   836 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   837 ;; Tracked objects:
   838 ;;		On entry : 0/0
   839 ;;		On exit  : 0/0
   840 ;;		Unchanged: 0/0
   841 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   842 ;;      Params:         0       0       0       0       0
   843 ;;      Locals:         0       4       0       0       0
   844 ;;      Temps:          0       0       0       0       0
   845 ;;      Totals:         0       4       0       0       0
   846 ;;Total ram usage:        4 bytes
   847 ;; Hardware stack levels used:    1
   848 ;; Hardware stack levels required when called:    1
   849 ;; This function calls:
   850 ;;		Nothing
   851 ;; This function is called by:
   852 ;;		_main
   853 ;; This function uses a non-reentrant model
   854 ;;
   855                           
   856                           
   857                           ;psect for function _displayMode
   858  016E                     _displayMode:	
   859                           
   860                           ;LE4-7.c: 130: PORTB = 0x00;
   861                           
   862                           ;incstack = 0
   863                           ; Regs used in _displayMode: [wreg-fsr0h+status,2+status,0]
   864  016E  1283               	bcf	3,5	;RP0=0, select bank0
   865  016F  1303               	bcf	3,6	;RP1=0, select bank0
   866  0170  0186               	clrf	6	;volatile
   867                           
   868                           ;LE4-7.c: 131: unsigned int temp = 0x00;
   869  0171  01C6               	clrf	displayMode@temp
   870  0172  01C7               	clrf	displayMode@temp+1
   871                           
   872                           ;LE4-7.c: 132: unsigned int temp2 = 0x00;
   873  0173  01C8               	clrf	displayMode@temp2
   874  0174  01C9               	clrf	displayMode@temp2+1
   875                           
   876                           ;LE4-7.c: 133: switch(frequencyIndex)
   877  0175  297F               	goto	l916
   878  0176                     l908:	
   879                           ;LE4-7.c: 134: {
   880                           ;LE4-7.c: 135: case 0:
   881                           
   882                           
   883                           ;LE4-7.c: 136: temp = 0x01;
   884  0176  3001               	movlw	1
   885  0177  297B               	goto	L3
   886  0178                     l910:	
   887                           ;LE4-7.c: 138: case 1:
   888                           
   889                           ;LE4-7.c: 137: break;
   890                           
   891                           
   892                           ;LE4-7.c: 139: temp = 0x02;
   893  0178  3002               	movlw	2
   894  0179  297B               	goto	L3
   895  017A                     l912:	
   896                           ;LE4-7.c: 141: case 2:
   897                           
   898                           ;LE4-7.c: 140: break;
   899                           
   900                           
   901                           ;LE4-7.c: 142: temp = 0x03;
   902  017A  3003               	movlw	3
   903  017B                     L3:	
   904  017B  00C6               	movwf	displayMode@temp
   905  017C  3000               	movlw	0
   906  017D  00C7               	movwf	displayMode@temp+1
   907                           
   908                           ;LE4-7.c: 144: }
   909                           
   910                           ;LE4-7.c: 143: break;
   911  017E  299D               	goto	l930
   912  017F                     l916:	
   913                           
   914                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   915                           ; Switch size 1, requested type "space"
   916                           ; Number of cases is 1, Range of values is 0 to 0
   917                           ; switch strategies available:
   918                           ; Name         Instructions Cycles
   919                           ; simple_byte            4     3 (average)
   920                           ; direct_byte           11     8 (fixed)
   921                           ; jumptable            260     6 (fixed)
   922                           ;	Chosen strategy is simple_byte
   923  017F  0875               	movf	_frequencyIndex+1,w
   924  0180  3A00               	xorlw	0	; case 0
   925  0181  1903               	skipnz
   926  0182  2984               	goto	l1066
   927  0183  299D               	goto	l930
   928  0184                     l1066:	
   929                           
   930                           ; Switch size 1, requested type "space"
   931                           ; Number of cases is 3, Range of values is 0 to 2
   932                           ; switch strategies available:
   933                           ; Name         Instructions Cycles
   934                           ; simple_byte           10     6 (average)
   935                           ; direct_byte           17     8 (fixed)
   936                           ; jumptable            260     6 (fixed)
   937                           ;	Chosen strategy is simple_byte
   938  0184  0874               	movf	_frequencyIndex,w
   939  0185  3A00               	xorlw	0	; case 0
   940  0186  1903               	skipnz
   941  0187  2976               	goto	l908
   942  0188  3A01               	xorlw	1	; case 1
   943  0189  1903               	skipnz
   944  018A  2978               	goto	l910
   945  018B  3A03               	xorlw	3	; case 2
   946  018C  1903               	skipnz
   947  018D  297A               	goto	l912
   948  018E  299D               	goto	l930
   949                           
   950                           ;LE4-7.c: 145: switch(dutyCycleIndex)
   951  018F  299D               	goto	l930
   952  0190                     l918:	
   953                           ;LE4-7.c: 146: {
   954                           ;LE4-7.c: 147: case 0:
   955                           
   956                           
   957                           ;LE4-7.c: 148: temp2 = 0x01 << 2;
   958  0190  3004               	movlw	4
   959  0191  2999               	goto	L7
   960  0192                     l920:	
   961                           ;LE4-7.c: 150: case 1:
   962                           
   963                           ;LE4-7.c: 149: break;
   964                           
   965                           
   966                           ;LE4-7.c: 151: temp2 = 0x02 << 2;
   967  0192  3008               	movlw	8
   968  0193  2999               	goto	L7
   969  0194                     l922:	
   970                           ;LE4-7.c: 153: case 2:
   971                           
   972                           ;LE4-7.c: 152: break;
   973                           
   974                           
   975                           ;LE4-7.c: 154: temp2 = 0x03 << 2;
   976  0194  300C               	movlw	12
   977  0195  2999               	goto	L7
   978  0196                     l924:	
   979                           ;LE4-7.c: 156: case 3:
   980                           
   981                           ;LE4-7.c: 155: break;
   982                           
   983                           
   984                           ;LE4-7.c: 157: temp2 = 0x04 << 2;
   985  0196  3010               	movlw	16
   986  0197  2999               	goto	L7
   987  0198                     l926:	
   988                           ;LE4-7.c: 159: case 4:
   989                           
   990                           ;LE4-7.c: 158: break;
   991                           
   992                           
   993                           ;LE4-7.c: 160: temp2 = 0x05 << 2;
   994  0198  3014               	movlw	20
   995  0199                     L7:	
   996  0199  00C8               	movwf	displayMode@temp2
   997  019A  3000               	movlw	0
   998  019B  00C9               	movwf	displayMode@temp2+1
   999                           
  1000                           ;LE4-7.c: 162: }
  1001                           
  1002                           ;LE4-7.c: 161: break;
  1003  019C  29B3               	goto	l932
  1004  019D                     l930:	
  1005                           
  1006                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1007                           ; Switch size 1, requested type "space"
  1008                           ; Number of cases is 1, Range of values is 0 to 0
  1009                           ; switch strategies available:
  1010                           ; Name         Instructions Cycles
  1011                           ; simple_byte            4     3 (average)
  1012                           ; direct_byte           11     8 (fixed)
  1013                           ; jumptable            260     6 (fixed)
  1014                           ;	Chosen strategy is simple_byte
  1015  019D  0873               	movf	_dutyCycleIndex+1,w
  1016  019E  3A00               	xorlw	0	; case 0
  1017  019F  1903               	skipnz
  1018  01A0  29A2               	goto	l1068
  1019  01A1  29B3               	goto	l932
  1020  01A2                     l1068:	
  1021                           
  1022                           ; Switch size 1, requested type "space"
  1023                           ; Number of cases is 5, Range of values is 0 to 4
  1024                           ; switch strategies available:
  1025                           ; Name         Instructions Cycles
  1026                           ; simple_byte           16     9 (average)
  1027                           ; direct_byte           23     8 (fixed)
  1028                           ; jumptable            260     6 (fixed)
  1029                           ;	Chosen strategy is simple_byte
  1030  01A2  0872               	movf	_dutyCycleIndex,w
  1031  01A3  3A00               	xorlw	0	; case 0
  1032  01A4  1903               	skipnz
  1033  01A5  2990               	goto	l918
  1034  01A6  3A01               	xorlw	1	; case 1
  1035  01A7  1903               	skipnz
  1036  01A8  2992               	goto	l920
  1037  01A9  3A03               	xorlw	3	; case 2
  1038  01AA  1903               	skipnz
  1039  01AB  2994               	goto	l922
  1040  01AC  3A01               	xorlw	1	; case 3
  1041  01AD  1903               	skipnz
  1042  01AE  2996               	goto	l924
  1043  01AF  3A07               	xorlw	7	; case 4
  1044  01B0  1903               	skipnz
  1045  01B1  2998               	goto	l926
  1046  01B2  29B3               	goto	l932
  1047  01B3                     l932:	
  1048                           
  1049                           ;LE4-7.c: 163: PORTB = temp + temp2;
  1050  01B3  0848               	movf	displayMode@temp2,w
  1051  01B4  0746               	addwf	displayMode@temp,w
  1052  01B5  0086               	movwf	6	;volatile
  1053  01B6  0008               	return
  1054  01B7                     __end_of_displayMode:	
  1055                           
  1056                           	psect	text4
  1057  01DD                     __ptext4:	
  1058 ;; *************** function _delay *****************
  1059 ;; Defined at:
  1060 ;;		line 166 in file "C:\Users\notjo\OneDrive\Desktop\USC\USC-Year3-Sem2\3201-EmbeddedSystems\Labs\LE_04\LE4-7\LE4-7.c"
  1061 ;; Parameters:    Size  Location     Type
  1062 ;;		None
  1063 ;; Auto vars:     Size  Location     Type
  1064 ;;  localClock      2    0[BANK0 ] int 
  1065 ;; Return value:  Size  Location     Type
  1066 ;;		None               void
  1067 ;; Registers used:
  1068 ;;		wreg, status,2, btemp+1
  1069 ;; Tracked objects:
  1070 ;;		On entry : 0/0
  1071 ;;		On exit  : 0/0
  1072 ;;		Unchanged: 0/0
  1073 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1074 ;;      Params:         0       0       0       0       0
  1075 ;;      Locals:         0       2       0       0       0
  1076 ;;      Temps:          0       0       0       0       0
  1077 ;;      Totals:         0       2       0       0       0
  1078 ;;Total ram usage:        2 bytes
  1079 ;; Hardware stack levels used:    1
  1080 ;; Hardware stack levels required when called:    1
  1081 ;; This function calls:
  1082 ;;		Nothing
  1083 ;; This function is called by:
  1084 ;;		_main
  1085 ;; This function uses a non-reentrant model
  1086 ;;
  1087                           
  1088                           
  1089                           ;psect for function _delay
  1090  01DD                     _delay:	
  1091                           
  1092                           ;LE4-7.c: 171: int localClock = 0;
  1093                           
  1094                           ;incstack = 0
  1095                           ; Regs used in _delay: [wreg+status,2+btemp+1]
  1096  01DD  1283               	bcf	3,5	;RP0=0, select bank0
  1097  01DE  1303               	bcf	3,6	;RP1=0, select bank0
  1098  01DF  01C6               	clrf	delay@localClock
  1099  01E0  01C7               	clrf	delay@localClock+1
  1100  01E1                     l950:	
  1101                           ;LE4-7.c: 172: while(localClock < 98)
  1102                           
  1103  01E1  1283               	bcf	3,5	;RP0=0, select bank0
  1104  01E2  1303               	bcf	3,6	;RP1=0, select bank0
  1105  01E3  0847               	movf	delay@localClock+1,w
  1106  01E4  3A80               	xorlw	128
  1107  01E5  00FF               	movwf	127
  1108  01E6  3080               	movlw	128
  1109  01E7  027F               	subwf	127,w
  1110  01E8  1D03               	skipz
  1111  01E9  29EC               	goto	u355
  1112  01EA  3062               	movlw	98
  1113  01EB  0246               	subwf	delay@localClock,w
  1114  01EC                     u355:	
  1115  01EC  1803               	btfsc	3,0
  1116  01ED  0008               	return
  1117                           
  1118                           ;LE4-7.c: 173: {
  1119                           ;LE4-7.c: 174: if(count_flag == 1)
  1120  01EE  3001               	movlw	1
  1121  01EF  0670               	xorwf	_count_flag,w
  1122  01F0  0471               	iorwf	_count_flag+1,w
  1123  01F1  1D03               	skipz
  1124  01F2  29E1               	goto	l950
  1125                           
  1126                           ;LE4-7.c: 175: {
  1127                           ;LE4-7.c: 176: count_flag = 0;
  1128  01F3  01F0               	clrf	_count_flag
  1129  01F4  01F1               	clrf	_count_flag+1
  1130                           
  1131                           ;LE4-7.c: 177: localClock++;
  1132  01F5  3001               	movlw	1
  1133  01F6  1283               	bcf	3,5	;RP0=0, select bank0
  1134  01F7  1303               	bcf	3,6	;RP1=0, select bank0
  1135  01F8  07C6               	addwf	delay@localClock,f
  1136  01F9  1803               	skipnc
  1137  01FA  0AC7               	incf	delay@localClock+1,f
  1138  01FB  3000               	movlw	0
  1139  01FC  07C7               	addwf	delay@localClock+1,f
  1140  01FD  29E1               	goto	l950
  1141  01FE                     __end_of_delay:	
  1142                           
  1143                           	psect	text5
  1144  0212                     __ptext5:	
  1145 ;; *************** function ___bmul *****************
  1146 ;; Defined at:
  1147 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\Umul8.c"
  1148 ;; Parameters:    Size  Location     Type
  1149 ;;  multiplier      1    wreg     unsigned char 
  1150 ;;  multiplicand    1    0[BANK0 ] unsigned char 
  1151 ;; Auto vars:     Size  Location     Type
  1152 ;;  multiplier      1    3[BANK0 ] unsigned char 
  1153 ;;  product         1    2[BANK0 ] unsigned char 
  1154 ;; Return value:  Size  Location     Type
  1155 ;;                  1    wreg      unsigned char 
  1156 ;; Registers used:
  1157 ;;		wreg, status,2, status,0
  1158 ;; Tracked objects:
  1159 ;;		On entry : 0/0
  1160 ;;		On exit  : 0/0
  1161 ;;		Unchanged: 0/0
  1162 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1163 ;;      Params:         0       1       0       0       0
  1164 ;;      Locals:         0       2       0       0       0
  1165 ;;      Temps:          0       1       0       0       0
  1166 ;;      Totals:         0       4       0       0       0
  1167 ;;Total ram usage:        4 bytes
  1168 ;; Hardware stack levels used:    1
  1169 ;; Hardware stack levels required when called:    1
  1170 ;; This function calls:
  1171 ;;		Nothing
  1172 ;; This function is called by:
  1173 ;;		_main
  1174 ;; This function uses a non-reentrant model
  1175 ;;
  1176                           
  1177                           
  1178                           ;psect for function ___bmul
  1179  0212                     ___bmul:	
  1180                           
  1181                           ;incstack = 0
  1182                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  1183                           ;___bmul@multiplier stored from wreg
  1184  0212  1283               	bcf	3,5	;RP0=0, select bank0
  1185  0213  1303               	bcf	3,6	;RP1=0, select bank0
  1186  0214  00C9               	movwf	___bmul@multiplier
  1187  0215  01C8               	clrf	___bmul@product
  1188  0216                     l954:	
  1189  0216  1C49               	btfss	___bmul@multiplier,0
  1190  0217  2A1C               	goto	l958
  1191  0218  0846               	movf	___bmul@multiplicand,w
  1192  0219  00C7               	movwf	??___bmul
  1193  021A  0847               	movf	??___bmul,w
  1194  021B  07C8               	addwf	___bmul@product,f
  1195  021C                     l958:	
  1196  021C  1003               	clrc
  1197  021D  0DC6               	rlf	___bmul@multiplicand,f
  1198  021E  1003               	clrc
  1199  021F  0CC9               	rrf	___bmul@multiplier,f
  1200  0220  08C9               	movf	___bmul@multiplier,f
  1201  0221  1D03               	skipz
  1202  0222  2A16               	goto	l954
  1203  0223  0848               	movf	___bmul@product,w
  1204  0224  0008               	return
  1205  0225                     __end_of___bmul:	
  1206                           
  1207                           	psect	text6
  1208  01FE                     __ptext6:	
  1209 ;; *************** function _ISR *****************
  1210 ;; Defined at:
  1211 ;;		line 59 in file "C:\Users\notjo\OneDrive\Desktop\USC\USC-Year3-Sem2\3201-EmbeddedSystems\Labs\LE_04\LE4-7\LE4-7.c"
  1212 ;; Parameters:    Size  Location     Type
  1213 ;;		None
  1214 ;; Auto vars:     Size  Location     Type
  1215 ;;		None
  1216 ;; Return value:  Size  Location     Type
  1217 ;;		None               void
  1218 ;; Registers used:
  1219 ;;		wreg
  1220 ;; Tracked objects:
  1221 ;;		On entry : 0/0
  1222 ;;		On exit  : 0/0
  1223 ;;		Unchanged: 0/0
  1224 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1225 ;;      Params:         0       0       0       0       0
  1226 ;;      Locals:         0       0       0       0       0
  1227 ;;      Temps:          4       0       0       0       0
  1228 ;;      Totals:         4       0       0       0       0
  1229 ;;Total ram usage:        4 bytes
  1230 ;; Hardware stack levels used:    1
  1231 ;; This function calls:
  1232 ;;		Nothing
  1233 ;; This function is called by:
  1234 ;;		Interrupt level 1
  1235 ;; This function uses a non-reentrant model
  1236 ;;
  1237                           
  1238                           
  1239                           ;psect for function _ISR
  1240  01FE                     _ISR:	
  1241                           
  1242                           ;LE4-7.c: 61: GIE = 0;
  1243  01FE  138B               	bcf	11,7	;volatile
  1244                           
  1245                           ;LE4-7.c: 62: if(TMR0IF)
  1246  01FF  1D0B               	btfss	11,2	;volatile
  1247  0200  2A06               	goto	i1l634
  1248                           
  1249                           ;LE4-7.c: 63: {
  1250                           ;LE4-7.c: 64: TMR0IF = 0;
  1251  0201  110B               	bcf	11,2	;volatile
  1252                           
  1253                           ;LE4-7.c: 65: count_flag = 1;
  1254  0202  3001               	movlw	1
  1255  0203  00F0               	movwf	_count_flag
  1256  0204  3000               	movlw	0
  1257  0205  00F1               	movwf	_count_flag+1
  1258  0206                     i1l634:	
  1259                           
  1260                           ;LE4-7.c: 66: }
  1261                           ;LE4-7.c: 67: GIE = 1;
  1262  0206  178B               	bsf	11,7	;volatile
  1263  0207  0879               	movf	??_ISR+3,w
  1264  0208  00FF               	movwf	127
  1265  0209  0878               	movf	??_ISR+2,w
  1266  020A  008A               	movwf	10
  1267  020B  0877               	movf	??_ISR+1,w
  1268  020C  0084               	movwf	4
  1269  020D  0E76               	swapf	??_ISR^(0+-128),w
  1270  020E  0083               	movwf	3
  1271  020F  0EFE               	swapf	126,f
  1272  0210  0E7E               	swapf	126,w
  1273  0211  0009               	retfie
  1274  0212                     __end_of_ISR:	
  1275  007E                     btemp	set	126	;btemp
  1276  007E                     wtemp	set	126
  1277  007E                     wtemp0	set	126
  1278  0080                     wtemp1	set	128
  1279  0082                     wtemp2	set	130
  1280  0084                     wtemp3	set	132
  1281  0086                     wtemp4	set	134
  1282  0088                     wtemp5	set	136
  1283  007F                     wtemp6	set	127
  1284  007E                     ttemp	set	126
  1285  007E                     ttemp0	set	126
  1286  0081                     ttemp1	set	129
  1287  0084                     ttemp2	set	132
  1288  0087                     ttemp3	set	135
  1289  007F                     ttemp4	set	127
  1290  007E                     ltemp	set	126
  1291  007E                     ltemp0	set	126
  1292  0082                     ltemp1	set	130
  1293  0086                     ltemp2	set	134
  1294  0080                     ltemp3	set	128
  1295                           
  1296                           	psect	intentry
  1297  0004                     __pintentry:	
  1298                           ;incstack = 0
  1299                           ; Regs used in _ISR: [wreg]
  1300                           
  1301  0004                     interrupt_function:	
  1302  007E                     saved_w	set	btemp
  1303  0004  00FE               	movwf	btemp
  1304  0005  0E03               	swapf	3,w
  1305  0006  00F6               	movwf	??_ISR
  1306  0007  0804               	movf	4,w
  1307  0008  00F7               	movwf	??_ISR+1
  1308  0009  080A               	movf	10,w
  1309  000A  00F8               	movwf	??_ISR+2
  1310  000B  1283               	bcf	3,5	;RP0=0, select bank0
  1311  000C  1303               	bcf	3,6	;RP1=0, select bank0
  1312  000D  087F               	movf	btemp+1,w
  1313  000E  00F9               	movwf	??_ISR+3
  1314  000F  120A  118A  29FE   	ljmp	_ISR


Data Sizes:
    Strings     0
    Constant    0
    Data        38
    BSS         6
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      4      10
    BANK0            80      9      47
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    _main->___bmul
    _main->_displayMode

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0     475
                                              4 BANK0      5     5      0
                             ___bmul
                              _delay
                        _displayMode
                       _incDutyCycle
                       _incFrequency
 ---------------------------------------------------------------------------------
 (1) _incFrequency                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _incDutyCycle                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _displayMode                                          4     4      0      92
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (1) _delay                                                2     2      0      37
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) ___bmul                                               4     3      1     346
                                              0 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _ISR                                                  4     4      0       0
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___bmul
   _delay
   _displayMode
   _incDutyCycle
   _incFrequency

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      9      2F       5       58.8%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      4       A       1       71.4%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      39      12        0.0%
ABS                  0      0      39       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V1.33 build 59893 
Symbol Table                                                                                   Tue Mar 19 09:15:46 2024

                      pc 0002             ?_displayMode 0076           ___bmul@product 0048  
            __CFG_CP$OFF 0000                       fsr 0004                      l910 0178  
                    l920 0192                      l912 017A                      l922 0194  
                    l930 019D                      l924 0196                      l932 01B3  
                    l908 0176                      l916 017F                      l950 01E1  
                    l926 0198                      l918 0190                      l790 0244  
                    l784 0255                      l954 0216                      l958 021C  
                    _GIE 005F                      l998 009E                      _RD0 0040  
                    _RC2 003A                      _RD1 0041                      u405 007E  
                    _PR2 0092                      u425 00BD             __CFG_CPD$OFF 0000  
                    u355 01EC                      u435 00E4                      _ISR 01FE  
                    u445 00FF                      u465 012C                      u385 003C  
                    u475 0149                      u395 0063                      fsr0 0004  
                    indf 0000             __CFG_FOSC$XT 0000             __CFG_LVP$OFF 0000  
                   ?_ISR 0076                     l1012 010D                     l1066 0184  
                   l1068 01A2           ??_incFrequency 007A                     _PEIE 005E  
                   _INTE 005C             __CFG_WRT$OFF 0000           ??_incDutyCycle 007A  
                   _flag 0044                     _main 002B                     btemp 007E  
          __CFG_BOREN$ON 0000                     ltemp 007E                     start 0012  
                   ttemp 007E                     wtemp 007E        ___bmul@multiplier 0049  
                  ??_ISR 0076                    ?_main 0076            __CFG_WDTE$OFF 0000  
                  _T2CON 0012                    i1l634 0206                    _PORTB 0006  
                  _TRISB 0086                    _TRISC 0087                    _TRISD 0088  
          __CFG_PWRTE$ON 0000                    _delay 01DD                    pclath 000A  
                  ltemp0 007E                    ltemp1 0082                    ltemp2 0086  
                  ltemp3 0080                    ttemp0 007E                    ttemp1 0081  
                  ttemp2 0084                    ttemp3 0087                    ttemp4 007F  
                  status 0003                    wtemp0 007E                    wtemp1 0080  
                  wtemp2 0082                    wtemp3 0084                    wtemp4 0086  
                  wtemp5 0088                    wtemp6 007F          __initialization 0015  
           __end_of_main 016E                   ??_main 004A                   ?_delay 0076  
                 _CCPR1L 0015                   _TMR0IE 005D                   _TMR0IF 005A  
                 ___bmul 0212     __end_of_incFrequency 0247     __size_of_displayMode 0049  
   __end_of_incDutyCycle 0258                   saved_w 007E  __end_of__initialization 0027  
    ___bmul@multiplicand 0046           __pcstackCOMMON 0076             __pidataBANK0 01B7  
          __end_of_delay 01FE                  ??_delay 007A               __pmaintext 002B  
                ?___bmul 0046               __pintentry 0004                  _CCP1CON 0017  
             _count_flag 0070    __size_of_incFrequency 0011          __size_of___bmul 0013  
  __size_of_incDutyCycle 0011                  __ptext1 0236                  __ptext2 0247  
                __ptext3 016E                  __ptext4 01DD                  __ptext5 0212  
                __ptext6 01FE             __size_of_ISR 0014     end_of_initialization 0027  
           _incFrequency 0236             _incDutyCycle 0247           _frequencyIndex 0074  
              _PR2Values 003E            ??_displayMode 007A           __end_of___bmul 0225  
    start_initialization 0015              __end_of_ISR 0212                 ??___bmul 0047  
             init_fetch0 0225              __pdataBANK0 0020      __end_of_displayMode 01B7  
            __pbssCOMMON 0070                ___latbits 0002            __pcstackBANK0 0046  
         _dutyCycleIndex 0072          delay@localClock 0046         displayMode@temp2 0048  
         __size_of_delay 0021        interrupt_function 0004              _displayMode 016E  
          _timerMaxCount 0020          displayMode@temp 0046            __size_of_main 0143  
               init_ram0 0229                 intlevel1 0000               _OPTION_REG 0081  
          ?_incFrequency 0076            ?_incDutyCycle 0076  

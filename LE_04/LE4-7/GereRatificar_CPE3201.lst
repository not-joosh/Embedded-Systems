

Microchip Technology PIC LITE Macro Assembler V1.33 build 59893 
                                                                                               Wed Mar 20 16:59:58 2024

Microchip Technology Omniscient Code Generator (Lite mode) build 59893
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	inittext,global,class=CODE,delta=2
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	maintext,global,class=CODE,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2
    15                           	psect	text3,local,class=CODE,merge=1,delta=2
    16                           	psect	text4,local,class=CODE,merge=1,delta=2
    17                           	psect	text5,local,class=CODE,merge=1,delta=2
    18                           	psect	text6,local,class=CODE,merge=1,delta=2
    19                           	psect	intentry,global,class=CODE,delta=2
    20                           	dabs	1,0x7E,2
    21  0000                     	;# 
    22  0001                     	;# 
    23  0002                     	;# 
    24  0003                     	;# 
    25  0004                     	;# 
    26  0005                     	;# 
    27  0006                     	;# 
    28  0007                     	;# 
    29  0008                     	;# 
    30  0009                     	;# 
    31  000A                     	;# 
    32  000B                     	;# 
    33  000C                     	;# 
    34  000D                     	;# 
    35  000E                     	;# 
    36  000E                     	;# 
    37  000F                     	;# 
    38  0010                     	;# 
    39  0011                     	;# 
    40  0012                     	;# 
    41  0013                     	;# 
    42  0014                     	;# 
    43  0015                     	;# 
    44  0015                     	;# 
    45  0016                     	;# 
    46  0017                     	;# 
    47  0018                     	;# 
    48  0019                     	;# 
    49  001A                     	;# 
    50  001B                     	;# 
    51  001B                     	;# 
    52  001C                     	;# 
    53  001D                     	;# 
    54  001E                     	;# 
    55  001F                     	;# 
    56  0081                     	;# 
    57  0085                     	;# 
    58  0086                     	;# 
    59  0087                     	;# 
    60  0088                     	;# 
    61  0089                     	;# 
    62  008C                     	;# 
    63  008D                     	;# 
    64  008E                     	;# 
    65  0091                     	;# 
    66  0092                     	;# 
    67  0093                     	;# 
    68  0094                     	;# 
    69  0098                     	;# 
    70  0099                     	;# 
    71  009C                     	;# 
    72  009D                     	;# 
    73  009E                     	;# 
    74  009F                     	;# 
    75  010C                     	;# 
    76  010D                     	;# 
    77  010E                     	;# 
    78  010F                     	;# 
    79  018C                     	;# 
    80  018D                     	;# 
    81                           
    82                           	psect	idataBANK0
    83  01B6                     __pidataBANK0:	
    84                           
    85                           ;initializer for _timerMaxCount
    86  01B6  3453               	retlw	83
    87  01B7  3400               	retlw	0
    88  01B8  34D0               	retlw	208
    89  01B9  3400               	retlw	0
    90  01BA  34A1               	retlw	161
    91  01BB  3401               	retlw	1
    92  01BC  3471               	retlw	113
    93  01BD  3402               	retlw	2
    94  01BE  3418               	retlw	24
    95  01BF  3403               	retlw	3
    96  01C0  3432               	retlw	50
    97  01C1  3400               	retlw	0
    98  01C2  347D               	retlw	125
    99  01C3  3400               	retlw	0
   100  01C4  34FA               	retlw	250
   101  01C5  3400               	retlw	0
   102  01C6  3477               	retlw	119
   103  01C7  3401               	retlw	1
   104  01C8  34DB               	retlw	219
   105  01C9  3401               	retlw	1
   106  01CA  3419               	retlw	25
   107  01CB  3400               	retlw	0
   108  01CC  343F               	retlw	63
   109  01CD  3400               	retlw	0
   110  01CE  347D               	retlw	125
   111  01CF  3400               	retlw	0
   112  01D0  34BC               	retlw	188
   113  01D1  3400               	retlw	0
   114  01D2  34EE               	retlw	238
   115  01D3  3400               	retlw	0
   116                           
   117                           ;initializer for _PR2Values
   118  01D4  34CF               	retlw	207
   119  01D5  3400               	retlw	0
   120  01D6  347C               	retlw	124
   121  01D7  3400               	retlw	0
   122  01D8  343E               	retlw	62
   123  01D9  3400               	retlw	0
   124                           
   125                           ;initializer for _flag
   126  01DA  3401               	retlw	1
   127  01DB  3400               	retlw	0
   128  0017                     _CCP1CON	set	23
   129  0015                     _CCPR1L	set	21
   130  0006                     _PORTB	set	6
   131  0012                     _T2CON	set	18
   132  005F                     _GIE	set	95
   133  003A                     _RC2	set	58
   134  0040                     _RD0	set	64
   135  0041                     _RD1	set	65
   136  005D                     _T0IE	set	93
   137  005A                     _T0IF	set	90
   138  005A                     _TMR0IF	set	90
   139  0081                     _OPTION_REG	set	129
   140  0092                     _PR2	set	146
   141  0086                     _TRISB	set	134
   142  0087                     _TRISC	set	135
   143  0088                     _TRISD	set	136
   144                           
   145                           ; #config settings
   146  0000                     
   147                           	psect	cinit
   148  0015                     start_initialization:	
   149  0015                     __initialization:	
   150                           
   151                           ; Clear objects allocated to COMMON
   152  0015  01F6               	clrf	__pbssCOMMON& (0+127)
   153  0016  01F7               	clrf	(__pbssCOMMON+1)& (0+127)
   154  0017  01F8               	clrf	(__pbssCOMMON+2)& (0+127)
   155  0018  01F9               	clrf	(__pbssCOMMON+3)& (0+127)
   156                           
   157                           ; Clear objects allocated to BANK0
   158  0019  01D1               	clrf	__pbssBANK0& (0+127)
   159  001A  01D2               	clrf	(__pbssBANK0+1)& (0+127)
   160                           
   161                           ; Initialize objects allocated to BANK0
   162  001B  1383               	bcf	3,7	;select IRP bank0
   163  001C  3046               	movlw	low (__pdataBANK0+38)
   164  001D  00FD               	movwf	btemp+-1
   165  001E  3001               	movlw	high __pidataBANK0
   166  001F  00FE               	movwf	btemp
   167  0020  30B6               	movlw	low __pidataBANK0
   168  0021  00FF               	movwf	btemp+1
   169  0022  3020               	movlw	low __pdataBANK0
   170  0023  0084               	movwf	4
   171  0024  120A  118A  2224   	fcall	init_ram0
   172  0027                     end_of_initialization:	
   173                           ;End of C runtime variable initialization code
   174                           
   175  0027                     __end_of__initialization:	
   176  0027  0183               	clrf	3
   177  0028  120A  118A  282B   	ljmp	_main	;jump to C main() function
   178                           
   179                           	psect	bssCOMMON
   180  0076                     __pbssCOMMON:	
   181  0076                     _dutyCycleIndex:	
   182  0076                     	ds	2
   183  0078                     _frequencyIndex:	
   184  0078                     	ds	2
   185                           
   186                           	psect	bssBANK0
   187  0051                     __pbssBANK0:	
   188  0051                     _count_flag:	
   189  0051                     	ds	2
   190                           
   191                           	psect	dataBANK0
   192  0020                     __pdataBANK0:	
   193  0020                     _timerMaxCount:	
   194  0020                     	ds	30
   195  003E                     _PR2Values:	
   196  003E                     	ds	6
   197  0044                     _flag:	
   198  0044                     	ds	2
   199                           
   200                           	psect	inittext
   201  0220                     init_fetch0:	
   202                           ;	Called with low address in FSR and high address in W
   203                           
   204  0220  087E               	movf	126,w
   205  0221  008A               	movwf	10
   206  0222  087F               	movf	127,w
   207  0223  0082               	movwf	2
   208  0224                     init_ram0:	
   209                           ;Called with:
   210                           ;	high address of idata address in btemp 
   211                           ;	low address of idata address in btemp+1 
   212                           ;	low address of data in FSR
   213                           ;	high address + 1 of data in btemp-1
   214                           
   215  0224  2220  120A  118A   	fcall	init_fetch0
   216  0227  0080               	movwf	0
   217  0228  0A84               	incf	4,f
   218  0229  0804               	movf	4,w
   219  022A  067D               	xorwf	125,w
   220  022B  1903               	btfsc	3,2
   221  022C  3400               	retlw	0
   222  022D  0AFF               	incf	127,f
   223  022E  1903               	btfsc	3,2
   224  022F  0AFE               	incf	126,f
   225  0230  2A24               	goto	init_ram0
   226                           
   227                           	psect	cstackCOMMON
   228  0070                     __pcstackCOMMON:	
   229  0070                     ?_displayMode:	
   230  0070                     ?_delay:	
   231                           ; 0 bytes @ 0x0
   232                           
   233  0070                     ?_incDutyCycle:	
   234                           ; 0 bytes @ 0x0
   235                           
   236  0070                     ?_incFrequency:	
   237                           ; 0 bytes @ 0x0
   238                           
   239  0070                     ?_ISR:	
   240                           ; 0 bytes @ 0x0
   241                           
   242  0070                     ??_ISR:	
   243                           ; 0 bytes @ 0x0
   244                           
   245  0070                     ?_main:	
   246                           ; 0 bytes @ 0x0
   247                           
   248                           
   249                           ; 0 bytes @ 0x0
   250  0070                     	ds	4
   251  0074                     ??_displayMode:	
   252  0074                     ??_delay:	
   253                           ; 0 bytes @ 0x4
   254                           
   255  0074                     ??_incDutyCycle:	
   256                           ; 0 bytes @ 0x4
   257                           
   258  0074                     ??_incFrequency:	
   259                           ; 0 bytes @ 0x4
   260                           
   261  0074                     ?___bmul:	
   262                           ; 0 bytes @ 0x4
   263                           
   264  0074                     ___bmul@multiplicand:	
   265                           ; 1 bytes @ 0x4
   266                           
   267  0074                     delay@localClock:	
   268                           ; 1 bytes @ 0x4
   269                           
   270                           
   271                           ; 2 bytes @ 0x4
   272  0074                     	ds	1
   273  0075                     ??___bmul:	
   274                           
   275                           ; 0 bytes @ 0x5
   276  0075                     	ds	1
   277                           
   278                           	psect	cstackBANK0
   279  0046                     __pcstackBANK0:	
   280  0046                     ___bmul@product:	
   281  0046                     displayMode@displayBits:	
   282                           ; 1 bytes @ 0x0
   283                           
   284                           
   285                           ; 2 bytes @ 0x0
   286  0046                     	ds	1
   287  0047                     ___bmul@multiplier:	
   288                           
   289                           ; 1 bytes @ 0x1
   290  0047                     	ds	1
   291  0048                     displayMode@temp:	
   292                           
   293                           ; 2 bytes @ 0x2
   294  0048                     	ds	2
   295  004A                     displayMode@temp2:	
   296                           
   297                           ; 2 bytes @ 0x4
   298  004A                     	ds	2
   299  004C                     ??_main:	
   300                           
   301                           ; 0 bytes @ 0x6
   302  004C                     	ds	5
   303                           
   304                           	psect	maintext
   305  002B                     __pmaintext:	
   306 ;;
   307 ;;Main: autosize = 0, tempsize = 5, incstack = 0, save=0
   308 ;;
   309 ;; *************** function _main *****************
   310 ;; Defined at:
   311 ;;		line 101 in file "C:\Users\notjo\OneDrive\Desktop\USC\USC-Year3-Sem2\3201-EmbeddedSystems\Labs\LE_04\LE4-7\LE4-7.c"
   312 ;; Parameters:    Size  Location     Type
   313 ;;		None
   314 ;; Auto vars:     Size  Location     Type
   315 ;;		None
   316 ;; Return value:  Size  Location     Type
   317 ;;		None               void
   318 ;; Registers used:
   319 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   320 ;; Tracked objects:
   321 ;;		On entry : 17F/0
   322 ;;		On exit  : 0/0
   323 ;;		Unchanged: 0/0
   324 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   325 ;;      Params:         0       0       0       0       0
   326 ;;      Locals:         0       0       0       0       0
   327 ;;      Temps:          0       5       0       0       0
   328 ;;      Totals:         0       5       0       0       0
   329 ;;Total ram usage:        5 bytes
   330 ;; Hardware stack levels required when called:    2
   331 ;; This function calls:
   332 ;;		___bmul
   333 ;;		_delay
   334 ;;		_displayMode
   335 ;;		_incDutyCycle
   336 ;;		_incFrequency
   337 ;; This function is called by:
   338 ;;		Startup code after reset
   339 ;; This function uses a non-reentrant model
   340 ;;
   341                           
   342                           
   343                           ;psect for function _main
   344  002B                     _main:	
   345                           
   346                           ;LE4-7.c: 111: GIE = 1;
   347                           
   348                           ;incstack = 0
   349                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   350  002B  178B               	bsf	11,7	;volatile
   351                           
   352                           ;LE4-7.c: 112: OPTION_REG = 0x43;
   353  002C  3043               	movlw	67
   354  002D  1683               	bsf	3,5	;RP0=1, select bank1
   355  002E  1303               	bcf	3,6	;RP1=0, select bank1
   356  002F  0081               	movwf	1	;volatile
   357                           
   358                           ;LE4-7.c: 113: T0IE = 1;
   359  0030  168B               	bsf	11,5	;volatile
   360                           
   361                           ;LE4-7.c: 114: T0IF = 0;
   362  0031  110B               	bcf	11,2	;volatile
   363                           
   364                           ;LE4-7.c: 116: TRISD = 0x03;
   365  0032  3003               	movlw	3
   366  0033  0088               	movwf	8	;volatile
   367                           
   368                           ;LE4-7.c: 117: TRISC = 0x00;
   369  0034  0187               	clrf	7	;volatile
   370                           
   371                           ;LE4-7.c: 118: TRISB = 0x00;
   372  0035  0186               	clrf	6	;volatile
   373                           
   374                           ;LE4-7.c: 119: PORTB = 0x00;
   375  0036  1283               	bcf	3,5	;RP0=0, select bank0
   376  0037  1303               	bcf	3,6	;RP1=0, select bank0
   377  0038  0186               	clrf	6	;volatile
   378                           
   379                           ;LE4-7.c: 120: RC2 = 0;
   380  0039  1107               	bcf	7,2	;volatile
   381                           
   382                           ;LE4-7.c: 122: PR2 = PR2Values[frequencyIndex];
   383  003A  0878               	movf	_frequencyIndex,w
   384  003B  00CC               	movwf	??_main
   385  003C  074C               	addwf	??_main,w
   386  003D  3E3E               	addlw	_PR2Values& (0+255)
   387  003E  0084               	movwf	4
   388  003F  1383               	bcf	3,7	;select IRP bank0
   389  0040  0800               	movf	0,w
   390  0041  1683               	bsf	3,5	;RP0=1, select bank1
   391  0042  1303               	bcf	3,6	;RP1=0, select bank1
   392  0043  0092               	movwf	18	;volatile
   393                           
   394                           ;LE4-7.c: 124: CCPR1L = (timerMaxCount[frequencyIndex][dutyCycleIndex] & 0x3FC) >> 2;
   395  0044  0876               	movf	_dutyCycleIndex,w
   396  0045  1283               	bcf	3,5	;RP0=0, select bank0
   397  0046  1303               	bcf	3,6	;RP1=0, select bank0
   398  0047  00CC               	movwf	??_main
   399  0048  3001               	movlw	1
   400  0049                     u375:	
   401  0049  1003               	clrc
   402  004A  0DCC               	rlf	??_main,f
   403  004B  3EFF               	addlw	-1
   404  004C  1D03               	skipz
   405  004D  2849               	goto	u375
   406  004E  300A               	movlw	10
   407  004F  00CD               	movwf	??_main+1
   408  0050  084D               	movf	??_main+1,w
   409  0051  00F4               	movwf	___bmul@multiplicand
   410  0052  0878               	movf	_frequencyIndex,w
   411  0053  120A  118A  220D  120A  118A  	fcall	___bmul
   412  0058  3E20               	addlw	_timerMaxCount& (0+255)
   413  0059  1283               	bcf	3,5	;RP0=0, select bank0
   414  005A  1303               	bcf	3,6	;RP1=0, select bank0
   415  005B  074C               	addwf	??_main,w
   416  005C  00CE               	movwf	??_main+2
   417  005D  084E               	movf	??_main+2,w
   418  005E  0084               	movwf	4
   419  005F  1383               	bcf	3,7	;select IRP bank0
   420  0060  0800               	movf	0,w
   421  0061  00CF               	movwf	??_main+3
   422  0062  0A84               	incf	4,f
   423  0063  0800               	movf	0,w
   424  0064  00D0               	movwf	??_main+4
   425  0065  1003               	clrc
   426  0066  0CD0               	rrf	??_main+4,f
   427  0067  0CCF               	rrf	??_main+3,f
   428  0068  1003               	clrc
   429  0069  0CD0               	rrf	??_main+4,f
   430  006A  0CCF               	rrf	??_main+3,f
   431  006B  084F               	movf	??_main+3,w
   432  006C  0095               	movwf	21	;volatile
   433                           
   434                           ;LE4-7.c: 127: CCP1CON = ((timerMaxCount[frequencyIndex][dutyCycleIndex] & 0x003) << 4) 
      +                          + 0x0C;
   435  006D  0876               	movf	_dutyCycleIndex,w
   436  006E  00CC               	movwf	??_main
   437  006F  3001               	movlw	1
   438  0070                     u385:	
   439  0070  1003               	clrc
   440  0071  0DCC               	rlf	??_main,f
   441  0072  3EFF               	addlw	-1
   442  0073  1D03               	skipz
   443  0074  2870               	goto	u385
   444  0075  300A               	movlw	10
   445  0076  00CD               	movwf	??_main+1
   446  0077  084D               	movf	??_main+1,w
   447  0078  00F4               	movwf	___bmul@multiplicand
   448  0079  0878               	movf	_frequencyIndex,w
   449  007A  120A  118A  220D  120A  118A  	fcall	___bmul
   450  007F  3E20               	addlw	_timerMaxCount& (0+255)
   451  0080  1283               	bcf	3,5	;RP0=0, select bank0
   452  0081  1303               	bcf	3,6	;RP1=0, select bank0
   453  0082  074C               	addwf	??_main,w
   454  0083  00CE               	movwf	??_main+2
   455  0084  084E               	movf	??_main+2,w
   456  0085  0084               	movwf	4
   457  0086  1383               	bcf	3,7	;select IRP bank0
   458  0087  0800               	movf	0,w
   459  0088  3903               	andlw	3
   460  0089  00CF               	movwf	??_main+3
   461  008A  3003               	movlw	3
   462  008B                     u395:	
   463  008B  1003               	clrc
   464  008C  0DCF               	rlf	??_main+3,f
   465  008D  3EFF               	addlw	-1
   466  008E  1D03               	skipz
   467  008F  288B               	goto	u395
   468  0090  1003               	clrc
   469  0091  0D4F               	rlf	??_main+3,w
   470  0092  3E0C               	addlw	12
   471  0093  0097               	movwf	23	;volatile
   472                           
   473                           ;LE4-7.c: 128: T2CON = 0x06;
   474  0094  3006               	movlw	6
   475  0095  0092               	movwf	18	;volatile
   476  0096                     L1:	
   477                           
   478                           ;LE4-7.c: 144: displayMode();
   479  0096  120A  118A  216B  120A  118A  	fcall	_displayMode
   480  009B                     l982:	
   481                           ;LE4-7.c: 148: for(;;)
   482                           
   483                           
   484                           ;LE4-7.c: 149: {
   485                           ;LE4-7.c: 151: if(RD0 == 1)
   486  009B  1283               	bcf	3,5	;RP0=0, select bank0
   487  009C  1303               	bcf	3,6	;RP1=0, select bank0
   488  009D  1C08               	btfss	8,0	;volatile
   489  009E  290A               	goto	l996
   490                           
   491                           ;LE4-7.c: 152: {
   492                           ;LE4-7.c: 153: delay();
   493  009F  120A  118A  21DC  120A  118A  	fcall	_delay
   494                           
   495                           ;LE4-7.c: 154: incDutyCycle();
   496  00A4  120A  118A  2242  120A  118A  	fcall	_incDutyCycle
   497                           
   498                           ;LE4-7.c: 155: PR2 = PR2Values[frequencyIndex];
   499  00A9  0878               	movf	_frequencyIndex,w
   500  00AA  1283               	bcf	3,5	;RP0=0, select bank0
   501  00AB  1303               	bcf	3,6	;RP1=0, select bank0
   502  00AC  00CC               	movwf	??_main
   503  00AD  074C               	addwf	??_main,w
   504  00AE  3E3E               	addlw	_PR2Values& (0+255)
   505  00AF  0084               	movwf	4
   506  00B0  1383               	bcf	3,7	;select IRP bank0
   507  00B1  0800               	movf	0,w
   508  00B2  1683               	bsf	3,5	;RP0=1, select bank1
   509  00B3  1303               	bcf	3,6	;RP1=0, select bank1
   510  00B4  0092               	movwf	18	;volatile
   511                           
   512                           ;LE4-7.c: 156: CCPR1L = (timerMaxCount[frequencyIndex][dutyCycleIndex] & 0x3FC) >> 2;
   513  00B5  0876               	movf	_dutyCycleIndex,w
   514  00B6  1283               	bcf	3,5	;RP0=0, select bank0
   515  00B7  1303               	bcf	3,6	;RP1=0, select bank0
   516  00B8  00CC               	movwf	??_main
   517  00B9  3001               	movlw	1
   518  00BA                     u415:	
   519  00BA  1003               	clrc
   520  00BB  0DCC               	rlf	??_main,f
   521  00BC  3EFF               	addlw	-1
   522  00BD  1D03               	skipz
   523  00BE  28BA               	goto	u415
   524  00BF  300A               	movlw	10
   525  00C0  00CD               	movwf	??_main+1
   526  00C1  084D               	movf	??_main+1,w
   527  00C2  00F4               	movwf	___bmul@multiplicand
   528  00C3  0878               	movf	_frequencyIndex,w
   529  00C4  120A  118A  220D  120A  118A  	fcall	___bmul
   530  00C9  3E20               	addlw	_timerMaxCount& (0+255)
   531  00CA  1283               	bcf	3,5	;RP0=0, select bank0
   532  00CB  1303               	bcf	3,6	;RP1=0, select bank0
   533  00CC  074C               	addwf	??_main,w
   534  00CD  00CE               	movwf	??_main+2
   535  00CE  084E               	movf	??_main+2,w
   536  00CF  0084               	movwf	4
   537  00D0  1383               	bcf	3,7	;select IRP bank0
   538  00D1  0800               	movf	0,w
   539  00D2  00CF               	movwf	??_main+3
   540  00D3  0A84               	incf	4,f
   541  00D4  0800               	movf	0,w
   542  00D5  00D0               	movwf	??_main+4
   543  00D6  1003               	clrc
   544  00D7  0CD0               	rrf	??_main+4,f
   545  00D8  0CCF               	rrf	??_main+3,f
   546  00D9  1003               	clrc
   547  00DA  0CD0               	rrf	??_main+4,f
   548  00DB  0CCF               	rrf	??_main+3,f
   549  00DC  084F               	movf	??_main+3,w
   550  00DD  0095               	movwf	21	;volatile
   551                           
   552                           ;LE4-7.c: 157: CCP1CON = ((timerMaxCount[frequencyIndex][dutyCycleIndex] & 0x003) << 4) 
      +                          + 0x0C;
   553  00DE  0876               	movf	_dutyCycleIndex,w
   554  00DF  00CC               	movwf	??_main
   555  00E0  3001               	movlw	1
   556  00E1                     u425:	
   557  00E1  1003               	clrc
   558  00E2  0DCC               	rlf	??_main,f
   559  00E3  3EFF               	addlw	-1
   560  00E4  1D03               	skipz
   561  00E5  28E1               	goto	u425
   562  00E6  300A               	movlw	10
   563  00E7  00CD               	movwf	??_main+1
   564  00E8  084D               	movf	??_main+1,w
   565  00E9  00F4               	movwf	___bmul@multiplicand
   566  00EA  0878               	movf	_frequencyIndex,w
   567  00EB  120A  118A  220D  120A  118A  	fcall	___bmul
   568  00F0  3E20               	addlw	_timerMaxCount& (0+255)
   569  00F1  1283               	bcf	3,5	;RP0=0, select bank0
   570  00F2  1303               	bcf	3,6	;RP1=0, select bank0
   571  00F3  074C               	addwf	??_main,w
   572  00F4  00CE               	movwf	??_main+2
   573  00F5  084E               	movf	??_main+2,w
   574  00F6  0084               	movwf	4
   575  00F7  1383               	bcf	3,7	;select IRP bank0
   576  00F8  0800               	movf	0,w
   577  00F9  3903               	andlw	3
   578  00FA  00CF               	movwf	??_main+3
   579  00FB  3003               	movlw	3
   580  00FC                     u435:	
   581  00FC  1003               	clrc
   582  00FD  0DCF               	rlf	??_main+3,f
   583  00FE  3EFF               	addlw	-1
   584  00FF  1D03               	skipz
   585  0100  28FC               	goto	u435
   586  0101  1003               	clrc
   587  0102  0D4F               	rlf	??_main+3,w
   588  0103  3E0C               	addlw	12
   589  0104  0097               	movwf	23	;volatile
   590                           
   591                           ;LE4-7.c: 158: displayMode();
   592  0105  120A  118A  216B  120A  118A  	fcall	_displayMode
   593  010A                     l996:	
   594                           
   595                           ;LE4-7.c: 159: }
   596                           ;LE4-7.c: 160: if(RD1 == 1)
   597  010A  1283               	bcf	3,5	;RP0=0, select bank0
   598  010B  1303               	bcf	3,6	;RP1=0, select bank0
   599  010C  1C88               	btfss	8,1	;volatile
   600  010D  289B               	goto	l982
   601                           
   602                           ;LE4-7.c: 161: {
   603                           ;LE4-7.c: 162: delay();
   604  010E  120A  118A  21DC  120A  118A  	fcall	_delay
   605                           
   606                           ;LE4-7.c: 163: incFrequency();
   607  0113  120A  118A  2231  120A  118A  	fcall	_incFrequency
   608                           
   609                           ;LE4-7.c: 164: PR2 = PR2Values[frequencyIndex];
   610  0118  0878               	movf	_frequencyIndex,w
   611  0119  1283               	bcf	3,5	;RP0=0, select bank0
   612  011A  1303               	bcf	3,6	;RP1=0, select bank0
   613  011B  00CC               	movwf	??_main
   614  011C  074C               	addwf	??_main,w
   615  011D  3E3E               	addlw	_PR2Values& (0+255)
   616  011E  0084               	movwf	4
   617  011F  1383               	bcf	3,7	;select IRP bank0
   618  0120  0800               	movf	0,w
   619  0121  1683               	bsf	3,5	;RP0=1, select bank1
   620  0122  1303               	bcf	3,6	;RP1=0, select bank1
   621  0123  0092               	movwf	18	;volatile
   622                           
   623                           ;LE4-7.c: 165: CCPR1L = timerMaxCount[frequencyIndex][dutyCycleIndex] & 0x003;
   624  0124  0876               	movf	_dutyCycleIndex,w
   625  0125  1283               	bcf	3,5	;RP0=0, select bank0
   626  0126  1303               	bcf	3,6	;RP1=0, select bank0
   627  0127  00CC               	movwf	??_main
   628  0128  3001               	movlw	1
   629  0129                     u455:	
   630  0129  1003               	clrc
   631  012A  0DCC               	rlf	??_main,f
   632  012B  3EFF               	addlw	-1
   633  012C  1D03               	skipz
   634  012D  2929               	goto	u455
   635  012E  300A               	movlw	10
   636  012F  00CD               	movwf	??_main+1
   637  0130  084D               	movf	??_main+1,w
   638  0131  00F4               	movwf	___bmul@multiplicand
   639  0132  0878               	movf	_frequencyIndex,w
   640  0133  120A  118A  220D  120A  118A  	fcall	___bmul
   641  0138  3E20               	addlw	_timerMaxCount& (0+255)
   642  0139  1283               	bcf	3,5	;RP0=0, select bank0
   643  013A  1303               	bcf	3,6	;RP1=0, select bank0
   644  013B  074C               	addwf	??_main,w
   645  013C  00CE               	movwf	??_main+2
   646  013D  084E               	movf	??_main+2,w
   647  013E  0084               	movwf	4
   648  013F  1383               	bcf	3,7	;select IRP bank0
   649  0140  0800               	movf	0,w
   650  0141  3903               	andlw	3
   651  0142  0095               	movwf	21	;volatile
   652                           
   653                           ;LE4-7.c: 166: CCP1CON = (timerMaxCount[frequencyIndex][dutyCycleIndex] & 0x3FC) >> 2;
   654  0143  0876               	movf	_dutyCycleIndex,w
   655  0144  00CC               	movwf	??_main
   656  0145  3001               	movlw	1
   657  0146                     u465:	
   658  0146  1003               	clrc
   659  0147  0DCC               	rlf	??_main,f
   660  0148  3EFF               	addlw	-1
   661  0149  1D03               	skipz
   662  014A  2946               	goto	u465
   663  014B  300A               	movlw	10
   664  014C  00CD               	movwf	??_main+1
   665  014D  084D               	movf	??_main+1,w
   666  014E  00F4               	movwf	___bmul@multiplicand
   667  014F  0878               	movf	_frequencyIndex,w
   668  0150  120A  118A  220D  120A  118A  	fcall	___bmul
   669  0155  3E20               	addlw	_timerMaxCount& (0+255)
   670  0156  1283               	bcf	3,5	;RP0=0, select bank0
   671  0157  1303               	bcf	3,6	;RP1=0, select bank0
   672  0158  074C               	addwf	??_main,w
   673  0159  00CE               	movwf	??_main+2
   674  015A  084E               	movf	??_main+2,w
   675  015B  0084               	movwf	4
   676  015C  1383               	bcf	3,7	;select IRP bank0
   677  015D  0800               	movf	0,w
   678  015E  00CF               	movwf	??_main+3
   679  015F  0A84               	incf	4,f
   680  0160  0800               	movf	0,w
   681  0161  00D0               	movwf	??_main+4
   682  0162  1003               	clrc
   683  0163  0CD0               	rrf	??_main+4,f
   684  0164  0CCF               	rrf	??_main+3,f
   685  0165  1003               	clrc
   686  0166  0CD0               	rrf	??_main+4,f
   687  0167  0CCF               	rrf	??_main+3,f
   688  0168  084F               	movf	??_main+3,w
   689  0169  0097               	movwf	23	;volatile
   690  016A  2896               	goto	L1
   691  016B                     __end_of_main:	
   692                           ;LE4-7.c: 168: }
   693                           ;LE4-7.c: 169: }
   694                           
   695                           ;LE4-7.c: 167: displayMode();
   696                           
   697                           
   698                           	psect	text1
   699  0231                     __ptext1:	
   700 ;; *************** function _incFrequency *****************
   701 ;; Defined at:
   702 ;;		line 266 in file "C:\Users\notjo\OneDrive\Desktop\USC\USC-Year3-Sem2\3201-EmbeddedSystems\Labs\LE_04\LE4-7\LE4-7.c"
   703 ;; Parameters:    Size  Location     Type
   704 ;;		None
   705 ;; Auto vars:     Size  Location     Type
   706 ;;		None
   707 ;; Return value:  Size  Location     Type
   708 ;;		None               void
   709 ;; Registers used:
   710 ;;		wreg, status,2
   711 ;; Tracked objects:
   712 ;;		On entry : 0/0
   713 ;;		On exit  : 0/0
   714 ;;		Unchanged: 0/0
   715 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   716 ;;      Params:         0       0       0       0       0
   717 ;;      Locals:         0       0       0       0       0
   718 ;;      Temps:          0       0       0       0       0
   719 ;;      Totals:         0       0       0       0       0
   720 ;;Total ram usage:        0 bytes
   721 ;; Hardware stack levels used:    1
   722 ;; Hardware stack levels required when called:    1
   723 ;; This function calls:
   724 ;;		Nothing
   725 ;; This function is called by:
   726 ;;		_main
   727 ;; This function uses a non-reentrant model
   728 ;;
   729                           
   730                           
   731                           ;psect for function _incFrequency
   732  0231                     _incFrequency:	
   733                           
   734                           ;LE4-7.c: 268: if(frequencyIndex < 2)
   735                           
   736                           ;incstack = 0
   737                           ; Regs used in _incFrequency: [wreg+status,2]
   738  0231  3000               	movlw	0
   739  0232  0279               	subwf	_frequencyIndex+1,w
   740  0233  3002               	movlw	2
   741  0234  1903               	skipnz
   742  0235  0278               	subwf	_frequencyIndex,w
   743  0236  1803               	skipnc
   744  0237  2A3F               	goto	l784
   745                           
   746                           ;LE4-7.c: 269: frequencyIndex++;
   747  0238  3001               	movlw	1
   748  0239  07F8               	addwf	_frequencyIndex,f
   749  023A  1803               	skipnc
   750  023B  0AF9               	incf	_frequencyIndex+1,f
   751  023C  3000               	movlw	0
   752  023D  07F9               	addwf	_frequencyIndex+1,f
   753  023E  0008               	return
   754  023F                     l784:	
   755                           
   756                           ;LE4-7.c: 270: else
   757                           ;LE4-7.c: 271: frequencyIndex = 0;
   758  023F  01F8               	clrf	_frequencyIndex
   759  0240  01F9               	clrf	_frequencyIndex+1
   760  0241  0008               	return
   761  0242                     __end_of_incFrequency:	
   762                           
   763                           	psect	text2
   764  0242                     __ptext2:	
   765 ;; *************** function _incDutyCycle *****************
   766 ;; Defined at:
   767 ;;		line 252 in file "C:\Users\notjo\OneDrive\Desktop\USC\USC-Year3-Sem2\3201-EmbeddedSystems\Labs\LE_04\LE4-7\LE4-7.c"
   768 ;; Parameters:    Size  Location     Type
   769 ;;		None
   770 ;; Auto vars:     Size  Location     Type
   771 ;;		None
   772 ;; Return value:  Size  Location     Type
   773 ;;		None               void
   774 ;; Registers used:
   775 ;;		wreg, status,2
   776 ;; Tracked objects:
   777 ;;		On entry : 0/0
   778 ;;		On exit  : 0/0
   779 ;;		Unchanged: 0/0
   780 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   781 ;;      Params:         0       0       0       0       0
   782 ;;      Locals:         0       0       0       0       0
   783 ;;      Temps:          0       0       0       0       0
   784 ;;      Totals:         0       0       0       0       0
   785 ;;Total ram usage:        0 bytes
   786 ;; Hardware stack levels used:    1
   787 ;; Hardware stack levels required when called:    1
   788 ;; This function calls:
   789 ;;		Nothing
   790 ;; This function is called by:
   791 ;;		_main
   792 ;; This function uses a non-reentrant model
   793 ;;
   794                           
   795                           
   796                           ;psect for function _incDutyCycle
   797  0242                     _incDutyCycle:	
   798                           
   799                           ;LE4-7.c: 254: if(dutyCycleIndex < 4)
   800                           
   801                           ;incstack = 0
   802                           ; Regs used in _incDutyCycle: [wreg+status,2]
   803  0242  3000               	movlw	0
   804  0243  0277               	subwf	_dutyCycleIndex+1,w
   805  0244  3004               	movlw	4
   806  0245  1903               	skipnz
   807  0246  0276               	subwf	_dutyCycleIndex,w
   808  0247  1803               	skipnc
   809  0248  2A50               	goto	l778
   810                           
   811                           ;LE4-7.c: 255: dutyCycleIndex++;
   812  0249  3001               	movlw	1
   813  024A  07F6               	addwf	_dutyCycleIndex,f
   814  024B  1803               	skipnc
   815  024C  0AF7               	incf	_dutyCycleIndex+1,f
   816  024D  3000               	movlw	0
   817  024E  07F7               	addwf	_dutyCycleIndex+1,f
   818  024F  0008               	return
   819  0250                     l778:	
   820                           
   821                           ;LE4-7.c: 256: else
   822                           ;LE4-7.c: 257: dutyCycleIndex = 0;
   823  0250  01F6               	clrf	_dutyCycleIndex
   824  0251  01F7               	clrf	_dutyCycleIndex+1
   825  0252  0008               	return
   826  0253                     __end_of_incDutyCycle:	
   827                           
   828                           	psect	text3
   829  016B                     __ptext3:	
   830 ;; *************** function _displayMode *****************
   831 ;; Defined at:
   832 ;;		line 181 in file "C:\Users\notjo\OneDrive\Desktop\USC\USC-Year3-Sem2\3201-EmbeddedSystems\Labs\LE_04\LE4-7\LE4-7.c"
   833 ;; Parameters:    Size  Location     Type
   834 ;;		None
   835 ;; Auto vars:     Size  Location     Type
   836 ;;  temp2           2    4[BANK0 ] unsigned int 
   837 ;;  temp            2    2[BANK0 ] unsigned int 
   838 ;;  displayBits     2    0[BANK0 ] unsigned int 
   839 ;; Return value:  Size  Location     Type
   840 ;;		None               void
   841 ;; Registers used:
   842 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   843 ;; Tracked objects:
   844 ;;		On entry : 0/0
   845 ;;		On exit  : 0/0
   846 ;;		Unchanged: 0/0
   847 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   848 ;;      Params:         0       0       0       0       0
   849 ;;      Locals:         0       6       0       0       0
   850 ;;      Temps:          0       0       0       0       0
   851 ;;      Totals:         0       6       0       0       0
   852 ;;Total ram usage:        6 bytes
   853 ;; Hardware stack levels used:    1
   854 ;; Hardware stack levels required when called:    1
   855 ;; This function calls:
   856 ;;		Nothing
   857 ;; This function is called by:
   858 ;;		_main
   859 ;; This function uses a non-reentrant model
   860 ;;
   861                           
   862                           
   863                           ;psect for function _displayMode
   864  016B                     _displayMode:	
   865                           
   866                           ;LE4-7.c: 183: PORTB = 0x00;
   867                           
   868                           ;incstack = 0
   869                           ; Regs used in _displayMode: [wreg-fsr0h+status,2+status,0]
   870  016B  1283               	bcf	3,5	;RP0=0, select bank0
   871  016C  1303               	bcf	3,6	;RP1=0, select bank0
   872  016D  0186               	clrf	6	;volatile
   873                           
   874                           ;LE4-7.c: 184: unsigned int temp = 0x00;
   875  016E  01C8               	clrf	displayMode@temp
   876  016F  01C9               	clrf	displayMode@temp+1
   877                           
   878                           ;LE4-7.c: 185: unsigned int temp2 = 0x00;
   879  0170  01CA               	clrf	displayMode@temp2
   880  0171  01CB               	clrf	displayMode@temp2+1
   881                           
   882                           ;LE4-7.c: 186: unsigned int displayBits = 0x00;
   883  0172  01C6               	clrf	displayMode@displayBits
   884  0173  01C7               	clrf	displayMode@displayBits+1
   885                           
   886                           ;LE4-7.c: 187: switch(frequencyIndex)
   887  0174  297E               	goto	l914
   888  0175                     l906:	
   889                           ;LE4-7.c: 188: {
   890                           ;LE4-7.c: 189: case 0:
   891                           
   892                           
   893                           ;LE4-7.c: 190: temp = 0x01;
   894  0175  3001               	movlw	1
   895  0176  297A               	goto	L3
   896  0177                     l908:	
   897                           ;LE4-7.c: 192: case 1:
   898                           
   899                           ;LE4-7.c: 191: break;
   900                           
   901                           
   902                           ;LE4-7.c: 193: temp = 0x02;
   903  0177  3002               	movlw	2
   904  0178  297A               	goto	L3
   905  0179                     l910:	
   906                           ;LE4-7.c: 195: case 2:
   907                           
   908                           ;LE4-7.c: 194: break;
   909                           
   910                           
   911                           ;LE4-7.c: 196: temp = 0x03;
   912  0179  3003               	movlw	3
   913  017A                     L3:	
   914  017A  00C8               	movwf	displayMode@temp
   915  017B  3000               	movlw	0
   916  017C  00C9               	movwf	displayMode@temp+1
   917                           
   918                           ;LE4-7.c: 198: }
   919                           
   920                           ;LE4-7.c: 197: break;
   921  017D  299C               	goto	l928
   922  017E                     l914:	
   923                           
   924                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   925                           ; Switch size 1, requested type "space"
   926                           ; Number of cases is 1, Range of values is 0 to 0
   927                           ; switch strategies available:
   928                           ; Name         Instructions Cycles
   929                           ; simple_byte            4     3 (average)
   930                           ; direct_byte           11     8 (fixed)
   931                           ; jumptable            260     6 (fixed)
   932                           ;	Chosen strategy is simple_byte
   933  017E  0879               	movf	_frequencyIndex+1,w
   934  017F  3A00               	xorlw	0	; case 0
   935  0180  1903               	skipnz
   936  0181  2983               	goto	l1050
   937  0182  299C               	goto	l928
   938  0183                     l1050:	
   939                           
   940                           ; Switch size 1, requested type "space"
   941                           ; Number of cases is 3, Range of values is 0 to 2
   942                           ; switch strategies available:
   943                           ; Name         Instructions Cycles
   944                           ; simple_byte           10     6 (average)
   945                           ; direct_byte           17     8 (fixed)
   946                           ; jumptable            260     6 (fixed)
   947                           ;	Chosen strategy is simple_byte
   948  0183  0878               	movf	_frequencyIndex,w
   949  0184  3A00               	xorlw	0	; case 0
   950  0185  1903               	skipnz
   951  0186  2975               	goto	l906
   952  0187  3A01               	xorlw	1	; case 1
   953  0188  1903               	skipnz
   954  0189  2977               	goto	l908
   955  018A  3A03               	xorlw	3	; case 2
   956  018B  1903               	skipnz
   957  018C  2979               	goto	l910
   958  018D  299C               	goto	l928
   959                           
   960                           ;LE4-7.c: 199: switch(dutyCycleIndex)
   961  018E  299C               	goto	l928
   962  018F                     l916:	
   963                           ;LE4-7.c: 200: {
   964                           ;LE4-7.c: 201: case 0:
   965                           
   966                           
   967                           ;LE4-7.c: 202: temp2 = 0x01 << 2;
   968  018F  3004               	movlw	4
   969  0190  2998               	goto	L7
   970  0191                     l918:	
   971                           ;LE4-7.c: 204: case 1:
   972                           
   973                           ;LE4-7.c: 203: break;
   974                           
   975                           
   976                           ;LE4-7.c: 205: temp2 = 0x02 << 2;
   977  0191  3008               	movlw	8
   978  0192  2998               	goto	L7
   979  0193                     l920:	
   980                           ;LE4-7.c: 207: case 2:
   981                           
   982                           ;LE4-7.c: 206: break;
   983                           
   984                           
   985                           ;LE4-7.c: 208: temp2 = 0x03 << 2;
   986  0193  300C               	movlw	12
   987  0194  2998               	goto	L7
   988  0195                     l922:	
   989                           ;LE4-7.c: 210: case 3:
   990                           
   991                           ;LE4-7.c: 209: break;
   992                           
   993                           
   994                           ;LE4-7.c: 211: temp2 = 0x04 << 2;
   995  0195  3010               	movlw	16
   996  0196  2998               	goto	L7
   997  0197                     l924:	
   998                           ;LE4-7.c: 213: case 4:
   999                           
  1000                           ;LE4-7.c: 212: break;
  1001                           
  1002                           
  1003                           ;LE4-7.c: 214: temp2 = 0x05 << 2;
  1004  0197  3014               	movlw	20
  1005  0198                     L7:	
  1006  0198  00CA               	movwf	displayMode@temp2
  1007  0199  3000               	movlw	0
  1008  019A  00CB               	movwf	displayMode@temp2+1
  1009                           
  1010                           ;LE4-7.c: 216: }
  1011                           
  1012                           ;LE4-7.c: 215: break;
  1013  019B  29B2               	goto	l930
  1014  019C                     l928:	
  1015                           
  1016                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1017                           ; Switch size 1, requested type "space"
  1018                           ; Number of cases is 1, Range of values is 0 to 0
  1019                           ; switch strategies available:
  1020                           ; Name         Instructions Cycles
  1021                           ; simple_byte            4     3 (average)
  1022                           ; direct_byte           11     8 (fixed)
  1023                           ; jumptable            260     6 (fixed)
  1024                           ;	Chosen strategy is simple_byte
  1025  019C  0877               	movf	_dutyCycleIndex+1,w
  1026  019D  3A00               	xorlw	0	; case 0
  1027  019E  1903               	skipnz
  1028  019F  29A1               	goto	l1052
  1029  01A0  29B2               	goto	l930
  1030  01A1                     l1052:	
  1031                           
  1032                           ; Switch size 1, requested type "space"
  1033                           ; Number of cases is 5, Range of values is 0 to 4
  1034                           ; switch strategies available:
  1035                           ; Name         Instructions Cycles
  1036                           ; simple_byte           16     9 (average)
  1037                           ; direct_byte           23     8 (fixed)
  1038                           ; jumptable            260     6 (fixed)
  1039                           ;	Chosen strategy is simple_byte
  1040  01A1  0876               	movf	_dutyCycleIndex,w
  1041  01A2  3A00               	xorlw	0	; case 0
  1042  01A3  1903               	skipnz
  1043  01A4  298F               	goto	l916
  1044  01A5  3A01               	xorlw	1	; case 1
  1045  01A6  1903               	skipnz
  1046  01A7  2991               	goto	l918
  1047  01A8  3A03               	xorlw	3	; case 2
  1048  01A9  1903               	skipnz
  1049  01AA  2993               	goto	l920
  1050  01AB  3A01               	xorlw	1	; case 3
  1051  01AC  1903               	skipnz
  1052  01AD  2995               	goto	l922
  1053  01AE  3A07               	xorlw	7	; case 4
  1054  01AF  1903               	skipnz
  1055  01B0  2997               	goto	l924
  1056  01B1  29B2               	goto	l930
  1057  01B2                     l930:	
  1058                           
  1059                           ;LE4-7.c: 217: PORTB = temp + temp2;
  1060  01B2  084A               	movf	displayMode@temp2,w
  1061  01B3  0748               	addwf	displayMode@temp,w
  1062  01B4  0086               	movwf	6	;volatile
  1063  01B5  0008               	return
  1064  01B6                     __end_of_displayMode:	
  1065                           
  1066                           	psect	text4
  1067  01DC                     __ptext4:	
  1068 ;; *************** function _delay *****************
  1069 ;; Defined at:
  1070 ;;		line 229 in file "C:\Users\notjo\OneDrive\Desktop\USC\USC-Year3-Sem2\3201-EmbeddedSystems\Labs\LE_04\LE4-7\LE4-7.c"
  1071 ;; Parameters:    Size  Location     Type
  1072 ;;		None
  1073 ;; Auto vars:     Size  Location     Type
  1074 ;;  localClock      2    4[COMMON] int 
  1075 ;; Return value:  Size  Location     Type
  1076 ;;		None               void
  1077 ;; Registers used:
  1078 ;;		wreg, status,2, btemp+1
  1079 ;; Tracked objects:
  1080 ;;		On entry : 0/0
  1081 ;;		On exit  : 0/0
  1082 ;;		Unchanged: 0/0
  1083 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1084 ;;      Params:         0       0       0       0       0
  1085 ;;      Locals:         2       0       0       0       0
  1086 ;;      Temps:          0       0       0       0       0
  1087 ;;      Totals:         2       0       0       0       0
  1088 ;;Total ram usage:        2 bytes
  1089 ;; Hardware stack levels used:    1
  1090 ;; Hardware stack levels required when called:    1
  1091 ;; This function calls:
  1092 ;;		Nothing
  1093 ;; This function is called by:
  1094 ;;		_main
  1095 ;; This function uses a non-reentrant model
  1096 ;;
  1097                           
  1098                           
  1099                           ;psect for function _delay
  1100  01DC                     _delay:	
  1101                           
  1102                           ;LE4-7.c: 234: int localClock = 0;
  1103                           
  1104                           ;incstack = 0
  1105                           ; Regs used in _delay: [wreg+status,2+btemp+1]
  1106  01DC  01F4               	clrf	delay@localClock
  1107  01DD  01F5               	clrf	delay@localClock+1
  1108  01DE                     l772:	
  1109                           ;LE4-7.c: 235: while(localClock < 98)
  1110                           
  1111  01DE  0875               	movf	delay@localClock+1,w
  1112  01DF  3A80               	xorlw	128
  1113  01E0  00FF               	movwf	127
  1114  01E1  3080               	movlw	128
  1115  01E2  027F               	subwf	127,w
  1116  01E3  1D03               	skipz
  1117  01E4  29E7               	goto	u195
  1118  01E5  3062               	movlw	98
  1119  01E6  0274               	subwf	delay@localClock,w
  1120  01E7                     u195:	
  1121  01E7  1803               	btfsc	3,0
  1122  01E8  0008               	return
  1123                           
  1124                           ;LE4-7.c: 236: {
  1125                           ;LE4-7.c: 237: if(count_flag == 1)
  1126  01E9  3001               	movlw	1
  1127  01EA  1283               	bcf	3,5	;RP0=0, select bank0
  1128  01EB  1303               	bcf	3,6	;RP1=0, select bank0
  1129  01EC  0651               	xorwf	_count_flag,w
  1130  01ED  0452               	iorwf	_count_flag+1,w
  1131  01EE  1D03               	skipz
  1132  01EF  29DE               	goto	l772
  1133                           
  1134                           ;LE4-7.c: 238: {
  1135                           ;LE4-7.c: 239: count_flag = 0;
  1136  01F0  01D1               	clrf	_count_flag
  1137  01F1  01D2               	clrf	_count_flag+1
  1138                           
  1139                           ;LE4-7.c: 240: localClock++;
  1140  01F2  3001               	movlw	1
  1141  01F3  07F4               	addwf	delay@localClock,f
  1142  01F4  1803               	skipnc
  1143  01F5  0AF5               	incf	delay@localClock+1,f
  1144  01F6  3000               	movlw	0
  1145  01F7  07F5               	addwf	delay@localClock+1,f
  1146  01F8  29DE               	goto	l772
  1147  01F9                     __end_of_delay:	
  1148                           
  1149                           	psect	text5
  1150  020D                     __ptext5:	
  1151 ;; *************** function ___bmul *****************
  1152 ;; Defined at:
  1153 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\Umul8.c"
  1154 ;; Parameters:    Size  Location     Type
  1155 ;;  multiplier      1    wreg     unsigned char 
  1156 ;;  multiplicand    1    4[COMMON] unsigned char 
  1157 ;; Auto vars:     Size  Location     Type
  1158 ;;  multiplier      1    1[BANK0 ] unsigned char 
  1159 ;;  product         1    0[BANK0 ] unsigned char 
  1160 ;; Return value:  Size  Location     Type
  1161 ;;                  1    wreg      unsigned char 
  1162 ;; Registers used:
  1163 ;;		wreg, status,2, status,0
  1164 ;; Tracked objects:
  1165 ;;		On entry : 0/0
  1166 ;;		On exit  : 0/0
  1167 ;;		Unchanged: 0/0
  1168 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1169 ;;      Params:         1       0       0       0       0
  1170 ;;      Locals:         0       2       0       0       0
  1171 ;;      Temps:          1       0       0       0       0
  1172 ;;      Totals:         2       2       0       0       0
  1173 ;;Total ram usage:        4 bytes
  1174 ;; Hardware stack levels used:    1
  1175 ;; Hardware stack levels required when called:    1
  1176 ;; This function calls:
  1177 ;;		Nothing
  1178 ;; This function is called by:
  1179 ;;		_main
  1180 ;; This function uses a non-reentrant model
  1181 ;;
  1182                           
  1183                           
  1184                           ;psect for function ___bmul
  1185  020D                     ___bmul:	
  1186                           
  1187                           ;incstack = 0
  1188                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  1189                           ;___bmul@multiplier stored from wreg
  1190  020D  1283               	bcf	3,5	;RP0=0, select bank0
  1191  020E  1303               	bcf	3,6	;RP1=0, select bank0
  1192  020F  00C7               	movwf	___bmul@multiplier
  1193  0210  01C6               	clrf	___bmul@product
  1194  0211                     l942:	
  1195  0211  1C47               	btfss	___bmul@multiplier,0
  1196  0212  2A17               	goto	l946
  1197  0213  0874               	movf	___bmul@multiplicand,w
  1198  0214  00F5               	movwf	??___bmul
  1199  0215  0875               	movf	??___bmul,w
  1200  0216  07C6               	addwf	___bmul@product,f
  1201  0217                     l946:	
  1202  0217  1003               	clrc
  1203  0218  0DF4               	rlf	___bmul@multiplicand,f
  1204  0219  1003               	clrc
  1205  021A  0CC7               	rrf	___bmul@multiplier,f
  1206  021B  08C7               	movf	___bmul@multiplier,f
  1207  021C  1D03               	skipz
  1208  021D  2A11               	goto	l942
  1209  021E  0846               	movf	___bmul@product,w
  1210  021F  0008               	return
  1211  0220                     __end_of___bmul:	
  1212                           
  1213                           	psect	text6
  1214  01F9                     __ptext6:	
  1215 ;; *************** function _ISR *****************
  1216 ;; Defined at:
  1217 ;;		line 81 in file "C:\Users\notjo\OneDrive\Desktop\USC\USC-Year3-Sem2\3201-EmbeddedSystems\Labs\LE_04\LE4-7\LE4-7.c"
  1218 ;; Parameters:    Size  Location     Type
  1219 ;;		None
  1220 ;; Auto vars:     Size  Location     Type
  1221 ;;		None
  1222 ;; Return value:  Size  Location     Type
  1223 ;;		None               void
  1224 ;; Registers used:
  1225 ;;		wreg
  1226 ;; Tracked objects:
  1227 ;;		On entry : 0/0
  1228 ;;		On exit  : 0/0
  1229 ;;		Unchanged: 0/0
  1230 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1231 ;;      Params:         0       0       0       0       0
  1232 ;;      Locals:         0       0       0       0       0
  1233 ;;      Temps:          4       0       0       0       0
  1234 ;;      Totals:         4       0       0       0       0
  1235 ;;Total ram usage:        4 bytes
  1236 ;; Hardware stack levels used:    1
  1237 ;; This function calls:
  1238 ;;		Nothing
  1239 ;; This function is called by:
  1240 ;;		Interrupt level 1
  1241 ;; This function uses a non-reentrant model
  1242 ;;
  1243                           
  1244                           
  1245                           ;psect for function _ISR
  1246  01F9                     _ISR:	
  1247                           
  1248                           ;LE4-7.c: 83: GIE = 0;
  1249  01F9  138B               	bcf	11,7	;volatile
  1250                           
  1251                           ;LE4-7.c: 84: if(TMR0IF)
  1252  01FA  1D0B               	btfss	11,2	;volatile
  1253  01FB  2A01               	goto	i1l808
  1254                           
  1255                           ;LE4-7.c: 85: {
  1256                           ;LE4-7.c: 86: TMR0IF = 0;
  1257  01FC  110B               	bcf	11,2	;volatile
  1258                           
  1259                           ;LE4-7.c: 87: count_flag = 1;
  1260  01FD  3001               	movlw	1
  1261  01FE  00D1               	movwf	_count_flag
  1262  01FF  3000               	movlw	0
  1263  0200  00D2               	movwf	_count_flag+1
  1264  0201                     i1l808:	
  1265                           
  1266                           ;LE4-7.c: 88: }
  1267                           ;LE4-7.c: 89: GIE = 1;
  1268  0201  178B               	bsf	11,7	;volatile
  1269  0202  0873               	movf	??_ISR+3,w
  1270  0203  00FF               	movwf	127
  1271  0204  0872               	movf	??_ISR+2,w
  1272  0205  008A               	movwf	10
  1273  0206  0871               	movf	??_ISR+1,w
  1274  0207  0084               	movwf	4
  1275  0208  0E70               	swapf	??_ISR^(0+-128),w
  1276  0209  0083               	movwf	3
  1277  020A  0EFE               	swapf	126,f
  1278  020B  0E7E               	swapf	126,w
  1279  020C  0009               	retfie
  1280  020D                     __end_of_ISR:	
  1281  007E                     btemp	set	126	;btemp
  1282  007E                     wtemp	set	126
  1283  007E                     wtemp0	set	126
  1284  0080                     wtemp1	set	128
  1285  0082                     wtemp2	set	130
  1286  0084                     wtemp3	set	132
  1287  0086                     wtemp4	set	134
  1288  0088                     wtemp5	set	136
  1289  007F                     wtemp6	set	127
  1290  007E                     ttemp	set	126
  1291  007E                     ttemp0	set	126
  1292  0081                     ttemp1	set	129
  1293  0084                     ttemp2	set	132
  1294  0087                     ttemp3	set	135
  1295  007F                     ttemp4	set	127
  1296  007E                     ltemp	set	126
  1297  007E                     ltemp0	set	126
  1298  0082                     ltemp1	set	130
  1299  0086                     ltemp2	set	134
  1300  0080                     ltemp3	set	128
  1301                           
  1302                           	psect	intentry
  1303  0004                     __pintentry:	
  1304                           ;incstack = 0
  1305                           ; Regs used in _ISR: [wreg]
  1306                           
  1307  0004                     interrupt_function:	
  1308  007E                     saved_w	set	btemp
  1309  0004  00FE               	movwf	btemp
  1310  0005  0E03               	swapf	3,w
  1311  0006  00F0               	movwf	??_ISR
  1312  0007  0804               	movf	4,w
  1313  0008  00F1               	movwf	??_ISR+1
  1314  0009  080A               	movf	10,w
  1315  000A  00F2               	movwf	??_ISR+2
  1316  000B  1283               	bcf	3,5	;RP0=0, select bank0
  1317  000C  1303               	bcf	3,6	;RP1=0, select bank0
  1318  000D  087F               	movf	btemp+1,w
  1319  000E  00F3               	movwf	??_ISR+3
  1320  000F  120A  118A  29F9   	ljmp	_ISR


Data Sizes:
    Strings     0
    Constant    0
    Data        38
    BSS         6
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6      10
    BANK0            80     11      51
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->___bmul
    _main->_delay

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_displayMode

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0     465
                                              6 BANK0      5     5      0
                             ___bmul
                              _delay
                        _displayMode
                       _incDutyCycle
                       _incFrequency
 ---------------------------------------------------------------------------------
 (1) _incFrequency                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _incDutyCycle                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _displayMode                                          6     6      0      95
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (1) _delay                                                2     2      0      24
                                              4 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) ___bmul                                               4     3      1     346
                                              4 COMMON     2     1      1
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _ISR                                                  4     4      0       0
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___bmul
   _delay
   _displayMode
   _incDutyCycle
   _incFrequency

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      B      33       5       63.8%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      6       A       1       71.4%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      3D      12        0.0%
ABS                  0      0      3D       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V1.33 build 59893 
Symbol Table                                                                                   Wed Mar 20 16:59:58 2024

                      pc 0002             ?_displayMode 0070           ___bmul@product 0046  
            __CFG_CP$OFF 0000                       fsr 0004                      l910 0179  
                    l920 0193                      l922 0195                      l930 01B2  
                    l906 0175                      l914 017E                      l772 01DE  
                    l924 0197                      l916 018F                      l908 0177  
                    l942 0211                      l918 0191                      l928 019C  
                    l784 023F                      l946 0217                      l778 0250  
                    l982 009B                      _GIE 005F                      l996 010A  
                    _RD0 0040                      _RC2 003A                      _RD1 0041  
                    _PR2 0092                      u415 00BA                      u425 00E1  
           __CFG_CPD$OFF 0000                      u195 01E7                      u435 00FC  
                    _ISR 01F9                      u455 0129                      u375 0049  
                    u465 0146                      u385 0070                      u395 008B  
                    fsr0 0004                      indf 0000             __CFG_FOSC$XT 0000  
           __CFG_LVP$OFF 0000                     ?_ISR 0070                     l1050 0183  
                   l1052 01A1           ??_incFrequency 0074                     _T0IE 005D  
                   _T0IF 005A             __CFG_WRT$OFF 0000           ??_incDutyCycle 0074  
                   _flag 0044                     _main 002B                     btemp 007E  
          __CFG_BOREN$ON 0000                     ltemp 007E                     start 0012  
                   ttemp 007E                     wtemp 007E        ___bmul@multiplier 0047  
                  ??_ISR 0070                    ?_main 0070            __CFG_WDTE$OFF 0000  
                  _T2CON 0012                    i1l808 0201                    _PORTB 0006  
                  _TRISB 0086                    _TRISC 0087                    _TRISD 0088  
          __CFG_PWRTE$ON 0000                    _delay 01DC                    pclath 000A  
                  ltemp0 007E                    ltemp1 0082                    ltemp2 0086  
                  ltemp3 0080                    ttemp0 007E                    ttemp1 0081  
                  ttemp2 0084                    ttemp3 0087                    ttemp4 007F  
                  status 0003                    wtemp0 007E                    wtemp1 0080  
                  wtemp2 0082                    wtemp3 0084                    wtemp4 0086  
                  wtemp5 0088                    wtemp6 007F          __initialization 0015  
           __end_of_main 016B                   ??_main 004C                   ?_delay 0070  
                 _CCPR1L 0015                   _TMR0IF 005A                   ___bmul 020D  
   __end_of_incFrequency 0242     __size_of_displayMode 004B     __end_of_incDutyCycle 0253  
                 saved_w 007E  __end_of__initialization 0027      ___bmul@multiplicand 0074  
         __pcstackCOMMON 0070             __pidataBANK0 01B6            __end_of_delay 01F9  
                ??_delay 0074               __pbssBANK0 0051               __pmaintext 002B  
                ?___bmul 0074               __pintentry 0004                  _CCP1CON 0017  
             _count_flag 0051    __size_of_incFrequency 0011          __size_of___bmul 0013  
  __size_of_incDutyCycle 0011                  __ptext1 0231                  __ptext2 0242  
                __ptext3 016B                  __ptext4 01DC                  __ptext5 020D  
                __ptext6 01F9             __size_of_ISR 0014     end_of_initialization 0027  
           _incFrequency 0231             _incDutyCycle 0242           _frequencyIndex 0078  
              _PR2Values 003E            ??_displayMode 0074           __end_of___bmul 0220  
    start_initialization 0015              __end_of_ISR 020D                 ??___bmul 0075  
             init_fetch0 0220              __pdataBANK0 0020      __end_of_displayMode 01B6  
            __pbssCOMMON 0076                ___latbits 0002            __pcstackBANK0 0046  
         _dutyCycleIndex 0076          delay@localClock 0074         displayMode@temp2 004A  
         __size_of_delay 001D        interrupt_function 0004              _displayMode 016B  
          _timerMaxCount 0020   displayMode@displayBits 0046          displayMode@temp 0048  
          __size_of_main 0140                 init_ram0 0224                 intlevel1 0000  
             _OPTION_REG 0081            ?_incFrequency 0070            ?_incDutyCycle 0070  

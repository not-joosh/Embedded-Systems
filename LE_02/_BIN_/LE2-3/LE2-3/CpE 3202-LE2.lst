

Microchip Technology PIC LITE Macro Assembler V1.33 build 59893 
                                                                                               Wed Feb 07 17:09:17 2024

Microchip Technology Omniscient Code Generator (Lite mode) build 59893
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	text0,local,class=CODE,merge=1,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2
    12                           	psect	text4,local,class=CODE,merge=1,delta=2
    13                           	psect	text5,local,class=CODE,merge=1,delta=2
    14                           	dabs	1,0x7E,2
    15  0000                     	;# 
    16  0001                     	;# 
    17  0002                     	;# 
    18  0003                     	;# 
    19  0004                     	;# 
    20  0005                     	;# 
    21  0006                     	;# 
    22  0007                     	;# 
    23  0008                     	;# 
    24  0009                     	;# 
    25  000A                     	;# 
    26  000B                     	;# 
    27  000C                     	;# 
    28  000D                     	;# 
    29  000E                     	;# 
    30  000E                     	;# 
    31  000F                     	;# 
    32  0010                     	;# 
    33  0011                     	;# 
    34  0012                     	;# 
    35  0013                     	;# 
    36  0014                     	;# 
    37  0015                     	;# 
    38  0015                     	;# 
    39  0016                     	;# 
    40  0017                     	;# 
    41  0018                     	;# 
    42  0019                     	;# 
    43  001A                     	;# 
    44  001B                     	;# 
    45  001B                     	;# 
    46  001C                     	;# 
    47  001D                     	;# 
    48  001E                     	;# 
    49  001F                     	;# 
    50  0081                     	;# 
    51  0085                     	;# 
    52  0086                     	;# 
    53  0087                     	;# 
    54  0088                     	;# 
    55  0089                     	;# 
    56  008C                     	;# 
    57  008D                     	;# 
    58  008E                     	;# 
    59  0091                     	;# 
    60  0092                     	;# 
    61  0093                     	;# 
    62  0094                     	;# 
    63  0098                     	;# 
    64  0099                     	;# 
    65  009C                     	;# 
    66  009D                     	;# 
    67  009E                     	;# 
    68  009F                     	;# 
    69  010C                     	;# 
    70  010D                     	;# 
    71  010E                     	;# 
    72  010F                     	;# 
    73  018C                     	;# 
    74  018D                     	;# 
    75  0006                     _PORTB	set	6
    76  0007                     _PORTC	set	7
    77  0008                     _PORTD	set	8
    78  0044                     _RD4	set	68
    79  0081                     _OPTION_REG	set	129
    80  0086                     _TRISB	set	134
    81  0087                     _TRISC	set	135
    82  0088                     _TRISD	set	136
    83                           
    84                           	psect	text0
    85  0000                     __ptext0:	
    86                           ; #config settings
    87                           
    88                           
    89                           ;psect for function _delay
    90  0000                     
    91                           	psect	cinit
    92  07FC                     start_initialization:	
    93  07FC                     __initialization:	
    94  07FC                     end_of_initialization:	
    95                           ;End of C runtime variable initialization code
    96                           
    97  07FC                     __end_of__initialization:	
    98  07FC  0183               	clrf	3
    99  07FD  120A  118A  2E95   	ljmp	_main	;jump to C main() function
   100                           
   101                           	psect	cstackCOMMON
   102  0070                     __pcstackCOMMON:	
   103  0070                     ?_delay:	
   104  0070                     ?_dataCtrl:	
   105                           ; 0 bytes @ 0x0
   106                           
   107  0070                     ?_initLCD:	
   108                           ; 0 bytes @ 0x0
   109                           
   110  0070                     ?_main:	
   111                           ; 0 bytes @ 0x0
   112                           
   113  0070                     delay@timeIn:	
   114                           ; 0 bytes @ 0x0
   115                           
   116                           
   117                           ; 2 bytes @ 0x0
   118  0070                     	ds	2
   119  0072                     ??_delay:	
   120                           
   121                           ; 0 bytes @ 0x2
   122  0072                     	ds	1
   123  0073                     delay@j:	
   124                           
   125                           ; 2 bytes @ 0x3
   126  0073                     	ds	2
   127  0075                     ?_instCtrl:	
   128  0075                     ??_dataCtrl:	
   129                           ; 0 bytes @ 0x5
   130                           
   131  0075                     dataCtrl@data_inst_in:	
   132                           ; 0 bytes @ 0x5
   133                           
   134  0075                     instCtrl@instruction_in:	
   135                           ; 1 bytes @ 0x5
   136                           
   137                           
   138                           ; 2 bytes @ 0x5
   139  0075                     	ds	2
   140  0077                     ??_instCtrl:	
   141  0077                     ??_initLCD:	
   142                           ; 0 bytes @ 0x7
   143                           
   144  0077                     ?_readKey:	
   145                           ; 0 bytes @ 0x7
   146                           
   147  0077                     readKey@currentRow:	
   148                           ; 0 bytes @ 0x7
   149                           
   150                           
   151                           ; 1 bytes @ 0x7
   152  0077                     	ds	1
   153  0078                     ??_readKey:	
   154                           
   155                           ; 0 bytes @ 0x8
   156  0078                     	ds	2
   157  007A                     readKey@bits:	
   158                           
   159                           ; 2 bytes @ 0xA
   160  007A                     	ds	2
   161  007C                     readKey@rowCountIN:	
   162                           
   163                           ; 1 bytes @ 0xC
   164  007C                     	ds	1
   165  007D                     ??_main:	
   166                           
   167                           ; 0 bytes @ 0xD
   168  007D                     	ds	1
   169                           
   170                           	psect	cstackBANK0
   171  0020                     __pcstackBANK0:	
   172  0020                     main@currentRow:	
   173                           
   174                           ; 2 bytes @ 0x0
   175  0020                     	ds	2
   176  0022                     main@rowCountIN:	
   177                           
   178                           ; 2 bytes @ 0x2
   179  0022                     	ds	2
   180                           
   181                           	psect	maintext
   182  0695                     __pmaintext:	
   183 ;;
   184 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   185 ;;
   186 ;; *************** function _main *****************
   187 ;; Defined at:
   188 ;;		line 152 in file "C:\Users\admin\Documents\School\CompEng Subs\3201\LE2\LE2-3\LE2-3.c"
   189 ;; Parameters:    Size  Location     Type
   190 ;;		None
   191 ;; Auto vars:     Size  Location     Type
   192 ;;  rowCountIN      2    2[BANK0 ] int 
   193 ;;  currentRow      2    0[BANK0 ] int 
   194 ;; Return value:  Size  Location     Type
   195 ;;		None               void
   196 ;; Registers used:
   197 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   198 ;; Tracked objects:
   199 ;;		On entry : 17F/0
   200 ;;		On exit  : 0/0
   201 ;;		Unchanged: 0/0
   202 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   203 ;;      Params:         0       0       0       0       0
   204 ;;      Locals:         0       4       0       0       0
   205 ;;      Temps:          1       0       0       0       0
   206 ;;      Totals:         1       4       0       0       0
   207 ;;Total ram usage:        5 bytes
   208 ;; Hardware stack levels required when called:    3
   209 ;; This function calls:
   210 ;;		_initLCD
   211 ;;		_readKey
   212 ;; This function is called by:
   213 ;;		Startup code after reset
   214 ;; This function uses a non-reentrant model
   215 ;;
   216                           
   217                           
   218                           ;psect for function _main
   219  0695                     _main:	
   220                           
   221                           ;LE2-3.c: 158: int rowCountIN = 0;
   222                           
   223                           ;incstack = 0
   224                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   225  0695  1283               	bcf	3,5	;RP0=0, select bank0
   226  0696  1303               	bcf	3,6	;RP1=0, select bank0
   227  0697  01A2               	clrf	main@rowCountIN
   228  0698  01A3               	clrf	main@rowCountIN+1
   229                           
   230                           ;LE2-3.c: 159: int currentRow = 1;
   231  0699  3001               	movlw	1
   232  069A  00A0               	movwf	main@currentRow
   233  069B  3000               	movlw	0
   234  069C  00A1               	movwf	main@currentRow+1
   235                           
   236                           ;LE2-3.c: 160: OPTION_REG = 0xC0;
   237  069D  30C0               	movlw	192
   238  069E  1683               	bsf	3,5	;RP0=1, select bank1
   239  069F  1303               	bcf	3,6	;RP1=0, select bank1
   240  06A0  0081               	movwf	1	;volatile
   241                           
   242                           ;LE2-3.c: 161: TRISB = 0x00;
   243  06A1  0186               	clrf	6	;volatile
   244                           
   245                           ;LE2-3.c: 162: TRISC = 0x00;
   246  06A2  0187               	clrf	7	;volatile
   247                           
   248                           ;LE2-3.c: 163: PORTB = 0x00;
   249  06A3  1283               	bcf	3,5	;RP0=0, select bank0
   250  06A4  1303               	bcf	3,6	;RP1=0, select bank0
   251  06A5  0186               	clrf	6	;volatile
   252                           
   253                           ;LE2-3.c: 164: PORTC = 0x00;
   254  06A6  0187               	clrf	7	;volatile
   255                           
   256                           ;LE2-3.c: 167: TRISD = 0xFF;
   257  06A7  30FF               	movlw	255
   258  06A8  1683               	bsf	3,5	;RP0=1, select bank1
   259  06A9  1303               	bcf	3,6	;RP1=0, select bank1
   260  06AA  0088               	movwf	8	;volatile
   261                           
   262                           ;LE2-3.c: 168: PORTD = 0xFF;
   263  06AB  30FF               	movlw	255
   264  06AC  1283               	bcf	3,5	;RP0=0, select bank0
   265  06AD  1303               	bcf	3,6	;RP1=0, select bank0
   266  06AE  0088               	movwf	8	;volatile
   267                           
   268                           ;LE2-3.c: 169: initLCD();
   269  06AF  120A  118A  26C3  120A  118A  	fcall	_initLCD
   270  06B4                     l746:	
   271                           ;LE2-3.c: 170: while (1)
   272                           
   273                           
   274                           ;LE2-3.c: 171: {
   275                           ;LE2-3.c: 172: if(RD4 == 1)
   276  06B4  1283               	bcf	3,5	;RP0=0, select bank0
   277  06B5  1303               	bcf	3,6	;RP1=0, select bank0
   278  06B6  1E08               	btfss	8,4	;volatile
   279  06B7  2EB4               	goto	l746
   280                           
   281                           ;LE2-3.c: 173: {
   282                           ;LE2-3.c: 174: readKey(&rowCountIN, &currentRow);
   283  06B8  3020               	movlw	main@currentRow& (0+255)
   284  06B9  00FD               	movwf	??_main
   285  06BA  087D               	movf	??_main,w
   286  06BB  00F7               	movwf	readKey@currentRow
   287  06BC  3022               	movlw	main@rowCountIN& (0+255)
   288  06BD  120A  118A  26F8  120A  118A  	fcall	_readKey
   289  06C2  2EB4               	goto	l746
   290  06C3                     __end_of_main:	
   291                           
   292                           	psect	text1
   293  06F8                     __ptext1:	
   294 ;; *************** function _readKey *****************
   295 ;; Defined at:
   296 ;;		line 85 in file "C:\Users\admin\Documents\School\CompEng Subs\3201\LE2\LE2-3\LE2-3.c"
   297 ;; Parameters:    Size  Location     Type
   298 ;;  rowCountIN      1    wreg     PTR int 
   299 ;;		 -> main@rowCountIN(2), 
   300 ;;  currentRow      1    7[COMMON] PTR int 
   301 ;;		 -> main@currentRow(2), 
   302 ;; Auto vars:     Size  Location     Type
   303 ;;  rowCountIN      1   12[COMMON] PTR int 
   304 ;;		 -> main@rowCountIN(2), 
   305 ;;  bits            2   10[COMMON] int 
   306 ;; Return value:  Size  Location     Type
   307 ;;		None               void
   308 ;; Registers used:
   309 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   310 ;; Tracked objects:
   311 ;;		On entry : 0/0
   312 ;;		On exit  : 0/0
   313 ;;		Unchanged: 0/0
   314 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   315 ;;      Params:         1       0       0       0       0
   316 ;;      Locals:         3       0       0       0       0
   317 ;;      Temps:          2       0       0       0       0
   318 ;;      Totals:         6       0       0       0       0
   319 ;;Total ram usage:        6 bytes
   320 ;; Hardware stack levels used:    1
   321 ;; Hardware stack levels required when called:    2
   322 ;; This function calls:
   323 ;;		_dataCtrl
   324 ;;		_instCtrl
   325 ;; This function is called by:
   326 ;;		_main
   327 ;; This function uses a non-reentrant model
   328 ;;
   329                           
   330                           
   331                           ;psect for function _readKey
   332  06F8                     _readKey:	
   333                           
   334                           ;incstack = 0
   335                           ; Regs used in _readKey: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   336                           ;readKey@rowCountIN stored from wreg
   337  06F8  00FC               	movwf	readKey@rowCountIN
   338                           
   339                           ;LE2-3.c: 89: int bits = PORTD;
   340  06F9  1283               	bcf	3,5	;RP0=0, select bank0
   341  06FA  1303               	bcf	3,6	;RP1=0, select bank0
   342  06FB  0808               	movf	8,w	;volatile
   343  06FC  00F8               	movwf	??_readKey
   344  06FD  01F9               	clrf	??_readKey+1
   345  06FE  0878               	movf	??_readKey,w
   346  06FF  00FA               	movwf	readKey@bits
   347  0700  0879               	movf	??_readKey+1,w
   348  0701  00FB               	movwf	readKey@bits+1
   349                           
   350                           ;LE2-3.c: 90: switch(bits) {
   351  0702  2F6C               	goto	l708
   352  0703                     l676:	
   353                           ;LE2-3.c: 91: case 0x1D:
   354                           
   355                           
   356                           ;LE2-3.c: 92: dataCtrl('0');
   357  0703  3030               	movlw	48
   358  0704  120A  118A  266B  120A  118A  	fcall	_dataCtrl
   359                           
   360                           ;LE2-3.c: 93: break;
   361  0709  2FA0               	goto	l710
   362  070A                     l678:	
   363                           ;LE2-3.c: 94: case 0x18:
   364                           
   365                           
   366                           ;LE2-3.c: 95: dataCtrl('1');
   367  070A  3031               	movlw	49
   368  070B  120A  118A  266B  120A  118A  	fcall	_dataCtrl
   369                           
   370                           ;LE2-3.c: 96: break;
   371  0710  2FA0               	goto	l710
   372  0711                     l680:	
   373                           ;LE2-3.c: 97: case 0x19:
   374                           
   375                           
   376                           ;LE2-3.c: 98: dataCtrl('2');
   377  0711  3032               	movlw	50
   378  0712  120A  118A  266B  120A  118A  	fcall	_dataCtrl
   379                           
   380                           ;LE2-3.c: 99: break;
   381  0717  2FA0               	goto	l710
   382  0718                     l682:	
   383                           ;LE2-3.c: 100: case 0x1A:
   384                           
   385                           
   386                           ;LE2-3.c: 101: dataCtrl('3');
   387  0718  3033               	movlw	51
   388  0719  120A  118A  266B  120A  118A  	fcall	_dataCtrl
   389                           
   390                           ;LE2-3.c: 102: break;
   391  071E  2FA0               	goto	l710
   392  071F                     l684:	
   393                           ;LE2-3.c: 103: case 0x14:
   394                           
   395                           
   396                           ;LE2-3.c: 104: dataCtrl('4');
   397  071F  3034               	movlw	52
   398  0720  120A  118A  266B  120A  118A  	fcall	_dataCtrl
   399                           
   400                           ;LE2-3.c: 105: break;
   401  0725  2FA0               	goto	l710
   402  0726                     l686:	
   403                           ;LE2-3.c: 106: case 0x15:
   404                           
   405                           
   406                           ;LE2-3.c: 107: dataCtrl('5');
   407  0726  3035               	movlw	53
   408  0727  120A  118A  266B  120A  118A  	fcall	_dataCtrl
   409                           
   410                           ;LE2-3.c: 108: break;
   411  072C  2FA0               	goto	l710
   412  072D                     l688:	
   413                           ;LE2-3.c: 109: case 0x16:
   414                           
   415                           
   416                           ;LE2-3.c: 110: dataCtrl('6');
   417  072D  3036               	movlw	54
   418  072E  120A  118A  266B  120A  118A  	fcall	_dataCtrl
   419                           
   420                           ;LE2-3.c: 111: break;
   421  0733  2FA0               	goto	l710
   422  0734                     l690:	
   423                           ;LE2-3.c: 112: case 0x10:
   424                           
   425                           
   426                           ;LE2-3.c: 113: dataCtrl('7');
   427  0734  3037               	movlw	55
   428  0735  120A  118A  266B  120A  118A  	fcall	_dataCtrl
   429                           
   430                           ;LE2-3.c: 114: break;
   431  073A  2FA0               	goto	l710
   432  073B                     l692:	
   433                           ;LE2-3.c: 115: case 0x11:
   434                           
   435                           
   436                           ;LE2-3.c: 116: dataCtrl('8');
   437  073B  3038               	movlw	56
   438  073C  120A  118A  266B  120A  118A  	fcall	_dataCtrl
   439                           
   440                           ;LE2-3.c: 117: break;
   441  0741  2FA0               	goto	l710
   442  0742                     l694:	
   443                           ;LE2-3.c: 118: case 0x12:
   444                           
   445                           
   446                           ;LE2-3.c: 119: dataCtrl('9');
   447  0742  3039               	movlw	57
   448  0743  120A  118A  266B  120A  118A  	fcall	_dataCtrl
   449                           
   450                           ;LE2-3.c: 120: break;
   451  0748  2FA0               	goto	l710
   452  0749                     l696:	
   453                           ;LE2-3.c: 121: case 0x1F:
   454                           
   455                           
   456                           ;LE2-3.c: 122: dataCtrl('+');
   457  0749  302B               	movlw	43
   458  074A  120A  118A  266B  120A  118A  	fcall	_dataCtrl
   459                           
   460                           ;LE2-3.c: 123: break;
   461  074F  2FA0               	goto	l710
   462  0750                     l698:	
   463                           ;LE2-3.c: 124: case 0x1B:
   464                           
   465                           
   466                           ;LE2-3.c: 125: dataCtrl('-');
   467  0750  302D               	movlw	45
   468  0751  120A  118A  266B  120A  118A  	fcall	_dataCtrl
   469                           
   470                           ;LE2-3.c: 126: break;
   471  0756  2FA0               	goto	l710
   472  0757                     l700:	
   473                           ;LE2-3.c: 127: case 0x17:
   474                           
   475                           
   476                           ;LE2-3.c: 128: dataCtrl('*');
   477  0757  302A               	movlw	42
   478  0758  120A  118A  266B  120A  118A  	fcall	_dataCtrl
   479                           
   480                           ;LE2-3.c: 129: break;
   481  075D  2FA0               	goto	l710
   482  075E                     l702:	
   483                           ;LE2-3.c: 130: case 0x13:
   484                           
   485                           
   486                           ;LE2-3.c: 131: dataCtrl('/');
   487  075E  302F               	movlw	47
   488  075F  120A  118A  266B  120A  118A  	fcall	_dataCtrl
   489                           
   490                           ;LE2-3.c: 132: break;
   491  0764  2FA0               	goto	l710
   492  0765                     l704:	
   493                           ;LE2-3.c: 133: case 0x1E:
   494                           
   495                           
   496                           ;LE2-3.c: 134: dataCtrl('=');
   497  0765  303D               	movlw	61
   498  0766  120A  118A  266B  120A  118A  	fcall	_dataCtrl
   499                           
   500                           ;LE2-3.c: 138: }
   501                           
   502                           ;LE2-3.c: 137: break;
   503                           
   504                           ;LE2-3.c: 136: default:
   505                           
   506                           ;LE2-3.c: 135: break;
   507  076B  2FA0               	goto	l710
   508  076C                     l708:	
   509                           
   510                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   511                           ; Switch size 1, requested type "space"
   512                           ; Number of cases is 1, Range of values is 0 to 0
   513                           ; switch strategies available:
   514                           ; Name         Instructions Cycles
   515                           ; simple_byte            4     3 (average)
   516                           ; direct_byte           11     8 (fixed)
   517                           ; jumptable            260     6 (fixed)
   518                           ;	Chosen strategy is simple_byte
   519  076C  087B               	movf	readKey@bits+1,w
   520  076D  3A00               	xorlw	0	; case 0
   521  076E  1903               	skipnz
   522  076F  2F71               	goto	l770
   523  0770  2FA0               	goto	l710
   524  0771                     l770:	
   525                           
   526                           ; Switch size 1, requested type "space"
   527                           ; Number of cases is 15, Range of values is 16 to 31
   528                           ; switch strategies available:
   529                           ; Name         Instructions Cycles
   530                           ; simple_byte           46    24 (average)
   531                           ; direct_byte           59    11 (fixed)
   532                           ; jumptable            263     9 (fixed)
   533                           ;	Chosen strategy is simple_byte
   534  0771  087A               	movf	readKey@bits,w
   535  0772  3A10               	xorlw	16	; case 16
   536  0773  1903               	skipnz
   537  0774  2F34               	goto	l690
   538  0775  3A01               	xorlw	1	; case 17
   539  0776  1903               	skipnz
   540  0777  2F3B               	goto	l692
   541  0778  3A03               	xorlw	3	; case 18
   542  0779  1903               	skipnz
   543  077A  2F42               	goto	l694
   544  077B  3A01               	xorlw	1	; case 19
   545  077C  1903               	skipnz
   546  077D  2F5E               	goto	l702
   547  077E  3A07               	xorlw	7	; case 20
   548  077F  1903               	skipnz
   549  0780  2F1F               	goto	l684
   550  0781  3A01               	xorlw	1	; case 21
   551  0782  1903               	skipnz
   552  0783  2F26               	goto	l686
   553  0784  3A03               	xorlw	3	; case 22
   554  0785  1903               	skipnz
   555  0786  2F2D               	goto	l688
   556  0787  3A01               	xorlw	1	; case 23
   557  0788  1903               	skipnz
   558  0789  2F57               	goto	l700
   559  078A  3A0F               	xorlw	15	; case 24
   560  078B  1903               	skipnz
   561  078C  2F0A               	goto	l678
   562  078D  3A01               	xorlw	1	; case 25
   563  078E  1903               	skipnz
   564  078F  2F11               	goto	l680
   565  0790  3A03               	xorlw	3	; case 26
   566  0791  1903               	skipnz
   567  0792  2F18               	goto	l682
   568  0793  3A01               	xorlw	1	; case 27
   569  0794  1903               	skipnz
   570  0795  2F50               	goto	l698
   571  0796  3A06               	xorlw	6	; case 29
   572  0797  1903               	skipnz
   573  0798  2F03               	goto	l676
   574  0799  3A03               	xorlw	3	; case 30
   575  079A  1903               	skipnz
   576  079B  2F65               	goto	l704
   577  079C  3A01               	xorlw	1	; case 31
   578  079D  1903               	skipnz
   579  079E  2F49               	goto	l696
   580  079F  2FA0               	goto	l710
   581  07A0                     l710:	
   582                           
   583                           ;LE2-3.c: 139: *rowCountIN += 1;
   584  07A0  087C               	movf	readKey@rowCountIN,w
   585  07A1  0084               	movwf	4
   586  07A2  3001               	movlw	1
   587  07A3  1383               	bcf	3,7	;select IRP bank0
   588  07A4  0780               	addwf	0,f
   589  07A5  0A84               	incf	4,f
   590  07A6  1803               	skipnc
   591  07A7  0A80               	incf	0,f
   592                           
   593                           ;LE2-3.c: 140: if(*rowCountIN == 20) {
   594  07A8  087C               	movf	readKey@rowCountIN,w
   595  07A9  0084               	movwf	4
   596  07AA  0800               	movf	0,w
   597  07AB  00F8               	movwf	??_readKey
   598  07AC  0A84               	incf	4,f
   599  07AD  0800               	movf	0,w
   600  07AE  00F9               	movwf	??_readKey+1
   601  07AF  3014               	movlw	20
   602  07B0  0678               	xorwf	??_readKey,w
   603  07B1  0479               	iorwf	??_readKey+1,w
   604  07B2  1D03               	skipz
   605  07B3  2FB6               	goto	l716
   606                           
   607                           ;LE2-3.c: 141: instCtrl(0xC0);
   608  07B4  30C0               	movlw	192
   609  07B5  2FD3               	goto	L1
   610  07B6                     l716:	
   611                           ;LE2-3.c: 142: } else if(*rowCountIN == 40) {
   612                           
   613  07B6  087C               	movf	readKey@rowCountIN,w
   614  07B7  0084               	movwf	4
   615  07B8  1383               	bcf	3,7	;select IRP bank0
   616  07B9  0800               	movf	0,w
   617  07BA  00F8               	movwf	??_readKey
   618  07BB  0A84               	incf	4,f
   619  07BC  0800               	movf	0,w
   620  07BD  00F9               	movwf	??_readKey+1
   621  07BE  3028               	movlw	40
   622  07BF  0678               	xorwf	??_readKey,w
   623  07C0  0479               	iorwf	??_readKey+1,w
   624  07C1  1D03               	skipz
   625  07C2  2FC5               	goto	l720
   626                           
   627                           ;LE2-3.c: 143: instCtrl(0x94);
   628  07C3  3094               	movlw	148
   629  07C4  2FD3               	goto	L1
   630  07C5                     l720:	
   631                           ;LE2-3.c: 144: } else if(*rowCountIN == 60) {
   632                           
   633  07C5  087C               	movf	readKey@rowCountIN,w
   634  07C6  0084               	movwf	4
   635  07C7  1383               	bcf	3,7	;select IRP bank0
   636  07C8  0800               	movf	0,w
   637  07C9  00F8               	movwf	??_readKey
   638  07CA  0A84               	incf	4,f
   639  07CB  0800               	movf	0,w
   640  07CC  00F9               	movwf	??_readKey+1
   641  07CD  303C               	movlw	60
   642  07CE  0678               	xorwf	??_readKey,w
   643  07CF  0479               	iorwf	??_readKey+1,w
   644  07D0  1D03               	skipz
   645  07D1  2FDB               	goto	l724
   646                           
   647                           ;LE2-3.c: 145: instCtrl(0xD4);
   648  07D2  30D4               	movlw	212
   649  07D3                     L1:	
   650  07D3  00F5               	movwf	instCtrl@instruction_in
   651  07D4  3000               	movlw	0
   652  07D5  00F6               	movwf	instCtrl@instruction_in+1
   653  07D6  120A  118A  2643  120A  118A  	fcall	_instCtrl
   654  07DB                     l724:	
   655                           
   656                           ;LE2-3.c: 146: } if (*rowCountIN > 80) {
   657  07DB  087C               	movf	readKey@rowCountIN,w
   658  07DC  0084               	movwf	4
   659  07DD  1383               	bcf	3,7	;select IRP bank0
   660  07DE  0800               	movf	0,w
   661  07DF  00F8               	movwf	??_readKey
   662  07E0  0A84               	incf	4,f
   663  07E1  0800               	movf	0,w
   664  07E2  00F9               	movwf	??_readKey+1
   665  07E3  0879               	movf	??_readKey+1,w
   666  07E4  3A80               	xorlw	128
   667  07E5  00FF               	movwf	127
   668  07E6  3080               	movlw	128
   669  07E7  027F               	subwf	127,w
   670  07E8  1D03               	skipz
   671  07E9  2FEC               	goto	u115
   672  07EA  3051               	movlw	81
   673  07EB  0278               	subwf	??_readKey,w
   674  07EC                     u115:	
   675  07EC  1C03               	skipc
   676  07ED  0008               	return
   677                           
   678                           ;LE2-3.c: 147: instCtrl(0x01);
   679  07EE  3001               	movlw	1
   680  07EF  00F5               	movwf	instCtrl@instruction_in
   681  07F0  3000               	movlw	0
   682  07F1  00F6               	movwf	instCtrl@instruction_in+1
   683  07F2  120A  118A  2643   	fcall	_instCtrl
   684                           
   685                           ;LE2-3.c: 148: *rowCountIN = 0;
   686  07F5  087C               	movf	readKey@rowCountIN,w
   687  07F6  0084               	movwf	4
   688  07F7  1383               	bcf	3,7	;select IRP bank0
   689  07F8  0180               	clrf	0
   690  07F9  0A84               	incf	4,f
   691  07FA  0180               	clrf	0
   692  07FB  0008               	return
   693  07FC                     __end_of_readKey:	
   694                           
   695                           	psect	text2
   696  066B                     __ptext2:	
   697 ;; *************** function _dataCtrl *****************
   698 ;; Defined at:
   699 ;;		line 61 in file "C:\Users\admin\Documents\School\CompEng Subs\3201\LE2\LE2-3\LE2-3.c"
   700 ;; Parameters:    Size  Location     Type
   701 ;;  data_inst_in    1    wreg     unsigned char 
   702 ;; Auto vars:     Size  Location     Type
   703 ;;  data_inst_in    1    5[COMMON] unsigned char 
   704 ;; Return value:  Size  Location     Type
   705 ;;		None               void
   706 ;; Registers used:
   707 ;;		wreg, status,2, status,0, pclath, cstack
   708 ;; Tracked objects:
   709 ;;		On entry : 0/0
   710 ;;		On exit  : 0/0
   711 ;;		Unchanged: 0/0
   712 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   713 ;;      Params:         0       0       0       0       0
   714 ;;      Locals:         1       0       0       0       0
   715 ;;      Temps:          0       0       0       0       0
   716 ;;      Totals:         1       0       0       0       0
   717 ;;Total ram usage:        1 bytes
   718 ;; Hardware stack levels used:    1
   719 ;; Hardware stack levels required when called:    1
   720 ;; This function calls:
   721 ;;		_delay
   722 ;; This function is called by:
   723 ;;		_readKey
   724 ;; This function uses a non-reentrant model
   725 ;;
   726                           
   727                           
   728                           ;psect for function _dataCtrl
   729  066B                     _dataCtrl:	
   730                           
   731                           ;incstack = 0
   732                           ; Regs used in _dataCtrl: [wreg+status,2+status,0+pclath+cstack]
   733                           ;dataCtrl@data_inst_in stored from wreg
   734  066B  00F5               	movwf	dataCtrl@data_inst_in
   735                           
   736                           ;LE2-3.c: 63: PORTB = data_inst_in;
   737  066C  0875               	movf	dataCtrl@data_inst_in,w
   738  066D  1283               	bcf	3,5	;RP0=0, select bank0
   739  066E  1303               	bcf	3,6	;RP1=0, select bank0
   740  066F  0086               	movwf	6	;volatile
   741                           
   742                           ;LE2-3.c: 64: delay(2000);
   743  0670  30D0               	movlw	208
   744  0671  00F0               	movwf	delay@timeIn
   745  0672  3007               	movlw	7
   746  0673  00F1               	movwf	delay@timeIn+1
   747  0674  120A  118A  262E  120A  118A  	fcall	_delay
   748                           
   749                           ;LE2-3.c: 66: PORTC = 0b00000110;
   750  0679  3006               	movlw	6
   751  067A  1283               	bcf	3,5	;RP0=0, select bank0
   752  067B  1303               	bcf	3,6	;RP1=0, select bank0
   753  067C  0087               	movwf	7	;volatile
   754                           
   755                           ;LE2-3.c: 67: delay(2000);
   756  067D  30D0               	movlw	208
   757  067E  00F0               	movwf	delay@timeIn
   758  067F  3007               	movlw	7
   759  0680  00F1               	movwf	delay@timeIn+1
   760  0681  120A  118A  262E  120A  118A  	fcall	_delay
   761                           
   762                           ;LE2-3.c: 69: PORTC = 0b00000010;
   763  0686  3002               	movlw	2
   764  0687  1283               	bcf	3,5	;RP0=0, select bank0
   765  0688  1303               	bcf	3,6	;RP1=0, select bank0
   766  0689  0087               	movwf	7	;volatile
   767                           
   768                           ;LE2-3.c: 70: delay(2000);
   769  068A  30D0               	movlw	208
   770  068B  00F0               	movwf	delay@timeIn
   771  068C  3007               	movlw	7
   772  068D  00F1               	movwf	delay@timeIn+1
   773  068E  120A  118A  262E   	fcall	_delay
   774                           
   775                           ;LE2-3.c: 72: PORTC = 0x00;
   776  0691  1283               	bcf	3,5	;RP0=0, select bank0
   777  0692  1303               	bcf	3,6	;RP1=0, select bank0
   778  0693  0187               	clrf	7	;volatile
   779  0694  0008               	return
   780  0695                     __end_of_dataCtrl:	
   781                           
   782                           	psect	text3
   783  06C3                     __ptext3:	
   784 ;; *************** function _initLCD *****************
   785 ;; Defined at:
   786 ;;		line 75 in file "C:\Users\admin\Documents\School\CompEng Subs\3201\LE2\LE2-3\LE2-3.c"
   787 ;; Parameters:    Size  Location     Type
   788 ;;		None
   789 ;; Auto vars:     Size  Location     Type
   790 ;;		None
   791 ;; Return value:  Size  Location     Type
   792 ;;		None               void
   793 ;; Registers used:
   794 ;;		wreg, status,2, status,0, pclath, cstack
   795 ;; Tracked objects:
   796 ;;		On entry : 0/0
   797 ;;		On exit  : 0/0
   798 ;;		Unchanged: 0/0
   799 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   800 ;;      Params:         0       0       0       0       0
   801 ;;      Locals:         0       0       0       0       0
   802 ;;      Temps:          0       0       0       0       0
   803 ;;      Totals:         0       0       0       0       0
   804 ;;Total ram usage:        0 bytes
   805 ;; Hardware stack levels used:    1
   806 ;; Hardware stack levels required when called:    2
   807 ;; This function calls:
   808 ;;		_delay
   809 ;;		_instCtrl
   810 ;; This function is called by:
   811 ;;		_main
   812 ;; This function uses a non-reentrant model
   813 ;;
   814                           
   815                           
   816                           ;psect for function _initLCD
   817  06C3                     _initLCD:	
   818                           
   819                           ;LE2-3.c: 77: delay(2000);
   820                           
   821                           ;incstack = 0
   822                           ; Regs used in _initLCD: [wreg+status,2+status,0+pclath+cstack]
   823  06C3  30D0               	movlw	208
   824  06C4  00F0               	movwf	delay@timeIn
   825  06C5  3007               	movlw	7
   826  06C6  00F1               	movwf	delay@timeIn+1
   827  06C7  120A  118A  262E  120A  118A  	fcall	_delay
   828                           
   829                           ;LE2-3.c: 78: instCtrl(0x38);
   830  06CC  3038               	movlw	56
   831  06CD  00F5               	movwf	instCtrl@instruction_in
   832  06CE  3000               	movlw	0
   833  06CF  00F6               	movwf	instCtrl@instruction_in+1
   834  06D0  120A  118A  2643  120A  118A  	fcall	_instCtrl
   835                           
   836                           ;LE2-3.c: 79: instCtrl(0x08);
   837  06D5  3008               	movlw	8
   838  06D6  00F5               	movwf	instCtrl@instruction_in
   839  06D7  3000               	movlw	0
   840  06D8  00F6               	movwf	instCtrl@instruction_in+1
   841  06D9  120A  118A  2643  120A  118A  	fcall	_instCtrl
   842                           
   843                           ;LE2-3.c: 80: instCtrl(0x01);
   844  06DE  3001               	movlw	1
   845  06DF  00F5               	movwf	instCtrl@instruction_in
   846  06E0  3000               	movlw	0
   847  06E1  00F6               	movwf	instCtrl@instruction_in+1
   848  06E2  120A  118A  2643  120A  118A  	fcall	_instCtrl
   849                           
   850                           ;LE2-3.c: 81: instCtrl(0x06);
   851  06E7  3006               	movlw	6
   852  06E8  00F5               	movwf	instCtrl@instruction_in
   853  06E9  3000               	movlw	0
   854  06EA  00F6               	movwf	instCtrl@instruction_in+1
   855  06EB  120A  118A  2643  120A  118A  	fcall	_instCtrl
   856                           
   857                           ;LE2-3.c: 82: instCtrl(0x0C);
   858  06F0  300C               	movlw	12
   859  06F1  00F5               	movwf	instCtrl@instruction_in
   860  06F2  3000               	movlw	0
   861  06F3  00F6               	movwf	instCtrl@instruction_in+1
   862  06F4  120A  118A  2643   	fcall	_instCtrl
   863  06F7  0008               	return
   864  06F8                     __end_of_initLCD:	
   865                           
   866                           	psect	text4
   867  0643                     __ptext4:	
   868 ;; *************** function _instCtrl *****************
   869 ;; Defined at:
   870 ;;		line 47 in file "C:\Users\admin\Documents\School\CompEng Subs\3201\LE2\LE2-3\LE2-3.c"
   871 ;; Parameters:    Size  Location     Type
   872 ;;  instruction_    2    5[COMMON] int 
   873 ;; Auto vars:     Size  Location     Type
   874 ;;		None
   875 ;; Return value:  Size  Location     Type
   876 ;;		None               void
   877 ;; Registers used:
   878 ;;		wreg, status,2, status,0, pclath, cstack
   879 ;; Tracked objects:
   880 ;;		On entry : 0/0
   881 ;;		On exit  : 0/0
   882 ;;		Unchanged: 0/0
   883 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   884 ;;      Params:         2       0       0       0       0
   885 ;;      Locals:         0       0       0       0       0
   886 ;;      Temps:          0       0       0       0       0
   887 ;;      Totals:         2       0       0       0       0
   888 ;;Total ram usage:        2 bytes
   889 ;; Hardware stack levels used:    1
   890 ;; Hardware stack levels required when called:    1
   891 ;; This function calls:
   892 ;;		_delay
   893 ;; This function is called by:
   894 ;;		_initLCD
   895 ;;		_readKey
   896 ;; This function uses a non-reentrant model
   897 ;;
   898                           
   899                           
   900                           ;psect for function _instCtrl
   901  0643                     _instCtrl:	
   902                           
   903                           ;LE2-3.c: 49: PORTB = instruction_in;
   904                           
   905                           ;incstack = 0
   906                           ; Regs used in _instCtrl: [wreg+status,2+status,0+pclath+cstack]
   907  0643  0875               	movf	instCtrl@instruction_in,w
   908  0644  1283               	bcf	3,5	;RP0=0, select bank0
   909  0645  1303               	bcf	3,6	;RP1=0, select bank0
   910  0646  0086               	movwf	6	;volatile
   911                           
   912                           ;LE2-3.c: 50: delay(2000);
   913  0647  30D0               	movlw	208
   914  0648  00F0               	movwf	delay@timeIn
   915  0649  3007               	movlw	7
   916  064A  00F1               	movwf	delay@timeIn+1
   917  064B  120A  118A  262E  120A  118A  	fcall	_delay
   918                           
   919                           ;LE2-3.c: 52: PORTC = 0b00000100;
   920  0650  3004               	movlw	4
   921  0651  1283               	bcf	3,5	;RP0=0, select bank0
   922  0652  1303               	bcf	3,6	;RP1=0, select bank0
   923  0653  0087               	movwf	7	;volatile
   924                           
   925                           ;LE2-3.c: 53: delay(2000);
   926  0654  30D0               	movlw	208
   927  0655  00F0               	movwf	delay@timeIn
   928  0656  3007               	movlw	7
   929  0657  00F1               	movwf	delay@timeIn+1
   930  0658  120A  118A  262E  120A  118A  	fcall	_delay
   931                           
   932                           ;LE2-3.c: 55: PORTC = 0x00;
   933  065D  1283               	bcf	3,5	;RP0=0, select bank0
   934  065E  1303               	bcf	3,6	;RP1=0, select bank0
   935  065F  0187               	clrf	7	;volatile
   936                           
   937                           ;LE2-3.c: 56: delay(2000);
   938  0660  30D0               	movlw	208
   939  0661  00F0               	movwf	delay@timeIn
   940  0662  3007               	movlw	7
   941  0663  00F1               	movwf	delay@timeIn+1
   942  0664  120A  118A  262E   	fcall	_delay
   943                           
   944                           ;LE2-3.c: 58: PORTC = 0x00;
   945  0667  1283               	bcf	3,5	;RP0=0, select bank0
   946  0668  1303               	bcf	3,6	;RP1=0, select bank0
   947  0669  0187               	clrf	7	;volatile
   948  066A  0008               	return
   949  066B                     __end_of_instCtrl:	
   950                           
   951                           	psect	text5
   952  062E                     __ptext5:	
   953 ;; *************** function _delay *****************
   954 ;; Defined at:
   955 ;;		line 43 in file "C:\Users\admin\Documents\School\CompEng Subs\3201\LE2\LE2-3\LE2-3.c"
   956 ;; Parameters:    Size  Location     Type
   957 ;;  timeIn          2    0[COMMON] int 
   958 ;; Auto vars:     Size  Location     Type
   959 ;;  j               2    3[COMMON] int 
   960 ;; Return value:  Size  Location     Type
   961 ;;		None               void
   962 ;; Registers used:
   963 ;;		wreg, status,2
   964 ;; Tracked objects:
   965 ;;		On entry : 0/0
   966 ;;		On exit  : 0/0
   967 ;;		Unchanged: 0/0
   968 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   969 ;;      Params:         2       0       0       0       0
   970 ;;      Locals:         2       0       0       0       0
   971 ;;      Temps:          1       0       0       0       0
   972 ;;      Totals:         5       0       0       0       0
   973 ;;Total ram usage:        5 bytes
   974 ;; Hardware stack levels used:    1
   975 ;; This function calls:
   976 ;;		Nothing
   977 ;; This function is called by:
   978 ;;		_instCtrl
   979 ;;		_dataCtrl
   980 ;;		_initLCD
   981 ;; This function uses a non-reentrant model
   982 ;;
   983                           
   984                           
   985                           ;psect for function _delay
   986  062E                     _delay:	
   987                           
   988                           ;LE2-3.c: 44: for(int j = 0; j < timeIn; j++);
   989                           
   990                           ;incstack = 0
   991                           ; Regs used in _delay: [wreg+status,2]
   992  062E  01F3               	clrf	delay@j
   993  062F  01F4               	clrf	delay@j+1
   994  0630                     l19:	
   995  0630  0874               	movf	delay@j+1,w
   996  0631  3A80               	xorlw	128
   997  0632  00F2               	movwf	??_delay
   998  0633  0871               	movf	delay@timeIn+1,w
   999  0634  3A80               	xorlw	128
  1000  0635  0272               	subwf	??_delay,w
  1001  0636  1D03               	skipz
  1002  0637  2E3A               	goto	u75
  1003  0638  0870               	movf	delay@timeIn,w
  1004  0639  0273               	subwf	delay@j,w
  1005  063A                     u75:	
  1006  063A  1803               	btfsc	3,0
  1007  063B  0008               	return
  1008  063C  3001               	movlw	1
  1009  063D  07F3               	addwf	delay@j,f
  1010  063E  1803               	skipnc
  1011  063F  0AF4               	incf	delay@j+1,f
  1012  0640  3000               	movlw	0
  1013  0641  07F4               	addwf	delay@j+1,f
  1014  0642  2E30               	goto	l19
  1015  0643                     __end_of_delay:	
  1016  007E                     btemp	set	126	;btemp
  1017  007E                     wtemp	set	126
  1018  007E                     wtemp0	set	126
  1019  0080                     wtemp1	set	128
  1020  0082                     wtemp2	set	130
  1021  0084                     wtemp3	set	132
  1022  0086                     wtemp4	set	134
  1023  0088                     wtemp5	set	136
  1024  007F                     wtemp6	set	127
  1025  007E                     ttemp	set	126
  1026  007E                     ttemp0	set	126
  1027  0081                     ttemp1	set	129
  1028  0084                     ttemp2	set	132
  1029  0087                     ttemp3	set	135
  1030  007F                     ttemp4	set	127
  1031  007E                     ltemp	set	126
  1032  007E                     ltemp0	set	126
  1033  0082                     ltemp1	set	130
  1034  0086                     ltemp2	set	134
  1035  0080                     ltemp3	set	128


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80      4       4
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    readKey@currentRow	PTR int  size(1) Largest target is 2
		 -> main@currentRow(BANK0[2]), 

    readKey@rowCountIN	PTR int  size(1) Largest target is 2
		 -> main@rowCountIN(BANK0[2]), 


Critical Paths under _main in COMMON

    _main->_readKey
    _readKey->_instCtrl
    _dataCtrl->_delay
    _initLCD->_instCtrl
    _instCtrl->_delay

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0    2977
                                             13 COMMON     1     1      0
                                              0 BANK0      4     4      0
                            _initLCD
                            _readKey
 ---------------------------------------------------------------------------------
 (1) _readKey                                              6     5      1    1590
                                              7 COMMON     6     5      1
                           _dataCtrl
                           _instCtrl
 ---------------------------------------------------------------------------------
 (2) _dataCtrl                                             1     1      0     439
                                              5 COMMON     1     1      0
                              _delay
 ---------------------------------------------------------------------------------
 (1) _initLCD                                              0     0      0    1333
                              _delay
                           _instCtrl
 ---------------------------------------------------------------------------------
 (2) _instCtrl                                             2     0      2     916
                                              5 COMMON     2     0      2
                              _delay
 ---------------------------------------------------------------------------------
 (3) _delay                                                5     3      2     417
                                              0 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _initLCD
     _delay
     _instCtrl
       _delay
   _readKey
     _dataCtrl
       _delay
     _instCtrl
       _delay

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      4       4       5        5.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V1.33 build 59893 
Symbol Table                                                                                   Wed Feb 07 17:09:17 2024

            __CFG_CP$OFF 0000                       l19 0630                       u75 063A  
                    l700 0757                      l702 075E                      l710 07A0  
                    l720 07C5                      l704 0765                      l724 07DB  
                    l716 07B6                      l708 076C                      l680 0711  
                    l770 0771                      l690 0734                      l682 0718  
                    l746 06B4                      l692 073B                      l684 071F  
                    l676 0703                      l694 0742                      l686 0726  
                    l678 070A                      l696 0749                      l688 072D  
                    l698 0750                      _RD4 0044                      u115 07EC  
           __CFG_CPD$OFF 0000                      fsr0 0004                      indf 0000  
           __CFG_FOSC$XT 0000     dataCtrl@data_inst_in 0075        readKey@currentRow 0077  
           __CFG_LVP$OFF 0000             __CFG_WRT$OFF 0000                     _main 0695  
                   btemp 007E            __CFG_BOREN$ON 0000                     ltemp 007E  
                   start 0000                     ttemp 007E                     wtemp 007E  
                  ?_main 0070            __CFG_WDTE$OFF 0000                    _PORTB 0006  
                  _PORTC 0007                    _PORTD 0008                    _TRISB 0086  
                  _TRISC 0087                    _TRISD 0088            __CFG_PWRTE$ON 0000  
        __end_of_initLCD 06F8                    _delay 062E        readKey@rowCountIN 007C  
        __end_of_readKey 07FC                    ltemp0 007E                    ltemp1 0082  
                  ltemp2 0086                    ltemp3 0080                    ttemp0 007E  
                  ttemp1 0081                    ttemp2 0084                    ttemp3 0087  
                  ttemp4 007F                    status 0003                    wtemp0 007E  
                  wtemp1 0080                    wtemp2 0082                    wtemp3 0084  
                  wtemp4 0086                    wtemp5 0088                    wtemp6 007F  
        __initialization 07FC             __end_of_main 06C3                   ??_main 007D  
                 ?_delay 0070              readKey@bits 007A         __end_of_dataCtrl 0695  
                 delay@j 0073         __end_of_instCtrl 066B                ??_initLCD 0077  
              ??_readKey 0078  __end_of__initialization 07FC           __pcstackCOMMON 0070  
          __end_of_delay 0643                  ??_delay 0072               __pmaintext 0695  
              ?_dataCtrl 0070           main@currentRow 0020                ?_instCtrl 0075  
                __ptext0 0000                  __ptext1 06F8                  __ptext2 066B  
                __ptext3 06C3                  __ptext4 0643                  __ptext5 062E  
                _initLCD 06C3                  _readKey 06F8               ??_dataCtrl 0075  
   end_of_initialization 07FC           main@rowCountIN 0022               ??_instCtrl 0077  
    start_initialization 07FC                ___latbits 0002            __pcstackBANK0 0020  
      __size_of_dataCtrl 002A        __size_of_instCtrl 0028                 ?_initLCD 0070  
               ?_readKey 0077           __size_of_delay 0015                 _dataCtrl 066B  
       __size_of_initLCD 0035         __size_of_readKey 0104            __size_of_main 002E  
               _instCtrl 0643              delay@timeIn 0070   instCtrl@instruction_in 0075  
             _OPTION_REG 0081  

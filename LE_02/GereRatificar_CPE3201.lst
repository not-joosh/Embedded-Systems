

Microchip Technology PIC LITE Macro Assembler V1.33 build 59893 
                                                                                               Wed Feb 07 21:07:48 2024

Microchip Technology Omniscient Code Generator (Lite mode) build 59893
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	strings,global,class=STRING,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2
    12                           	psect	text4,local,class=CODE,merge=1,delta=2
    13                           	psect	text5,local,class=CODE,merge=1,delta=2
    14                           	psect	text6,local,class=CODE,merge=1,delta=2
    15                           	psect	text7,local,class=CODE,merge=1,delta=2
    16                           	psect	text8,local,class=CODE,merge=1,delta=2
    17                           	dabs	1,0x7E,2
    18  0000                     	;# 
    19  0001                     	;# 
    20  0002                     	;# 
    21  0003                     	;# 
    22  0004                     	;# 
    23  0005                     	;# 
    24  0006                     	;# 
    25  0007                     	;# 
    26  0008                     	;# 
    27  0009                     	;# 
    28  000A                     	;# 
    29  000B                     	;# 
    30  000C                     	;# 
    31  000D                     	;# 
    32  000E                     	;# 
    33  000E                     	;# 
    34  000F                     	;# 
    35  0010                     	;# 
    36  0011                     	;# 
    37  0012                     	;# 
    38  0013                     	;# 
    39  0014                     	;# 
    40  0015                     	;# 
    41  0015                     	;# 
    42  0016                     	;# 
    43  0017                     	;# 
    44  0018                     	;# 
    45  0019                     	;# 
    46  001A                     	;# 
    47  001B                     	;# 
    48  001B                     	;# 
    49  001C                     	;# 
    50  001D                     	;# 
    51  001E                     	;# 
    52  001F                     	;# 
    53  0081                     	;# 
    54  0085                     	;# 
    55  0086                     	;# 
    56  0087                     	;# 
    57  0088                     	;# 
    58  0089                     	;# 
    59  008C                     	;# 
    60  008D                     	;# 
    61  008E                     	;# 
    62  0091                     	;# 
    63  0092                     	;# 
    64  0093                     	;# 
    65  0094                     	;# 
    66  0098                     	;# 
    67  0099                     	;# 
    68  009C                     	;# 
    69  009D                     	;# 
    70  009E                     	;# 
    71  009F                     	;# 
    72  010C                     	;# 
    73  010D                     	;# 
    74  010E                     	;# 
    75  010F                     	;# 
    76  018C                     	;# 
    77  018D                     	;# 
    78                           
    79                           	psect	strings
    80  0003                     __pstrings:	
    81  0003                     stringtab:	
    82  0003                     __stringtab:	
    83  0003                     stringcode:	
    84                           ;	String table - string pointers are 1 byte each
    85                           
    86  0003                     stringdir:	
    87  0003  3000               	movlw	high stringdir
    88  0004  008A               	movwf	10
    89  0005  0804               	movf	4,w
    90  0006  0A84               	incf	4,f
    91  0007  0782               	addwf	2,f
    92  0008                     __stringbase:	
    93  0008  3400               	retlw	0
    94  0009                     __end_of__stringtab:	
    95  0009                     _keyCodes:	
    96  0009  341D               	retlw	29
    97  000A  3400               	retlw	0
    98  000B  3418               	retlw	24
    99  000C  3400               	retlw	0
   100  000D  3419               	retlw	25
   101  000E  3400               	retlw	0
   102  000F  341A               	retlw	26
   103  0010  3400               	retlw	0
   104  0011  3414               	retlw	20
   105  0012  3400               	retlw	0
   106  0013  3415               	retlw	21
   107  0014  3400               	retlw	0
   108  0015  3416               	retlw	22
   109  0016  3400               	retlw	0
   110  0017  3410               	retlw	16
   111  0018  3400               	retlw	0
   112  0019  3411               	retlw	17
   113  001A  3400               	retlw	0
   114  001B  3412               	retlw	18
   115  001C  3400               	retlw	0
   116  001D  341F               	retlw	31
   117  001E  3400               	retlw	0
   118  001F  341B               	retlw	27
   119  0020  3400               	retlw	0
   120  0021  3417               	retlw	23
   121  0022  3400               	retlw	0
   122  0023  3413               	retlw	19
   123  0024  3400               	retlw	0
   124  0025  341E               	retlw	30
   125  0026  3400               	retlw	0
   126  0027                     __end_of_keyCodes:	
   127  0027                     _keyMap:	
   128  0027  3430               	retlw	48
   129  0028  3431               	retlw	49
   130  0029  3432               	retlw	50
   131  002A  3433               	retlw	51
   132  002B  3434               	retlw	52
   133  002C  3435               	retlw	53
   134  002D  3436               	retlw	54
   135  002E  3437               	retlw	55
   136  002F  3438               	retlw	56
   137  0030  3439               	retlw	57
   138  0031  342B               	retlw	43
   139  0032  342D               	retlw	45
   140  0033  342A               	retlw	42
   141  0034  342F               	retlw	47
   142  0035  343D               	retlw	61
   143  0036                     __end_of_keyMap:	
   144  0006                     _PORTB	set	6
   145  0007                     _PORTC	set	7
   146  0008                     _PORTD	set	8
   147  0044                     _RD4	set	68
   148  0081                     _OPTION_REG	set	129
   149  0086                     _TRISB	set	134
   150  0087                     _TRISC	set	135
   151  0088                     _TRISD	set	136
   152                           
   153                           	psect	cinit
   154  07FC                     start_initialization:	
   155                           ; #config settings
   156                           
   157  07FC                     __initialization:	
   158  07FC                     end_of_initialization:	
   159                           ;End of C runtime variable initialization code
   160                           
   161  07FC                     __end_of__initialization:	
   162  07FC  0183               	clrf	3
   163  07FD  120A  118A  2DAD   	ljmp	_main	;jump to C main() function
   164                           
   165                           	psect	cstackCOMMON
   166  0070                     __pcstackCOMMON:	
   167  0070                     ?_delay:	
   168  0070                     ?_dataCtrl:	
   169                           ; 0 bytes @ 0x0
   170                           
   171  0070                     ?_initLCD:	
   172                           ; 0 bytes @ 0x0
   173                           
   174  0070                     ?_readKey:	
   175                           ; 0 bytes @ 0x0
   176                           
   177  0070                     ?_main:	
   178                           ; 0 bytes @ 0x0
   179                           
   180  0070                     ?___awdiv:	
   181                           ; 0 bytes @ 0x0
   182                           
   183  0070                     ?___awmod:	
   184                           ; 2 bytes @ 0x0
   185                           
   186  0070                     delay@timeIn:	
   187                           ; 2 bytes @ 0x0
   188                           
   189  0070                     ___awdiv@divisor:	
   190                           ; 2 bytes @ 0x0
   191                           
   192  0070                     ___awmod@divisor:	
   193                           ; 2 bytes @ 0x0
   194                           
   195                           
   196                           ; 2 bytes @ 0x0
   197  0070                     	ds	2
   198  0072                     ??_delay:	
   199  0072                     ___awdiv@dividend:	
   200                           ; 0 bytes @ 0x2
   201                           
   202  0072                     ___awmod@dividend:	
   203                           ; 2 bytes @ 0x2
   204                           
   205                           
   206                           ; 2 bytes @ 0x2
   207  0072                     	ds	1
   208  0073                     delay@j:	
   209                           
   210                           ; 2 bytes @ 0x3
   211  0073                     	ds	1
   212  0074                     ??___awdiv:	
   213  0074                     ??___awmod:	
   214                           ; 0 bytes @ 0x4
   215                           
   216                           
   217                           ; 0 bytes @ 0x4
   218  0074                     	ds	1
   219  0075                     ??_dataCtrl:	
   220  0075                     dataCtrl@data_inst_in:	
   221                           ; 0 bytes @ 0x5
   222                           
   223  0075                     ___awdiv@counter:	
   224                           ; 1 bytes @ 0x5
   225                           
   226  0075                     ___awmod@counter:	
   227                           ; 1 bytes @ 0x5
   228                           
   229                           
   230                           ; 1 bytes @ 0x5
   231  0075                     	ds	1
   232  0076                     ___awdiv@sign:	
   233  0076                     ___awmod@sign:	
   234                           ; 1 bytes @ 0x6
   235                           
   236                           
   237                           ; 1 bytes @ 0x6
   238  0076                     	ds	1
   239  0077                     ___awdiv@quotient:	
   240                           
   241                           ; 2 bytes @ 0x7
   242  0077                     	ds	2
   243  0079                     ?___wmul:	
   244  0079                     ___wmul@multiplier:	
   245                           ; 2 bytes @ 0x9
   246                           
   247                           
   248                           ; 2 bytes @ 0x9
   249  0079                     	ds	2
   250  007B                     ___wmul@multiplicand:	
   251                           
   252                           ; 2 bytes @ 0xB
   253  007B                     	ds	2
   254  007D                     ??_instCtrl:	
   255  007D                     ??_initLCD:	
   256                           ; 0 bytes @ 0xD
   257                           
   258  007D                     ??_main:	
   259                           ; 0 bytes @ 0xD
   260                           
   261  007D                     ??___wmul:	
   262                           ; 0 bytes @ 0xD
   263                           
   264                           
   265                           	psect	cstackBANK0
   266  0020                     __pcstackBANK0:	
   267                           ; 0 bytes @ 0xD
   268                           
   269  0020                     ___wmul@product:	
   270                           
   271                           ; 2 bytes @ 0x0
   272  0020                     	ds	2
   273  0022                     ?_instCtrl:	
   274  0022                     instCtrl@instruction_in:	
   275                           ; 0 bytes @ 0x2
   276                           
   277                           
   278                           ; 2 bytes @ 0x2
   279  0022                     	ds	2
   280  0024                     ??_readKey:	
   281                           
   282                           ; 0 bytes @ 0x4
   283  0024                     	ds	3
   284  0027                     readKey@bits:	
   285                           
   286                           ; 2 bytes @ 0x7
   287  0027                     	ds	2
   288  0029                     readKey@i:	
   289                           
   290                           ; 2 bytes @ 0x9
   291  0029                     	ds	2
   292  002B                     readKey@rowCount:	
   293                           
   294                           ; 1 bytes @ 0xB
   295  002B                     	ds	1
   296  002C                     main@rowCount:	
   297                           
   298                           ; 2 bytes @ 0xC
   299  002C                     	ds	2
   300                           
   301                           	psect	maintext
   302  05AD                     __pmaintext:	
   303 ;;
   304 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   305 ;;
   306 ;; *************** function _main *****************
   307 ;; Defined at:
   308 ;;		line 69 in file "C:\Users\notjo\OneDrive\Desktop\USC\USC-Year3-Sem2\3201-EmbeddedSystems\Labs\LE_02\LE2.c"
   309 ;; Parameters:    Size  Location     Type
   310 ;;		None
   311 ;; Auto vars:     Size  Location     Type
   312 ;;  rowCount        2   12[BANK0 ] int 
   313 ;; Return value:  Size  Location     Type
   314 ;;		None               void
   315 ;; Registers used:
   316 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   317 ;; Tracked objects:
   318 ;;		On entry : 17F/0
   319 ;;		On exit  : 0/0
   320 ;;		Unchanged: 0/0
   321 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   322 ;;      Params:         0       0       0       0       0
   323 ;;      Locals:         0       2       0       0       0
   324 ;;      Temps:          0       0       0       0       0
   325 ;;      Totals:         0       2       0       0       0
   326 ;;Total ram usage:        2 bytes
   327 ;; Hardware stack levels required when called:    3
   328 ;; This function calls:
   329 ;;		_initLCD
   330 ;;		_readKey
   331 ;; This function is called by:
   332 ;;		Startup code after reset
   333 ;; This function uses a non-reentrant model
   334 ;;
   335                           
   336                           
   337                           ;psect for function _main
   338  05AD                     _main:	
   339                           
   340                           ;LE2.c: 71: int rowCount = 0;
   341                           
   342                           ;incstack = 0
   343                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   344  05AD  1283               	bcf	3,5	;RP0=0, select bank0
   345  05AE  1303               	bcf	3,6	;RP1=0, select bank0
   346  05AF  01AC               	clrf	main@rowCount
   347  05B0  01AD               	clrf	main@rowCount+1
   348                           
   349                           ;LE2.c: 72: OPTION_REG = 0xC0;
   350  05B1  30C0               	movlw	192
   351  05B2  1683               	bsf	3,5	;RP0=1, select bank1
   352  05B3  1303               	bcf	3,6	;RP1=0, select bank1
   353  05B4  0081               	movwf	1	;volatile
   354                           
   355                           ;LE2.c: 73: TRISB = 0x00;
   356  05B5  0186               	clrf	6	;volatile
   357                           
   358                           ;LE2.c: 74: TRISC = 0x00;
   359  05B6  0187               	clrf	7	;volatile
   360                           
   361                           ;LE2.c: 75: PORTB = 0x00;
   362  05B7  1283               	bcf	3,5	;RP0=0, select bank0
   363  05B8  1303               	bcf	3,6	;RP1=0, select bank0
   364  05B9  0186               	clrf	6	;volatile
   365                           
   366                           ;LE2.c: 76: PORTC = 0x00;
   367  05BA  0187               	clrf	7	;volatile
   368                           
   369                           ;LE2.c: 78: TRISD = 0xFF;
   370  05BB  30FF               	movlw	255
   371  05BC  1683               	bsf	3,5	;RP0=1, select bank1
   372  05BD  1303               	bcf	3,6	;RP1=0, select bank1
   373  05BE  0088               	movwf	8	;volatile
   374                           
   375                           ;LE2.c: 79: PORTD = 0xFF;
   376  05BF  30FF               	movlw	255
   377  05C0  1283               	bcf	3,5	;RP0=0, select bank0
   378  05C1  1303               	bcf	3,6	;RP1=0, select bank0
   379  05C2  0088               	movwf	8	;volatile
   380                           
   381                           ;LE2.c: 80: initLCD();
   382  05C3  120A  118A  264E  120A  118A  	fcall	_initLCD
   383  05C8                     l835:	
   384                           ;LE2.c: 81: while (1)
   385                           
   386                           
   387                           ;LE2.c: 82: {
   388                           ;LE2.c: 83: if (RD4 == 1) readKey(&rowCount);
   389  05C8  1283               	bcf	3,5	;RP0=0, select bank0
   390  05C9  1303               	bcf	3,6	;RP1=0, select bank0
   391  05CA  1E08               	btfss	8,4	;volatile
   392  05CB  2DC8               	goto	l835
   393  05CC  302C               	movlw	main@rowCount& (0+255)
   394  05CD  120A  118A  2735  120A  118A  	fcall	_readKey
   395  05D2  2DC8               	goto	l835
   396  05D3                     __end_of_main:	
   397                           
   398                           	psect	text1
   399  0735                     __ptext1:	
   400 ;; *************** function _readKey *****************
   401 ;; Defined at:
   402 ;;		line 52 in file "C:\Users\notjo\OneDrive\Desktop\USC\USC-Year3-Sem2\3201-EmbeddedSystems\Labs\LE_02\LE2.c"
   403 ;; Parameters:    Size  Location     Type
   404 ;;  rowCount        1    wreg     PTR int 
   405 ;;		 -> main@rowCount(2), 
   406 ;; Auto vars:     Size  Location     Type
   407 ;;  rowCount        1   11[BANK0 ] PTR int 
   408 ;;		 -> main@rowCount(2), 
   409 ;;  i               2    9[BANK0 ] int 
   410 ;;  bits            2    7[BANK0 ] int 
   411 ;; Return value:  Size  Location     Type
   412 ;;		None               void
   413 ;; Registers used:
   414 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   415 ;; Tracked objects:
   416 ;;		On entry : 0/0
   417 ;;		On exit  : 0/0
   418 ;;		Unchanged: 0/0
   419 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   420 ;;      Params:         0       0       0       0       0
   421 ;;      Locals:         0       5       0       0       0
   422 ;;      Temps:          0       3       0       0       0
   423 ;;      Totals:         0       8       0       0       0
   424 ;;Total ram usage:        8 bytes
   425 ;; Hardware stack levels used:    1
   426 ;; Hardware stack levels required when called:    2
   427 ;; This function calls:
   428 ;;		___awdiv
   429 ;;		___awmod
   430 ;;		___wmul
   431 ;;		_dataCtrl
   432 ;;		_instCtrl
   433 ;; This function is called by:
   434 ;;		_main
   435 ;; This function uses a non-reentrant model
   436 ;;
   437                           
   438                           
   439                           ;psect for function _readKey
   440  0735                     _readKey:	
   441                           
   442                           ;incstack = 0
   443                           ; Regs used in _readKey: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   444                           ;readKey@rowCount stored from wreg
   445  0735  1283               	bcf	3,5	;RP0=0, select bank0
   446  0736  1303               	bcf	3,6	;RP1=0, select bank0
   447  0737  00AB               	movwf	readKey@rowCount
   448                           
   449                           ;LE2.c: 54: int bits = PORTD;
   450  0738  0808               	movf	8,w	;volatile
   451  0739  00A4               	movwf	??_readKey
   452  073A  01A5               	clrf	??_readKey+1
   453  073B  0824               	movf	??_readKey,w
   454  073C  00A7               	movwf	readKey@bits
   455  073D  0825               	movf	??_readKey+1,w
   456  073E  00A8               	movwf	readKey@bits+1
   457                           
   458                           ;LE2.c: 55: for (int i = 0; i < sizeof(keyCodes) / sizeof(keyCodes[0]); i++)
   459  073F  01A9               	clrf	readKey@i
   460  0740  01AA               	clrf	readKey@i+1
   461  0741  3000               	movlw	0
   462  0742  022A               	subwf	readKey@i+1,w
   463  0743  300F               	movlw	15
   464  0744  1903               	skipnz
   465  0745  0229               	subwf	readKey@i,w
   466  0746  1803               	btfsc	3,0
   467  0747  2F7E               	goto	l809
   468  0748                     l803:	
   469                           
   470                           ;LE2.c: 56: {
   471                           ;LE2.c: 57: if (bits == keyCodes[i])
   472  0748  0829               	movf	readKey@i,w
   473  0749  00A4               	movwf	??_readKey
   474  074A  0724               	addwf	??_readKey,w
   475  074B  3E01               	addlw	low (_keyCodes-__stringbase)
   476  074C  0084               	movwf	4
   477  074D  120A  118A  2003  120A  118A  	fcall	stringdir
   478  0752  00A5               	movwf	??_readKey+1
   479  0753  120A  118A  2003  120A  118A  	fcall	stringdir
   480  0758  00A6               	movwf	??_readKey+2
   481  0759  0828               	movf	readKey@bits+1,w
   482  075A  0626               	xorwf	??_readKey+2,w
   483  075B  1D03               	skipz
   484  075C  2F5F               	goto	u565
   485  075D  0827               	movf	readKey@bits,w
   486  075E  0625               	xorwf	??_readKey+1,w
   487  075F                     u565:	
   488  075F  1D03               	skipz
   489  0760  2F6F               	goto	l807
   490                           
   491                           ;LE2.c: 58: {
   492                           ;LE2.c: 59: dataCtrl(keyMap[i]);
   493  0761  0829               	movf	readKey@i,w
   494  0762  3E1F               	addlw	low (_keyMap-__stringbase)
   495  0763  0084               	movwf	4
   496  0764  120A  118A  2003  120A  118A  	fcall	stringdir
   497  0769  120A  118A  2624  120A  118A  	fcall	_dataCtrl
   498                           
   499                           ;LE2.c: 60: break;
   500  076E  2F7E               	goto	l809
   501  076F                     l807:	
   502  076F  3001               	movlw	1
   503  0770  1283               	bcf	3,5	;RP0=0, select bank0
   504  0771  1303               	bcf	3,6	;RP1=0, select bank0
   505  0772  07A9               	addwf	readKey@i,f
   506  0773  1803               	skipnc
   507  0774  0AAA               	incf	readKey@i+1,f
   508  0775  3000               	movlw	0
   509  0776  07AA               	addwf	readKey@i+1,f
   510  0777  3000               	movlw	0
   511  0778  022A               	subwf	readKey@i+1,w
   512  0779  300F               	movlw	15
   513  077A  1903               	skipnz
   514  077B  0229               	subwf	readKey@i,w
   515  077C  1C03               	skipc
   516  077D  2F48               	goto	l803
   517  077E                     l809:	
   518                           
   519                           ;LE2.c: 61: }
   520                           ;LE2.c: 62: }
   521                           ;LE2.c: 63: *rowCount = (*rowCount + 1) % 80;
   522  077E  3050               	movlw	80
   523  077F  00F0               	movwf	___awmod@divisor
   524  0780  3000               	movlw	0
   525  0781  00F1               	movwf	___awmod@divisor+1
   526  0782  1283               	bcf	3,5	;RP0=0, select bank0
   527  0783  1303               	bcf	3,6	;RP1=0, select bank0
   528  0784  082B               	movf	readKey@rowCount,w
   529  0785  0084               	movwf	4
   530  0786  1383               	bcf	3,7	;select IRP bank0
   531  0787  0800               	movf	0,w
   532  0788  00A4               	movwf	??_readKey
   533  0789  0A84               	incf	4,f
   534  078A  0800               	movf	0,w
   535  078B  00A5               	movwf	??_readKey+1
   536  078C  0824               	movf	??_readKey,w
   537  078D  3E01               	addlw	1
   538  078E  00F2               	movwf	___awmod@dividend
   539  078F  0825               	movf	??_readKey+1,w
   540  0790  1803               	skipnc
   541  0791  3E01               	addlw	1
   542  0792  3E00               	addlw	0
   543  0793  00F3               	movwf	___awmod@dividend+1
   544  0794  120A  118A  268D  120A  118A  	fcall	___awmod
   545  0799  1283               	bcf	3,5	;RP0=0, select bank0
   546  079A  1303               	bcf	3,6	;RP1=0, select bank0
   547  079B  082B               	movf	readKey@rowCount,w
   548  079C  0084               	movwf	4
   549  079D  0870               	movf	?___awmod,w
   550  079E  1383               	bcf	3,7	;select IRP bank0
   551  079F  0080               	movwf	0
   552  07A0  0A84               	incf	4,f
   553  07A1  0871               	movf	?___awmod+1,w
   554  07A2  0080               	movwf	0
   555                           
   556                           ;LE2.c: 64: if (*rowCount % 20 == 0) instCtrl((0xC0 + (*rowCount / 20 - 1) * 0x34));
   557  07A3  3014               	movlw	20
   558  07A4  00F0               	movwf	___awmod@divisor
   559  07A5  3000               	movlw	0
   560  07A6  00F1               	movwf	___awmod@divisor+1
   561  07A7  082B               	movf	readKey@rowCount,w
   562  07A8  0084               	movwf	4
   563  07A9  0800               	movf	0,w
   564  07AA  00F2               	movwf	___awmod@dividend
   565  07AB  0A84               	incf	4,f
   566  07AC  0800               	movf	0,w
   567  07AD  00F3               	movwf	___awmod@dividend+1
   568  07AE  120A  118A  268D  120A  118A  	fcall	___awmod
   569  07B3  0871               	movf	?___awmod+1,w
   570  07B4  0470               	iorwf	?___awmod,w
   571  07B5  1D03               	skipz
   572  07B6  2FEA               	goto	l813
   573  07B7  3014               	movlw	20
   574  07B8  00F0               	movwf	___awdiv@divisor
   575  07B9  3000               	movlw	0
   576  07BA  00F1               	movwf	___awdiv@divisor+1
   577  07BB  1283               	bcf	3,5	;RP0=0, select bank0
   578  07BC  1303               	bcf	3,6	;RP1=0, select bank0
   579  07BD  082B               	movf	readKey@rowCount,w
   580  07BE  0084               	movwf	4
   581  07BF  1383               	bcf	3,7	;select IRP bank0
   582  07C0  0800               	movf	0,w
   583  07C1  00F2               	movwf	___awdiv@dividend
   584  07C2  0A84               	incf	4,f
   585  07C3  0800               	movf	0,w
   586  07C4  00F3               	movwf	___awdiv@dividend+1
   587  07C5  120A  118A  26DA  120A  118A  	fcall	___awdiv
   588  07CA  0870               	movf	?___awdiv,w
   589  07CB  3EFF               	addlw	255
   590  07CC  00F9               	movwf	___wmul@multiplier
   591  07CD  0871               	movf	?___awdiv+1,w
   592  07CE  1803               	skipnc
   593  07CF  3E01               	addlw	1
   594  07D0  3EFF               	addlw	255
   595  07D1  00FA               	movwf	___wmul@multiplier+1
   596  07D2  3034               	movlw	52
   597  07D3  00FB               	movwf	___wmul@multiplicand
   598  07D4  3000               	movlw	0
   599  07D5  00FC               	movwf	___wmul@multiplicand+1
   600  07D6  120A  118A  25FB  120A  118A  	fcall	___wmul
   601  07DB  0879               	movf	?___wmul,w
   602  07DC  3EC0               	addlw	192
   603  07DD  1283               	bcf	3,5	;RP0=0, select bank0
   604  07DE  1303               	bcf	3,6	;RP1=0, select bank0
   605  07DF  00A2               	movwf	instCtrl@instruction_in
   606  07E0  087A               	movf	?___wmul+1,w
   607  07E1  1803               	skipnc
   608  07E2  3E01               	addlw	1
   609  07E3  3E00               	addlw	0
   610  07E4  00A3               	movwf	instCtrl@instruction_in+1
   611  07E5  120A  118A  25D3  120A  118A  	fcall	_instCtrl
   612  07EA                     l813:	
   613                           
   614                           ;LE2.c: 66: if (*rowCount == 0) instCtrl(0x01);
   615  07EA  1283               	bcf	3,5	;RP0=0, select bank0
   616  07EB  1303               	bcf	3,6	;RP1=0, select bank0
   617  07EC  082B               	movf	readKey@rowCount,w
   618  07ED  0084               	movwf	4
   619  07EE  1383               	bcf	3,7	;select IRP bank0
   620  07EF  0800               	movf	0,w
   621  07F0  0A84               	incf	4,f
   622  07F1  0400               	iorwf	0,w
   623  07F2  1D03               	skipz
   624  07F3  0008               	return
   625  07F4  3001               	movlw	1
   626  07F5  00A2               	movwf	instCtrl@instruction_in
   627  07F6  3000               	movlw	0
   628  07F7  00A3               	movwf	instCtrl@instruction_in+1
   629  07F8  120A  118A  25D3   	fcall	_instCtrl
   630  07FB  0008               	return
   631  07FC                     __end_of_readKey:	
   632                           
   633                           	psect	text2
   634  0624                     __ptext2:	
   635 ;; *************** function _dataCtrl *****************
   636 ;; Defined at:
   637 ;;		line 31 in file "C:\Users\notjo\OneDrive\Desktop\USC\USC-Year3-Sem2\3201-EmbeddedSystems\Labs\LE_02\LE2.c"
   638 ;; Parameters:    Size  Location     Type
   639 ;;  data_inst_in    1    wreg     unsigned char 
   640 ;; Auto vars:     Size  Location     Type
   641 ;;  data_inst_in    1    5[COMMON] unsigned char 
   642 ;; Return value:  Size  Location     Type
   643 ;;		None               void
   644 ;; Registers used:
   645 ;;		wreg, status,2, status,0, pclath, cstack
   646 ;; Tracked objects:
   647 ;;		On entry : 0/0
   648 ;;		On exit  : 0/0
   649 ;;		Unchanged: 0/0
   650 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   651 ;;      Params:         0       0       0       0       0
   652 ;;      Locals:         1       0       0       0       0
   653 ;;      Temps:          0       0       0       0       0
   654 ;;      Totals:         1       0       0       0       0
   655 ;;Total ram usage:        1 bytes
   656 ;; Hardware stack levels used:    1
   657 ;; Hardware stack levels required when called:    1
   658 ;; This function calls:
   659 ;;		_delay
   660 ;; This function is called by:
   661 ;;		_readKey
   662 ;; This function uses a non-reentrant model
   663 ;;
   664                           
   665                           
   666                           ;psect for function _dataCtrl
   667  0624                     _dataCtrl:	
   668                           
   669                           ;incstack = 0
   670                           ; Regs used in _dataCtrl: [wreg+status,2+status,0+pclath+cstack]
   671                           ;dataCtrl@data_inst_in stored from wreg
   672  0624  00F5               	movwf	dataCtrl@data_inst_in
   673                           
   674                           ;LE2.c: 33: PORTB = data_inst_in;
   675  0625  0875               	movf	dataCtrl@data_inst_in,w
   676  0626  1283               	bcf	3,5	;RP0=0, select bank0
   677  0627  1303               	bcf	3,6	;RP1=0, select bank0
   678  0628  0086               	movwf	6	;volatile
   679                           
   680                           ;LE2.c: 34: delay(0x2000);
   681  0629  3000               	movlw	0
   682  062A  00F0               	movwf	delay@timeIn
   683  062B  3020               	movlw	32
   684  062C  00F1               	movwf	delay@timeIn+1
   685  062D  120A  118A  2598  120A  118A  	fcall	_delay
   686                           
   687                           ;LE2.c: 35: PORTC = 0x06;
   688  0632  3006               	movlw	6
   689  0633  1283               	bcf	3,5	;RP0=0, select bank0
   690  0634  1303               	bcf	3,6	;RP1=0, select bank0
   691  0635  0087               	movwf	7	;volatile
   692                           
   693                           ;LE2.c: 36: delay(0x2000);
   694  0636  3000               	movlw	0
   695  0637  00F0               	movwf	delay@timeIn
   696  0638  3020               	movlw	32
   697  0639  00F1               	movwf	delay@timeIn+1
   698  063A  120A  118A  2598  120A  118A  	fcall	_delay
   699                           
   700                           ;LE2.c: 37: PORTC = 0x02;
   701  063F  3002               	movlw	2
   702  0640  1283               	bcf	3,5	;RP0=0, select bank0
   703  0641  1303               	bcf	3,6	;RP1=0, select bank0
   704  0642  0087               	movwf	7	;volatile
   705                           
   706                           ;LE2.c: 38: delay(0x2000);
   707  0643  3000               	movlw	0
   708  0644  00F0               	movwf	delay@timeIn
   709  0645  3020               	movlw	32
   710  0646  00F1               	movwf	delay@timeIn+1
   711  0647  120A  118A  2598   	fcall	_delay
   712                           
   713                           ;LE2.c: 39: PORTC = 0x00;
   714  064A  1283               	bcf	3,5	;RP0=0, select bank0
   715  064B  1303               	bcf	3,6	;RP1=0, select bank0
   716  064C  0187               	clrf	7	;volatile
   717  064D  0008               	return
   718  064E                     __end_of_dataCtrl:	
   719                           
   720                           	psect	text3
   721  05FB                     __ptext3:	
   722 ;; *************** function ___wmul *****************
   723 ;; Defined at:
   724 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\Umul16.c"
   725 ;; Parameters:    Size  Location     Type
   726 ;;  multiplier      2    9[COMMON] unsigned int 
   727 ;;  multiplicand    2   11[COMMON] unsigned int 
   728 ;; Auto vars:     Size  Location     Type
   729 ;;  product         2    0[BANK0 ] unsigned int 
   730 ;; Return value:  Size  Location     Type
   731 ;;                  2    9[COMMON] unsigned int 
   732 ;; Registers used:
   733 ;;		wreg, status,2, status,0
   734 ;; Tracked objects:
   735 ;;		On entry : 0/0
   736 ;;		On exit  : 0/0
   737 ;;		Unchanged: 0/0
   738 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   739 ;;      Params:         4       0       0       0       0
   740 ;;      Locals:         0       2       0       0       0
   741 ;;      Temps:          0       0       0       0       0
   742 ;;      Totals:         4       2       0       0       0
   743 ;;Total ram usage:        6 bytes
   744 ;; Hardware stack levels used:    1
   745 ;; This function calls:
   746 ;;		Nothing
   747 ;; This function is called by:
   748 ;;		_readKey
   749 ;; This function uses a non-reentrant model
   750 ;;
   751                           
   752                           
   753                           ;psect for function ___wmul
   754  05FB                     ___wmul:	
   755                           
   756                           ;incstack = 0
   757                           ; Regs used in ___wmul: [wreg+status,2+status,0]
   758  05FB  1283               	bcf	3,5	;RP0=0, select bank0
   759  05FC  1303               	bcf	3,6	;RP1=0, select bank0
   760  05FD  01A0               	clrf	___wmul@product
   761  05FE  01A1               	clrf	___wmul@product+1
   762  05FF                     l701:	
   763  05FF  1C79               	btfss	___wmul@multiplier,0
   764  0600  2E09               	goto	l134
   765  0601  087B               	movf	___wmul@multiplicand,w
   766  0602  1283               	bcf	3,5	;RP0=0, select bank0
   767  0603  1303               	bcf	3,6	;RP1=0, select bank0
   768  0604  07A0               	addwf	___wmul@product,f
   769  0605  1803               	skipnc
   770  0606  0AA1               	incf	___wmul@product+1,f
   771  0607  087C               	movf	___wmul@multiplicand+1,w
   772  0608  07A1               	addwf	___wmul@product+1,f
   773  0609                     l134:	
   774  0609  3001               	movlw	1
   775  060A                     u335:	
   776  060A  1003               	clrc
   777  060B  0DFB               	rlf	___wmul@multiplicand,f
   778  060C  0DFC               	rlf	___wmul@multiplicand+1,f
   779  060D  3EFF               	addlw	-1
   780  060E  1D03               	skipz
   781  060F  2E0A               	goto	u335
   782  0610  3001               	movlw	1
   783  0611                     u345:	
   784  0611  1003               	clrc
   785  0612  0CFA               	rrf	___wmul@multiplier+1,f
   786  0613  0CF9               	rrf	___wmul@multiplier,f
   787  0614  3EFF               	addlw	-1
   788  0615  1D03               	skipz
   789  0616  2E11               	goto	u345
   790  0617  087A               	movf	___wmul@multiplier+1,w
   791  0618  0479               	iorwf	___wmul@multiplier,w
   792  0619  1D03               	skipz
   793  061A  2DFF               	goto	l701
   794  061B  1283               	bcf	3,5	;RP0=0, select bank0
   795  061C  1303               	bcf	3,6	;RP1=0, select bank0
   796  061D  0821               	movf	___wmul@product+1,w
   797  061E  01FA               	clrf	?___wmul+1
   798  061F  07FA               	addwf	?___wmul+1,f
   799  0620  0820               	movf	___wmul@product,w
   800  0621  01F9               	clrf	?___wmul
   801  0622  07F9               	addwf	?___wmul,f
   802  0623  0008               	return
   803  0624                     __end_of___wmul:	
   804                           
   805                           	psect	text4
   806  068D                     __ptext4:	
   807 ;; *************** function ___awmod *****************
   808 ;; Defined at:
   809 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\awmod.c"
   810 ;; Parameters:    Size  Location     Type
   811 ;;  divisor         2    0[COMMON] int 
   812 ;;  dividend        2    2[COMMON] int 
   813 ;; Auto vars:     Size  Location     Type
   814 ;;  sign            1    6[COMMON] unsigned char 
   815 ;;  counter         1    5[COMMON] unsigned char 
   816 ;; Return value:  Size  Location     Type
   817 ;;                  2    0[COMMON] int 
   818 ;; Registers used:
   819 ;;		wreg, status,2, status,0
   820 ;; Tracked objects:
   821 ;;		On entry : 0/0
   822 ;;		On exit  : 0/0
   823 ;;		Unchanged: 0/0
   824 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   825 ;;      Params:         4       0       0       0       0
   826 ;;      Locals:         2       0       0       0       0
   827 ;;      Temps:          1       0       0       0       0
   828 ;;      Totals:         7       0       0       0       0
   829 ;;Total ram usage:        7 bytes
   830 ;; Hardware stack levels used:    1
   831 ;; This function calls:
   832 ;;		Nothing
   833 ;; This function is called by:
   834 ;;		_readKey
   835 ;; This function uses a non-reentrant model
   836 ;;
   837                           
   838                           
   839                           ;psect for function ___awmod
   840  068D                     ___awmod:	
   841                           
   842                           ;incstack = 0
   843                           ; Regs used in ___awmod: [wreg+status,2+status,0]
   844  068D  01F6               	clrf	___awmod@sign
   845  068E  1FF3               	btfss	___awmod@dividend+1,7
   846  068F  2E97               	goto	l763
   847  0690  09F2               	comf	___awmod@dividend,f
   848  0691  09F3               	comf	___awmod@dividend+1,f
   849  0692  0AF2               	incf	___awmod@dividend,f
   850  0693  1903               	skipnz
   851  0694  0AF3               	incf	___awmod@dividend+1,f
   852  0695  01F6               	clrf	___awmod@sign
   853  0696  0AF6               	incf	___awmod@sign,f
   854  0697                     l763:	
   855  0697  1FF1               	btfss	___awmod@divisor+1,7
   856  0698  2E9E               	goto	l767
   857  0699  09F0               	comf	___awmod@divisor,f
   858  069A  09F1               	comf	___awmod@divisor+1,f
   859  069B  0AF0               	incf	___awmod@divisor,f
   860  069C  1903               	skipnz
   861  069D  0AF1               	incf	___awmod@divisor+1,f
   862  069E                     l767:	
   863  069E  0871               	movf	___awmod@divisor+1,w
   864  069F  0470               	iorwf	___awmod@divisor,w
   865  06A0  1903               	skipnz
   866  06A1  2ECB               	goto	l785
   867  06A2  01F5               	clrf	___awmod@counter
   868  06A3  0AF5               	incf	___awmod@counter,f
   869  06A4                     l775:	
   870  06A4  1BF1               	btfsc	___awmod@divisor+1,7
   871  06A5  2EB2               	goto	l777
   872  06A6  3001               	movlw	1
   873  06A7                     u495:	
   874  06A7  1003               	clrc
   875  06A8  0DF0               	rlf	___awmod@divisor,f
   876  06A9  0DF1               	rlf	___awmod@divisor+1,f
   877  06AA  3EFF               	addlw	-1
   878  06AB  1D03               	skipz
   879  06AC  2EA7               	goto	u495
   880  06AD  3001               	movlw	1
   881  06AE  00F4               	movwf	??___awmod
   882  06AF  0874               	movf	??___awmod,w
   883  06B0  07F5               	addwf	___awmod@counter,f
   884  06B1  2EA4               	goto	l775
   885  06B2                     l777:	
   886  06B2  0871               	movf	___awmod@divisor+1,w
   887  06B3  0273               	subwf	___awmod@dividend+1,w
   888  06B4  1D03               	skipz
   889  06B5  2EB8               	goto	u515
   890  06B6  0870               	movf	___awmod@divisor,w
   891  06B7  0272               	subwf	___awmod@dividend,w
   892  06B8                     u515:	
   893  06B8  1C03               	skipc
   894  06B9  2EC0               	goto	l781
   895  06BA  0870               	movf	___awmod@divisor,w
   896  06BB  02F2               	subwf	___awmod@dividend,f
   897  06BC  0871               	movf	___awmod@divisor+1,w
   898  06BD  1C03               	skipc
   899  06BE  03F3               	decf	___awmod@dividend+1,f
   900  06BF  02F3               	subwf	___awmod@dividend+1,f
   901  06C0                     l781:	
   902  06C0  3001               	movlw	1
   903  06C1                     u525:	
   904  06C1  1003               	clrc
   905  06C2  0CF1               	rrf	___awmod@divisor+1,f
   906  06C3  0CF0               	rrf	___awmod@divisor,f
   907  06C4  3EFF               	addlw	-1
   908  06C5  1D03               	skipz
   909  06C6  2EC1               	goto	u525
   910  06C7  3001               	movlw	1
   911  06C8  02F5               	subwf	___awmod@counter,f
   912  06C9  1D03               	btfss	3,2
   913  06CA  2EB2               	goto	l777
   914  06CB                     l785:	
   915  06CB  0876               	movf	___awmod@sign,w
   916  06CC  1903               	btfsc	3,2
   917  06CD  2ED3               	goto	l789
   918  06CE  09F2               	comf	___awmod@dividend,f
   919  06CF  09F3               	comf	___awmod@dividend+1,f
   920  06D0  0AF2               	incf	___awmod@dividend,f
   921  06D1  1903               	skipnz
   922  06D2  0AF3               	incf	___awmod@dividend+1,f
   923  06D3                     l789:	
   924  06D3  0873               	movf	___awmod@dividend+1,w
   925  06D4  01F1               	clrf	?___awmod+1
   926  06D5  07F1               	addwf	?___awmod+1,f
   927  06D6  0872               	movf	___awmod@dividend,w
   928  06D7  01F0               	clrf	?___awmod
   929  06D8  07F0               	addwf	?___awmod,f
   930  06D9  0008               	return
   931  06DA                     __end_of___awmod:	
   932                           
   933                           	psect	text5
   934  06DA                     __ptext5:	
   935 ;; *************** function ___awdiv *****************
   936 ;; Defined at:
   937 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\awdiv.c"
   938 ;; Parameters:    Size  Location     Type
   939 ;;  divisor         2    0[COMMON] int 
   940 ;;  dividend        2    2[COMMON] int 
   941 ;; Auto vars:     Size  Location     Type
   942 ;;  quotient        2    7[COMMON] int 
   943 ;;  sign            1    6[COMMON] unsigned char 
   944 ;;  counter         1    5[COMMON] unsigned char 
   945 ;; Return value:  Size  Location     Type
   946 ;;                  2    0[COMMON] int 
   947 ;; Registers used:
   948 ;;		wreg, status,2, status,0
   949 ;; Tracked objects:
   950 ;;		On entry : 0/0
   951 ;;		On exit  : 0/0
   952 ;;		Unchanged: 0/0
   953 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   954 ;;      Params:         4       0       0       0       0
   955 ;;      Locals:         4       0       0       0       0
   956 ;;      Temps:          1       0       0       0       0
   957 ;;      Totals:         9       0       0       0       0
   958 ;;Total ram usage:        9 bytes
   959 ;; Hardware stack levels used:    1
   960 ;; This function calls:
   961 ;;		Nothing
   962 ;; This function is called by:
   963 ;;		_readKey
   964 ;; This function uses a non-reentrant model
   965 ;;
   966                           
   967                           
   968                           ;psect for function ___awdiv
   969  06DA                     ___awdiv:	
   970                           
   971                           ;incstack = 0
   972                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
   973  06DA  01F6               	clrf	___awdiv@sign
   974  06DB  1FF1               	btfss	___awdiv@divisor+1,7
   975  06DC  2EE4               	goto	l719
   976  06DD  09F0               	comf	___awdiv@divisor,f
   977  06DE  09F1               	comf	___awdiv@divisor+1,f
   978  06DF  0AF0               	incf	___awdiv@divisor,f
   979  06E0  1903               	skipnz
   980  06E1  0AF1               	incf	___awdiv@divisor+1,f
   981  06E2  01F6               	clrf	___awdiv@sign
   982  06E3  0AF6               	incf	___awdiv@sign,f
   983  06E4                     l719:	
   984  06E4  1FF3               	btfss	___awdiv@dividend+1,7
   985  06E5  2EEF               	goto	l725
   986  06E6  09F2               	comf	___awdiv@dividend,f
   987  06E7  09F3               	comf	___awdiv@dividend+1,f
   988  06E8  0AF2               	incf	___awdiv@dividend,f
   989  06E9  1903               	skipnz
   990  06EA  0AF3               	incf	___awdiv@dividend+1,f
   991  06EB  3001               	movlw	1
   992  06EC  00F4               	movwf	??___awdiv
   993  06ED  0874               	movf	??___awdiv,w
   994  06EE  06F6               	xorwf	___awdiv@sign,f
   995  06EF                     l725:	
   996  06EF  01F7               	clrf	___awdiv@quotient
   997  06F0  01F8               	clrf	___awdiv@quotient+1
   998  06F1  0871               	movf	___awdiv@divisor+1,w
   999  06F2  0470               	iorwf	___awdiv@divisor,w
  1000  06F3  1903               	skipnz
  1001  06F4  2F26               	goto	l747
  1002  06F5  01F5               	clrf	___awdiv@counter
  1003  06F6  0AF5               	incf	___awdiv@counter,f
  1004  06F7                     l735:	
  1005  06F7  1BF1               	btfsc	___awdiv@divisor+1,7
  1006  06F8  2F05               	goto	l737
  1007  06F9  3001               	movlw	1
  1008  06FA                     u395:	
  1009  06FA  1003               	clrc
  1010  06FB  0DF0               	rlf	___awdiv@divisor,f
  1011  06FC  0DF1               	rlf	___awdiv@divisor+1,f
  1012  06FD  3EFF               	addlw	-1
  1013  06FE  1D03               	skipz
  1014  06FF  2EFA               	goto	u395
  1015  0700  3001               	movlw	1
  1016  0701  00F4               	movwf	??___awdiv
  1017  0702  0874               	movf	??___awdiv,w
  1018  0703  07F5               	addwf	___awdiv@counter,f
  1019  0704  2EF7               	goto	l735
  1020  0705                     l737:	
  1021  0705  3001               	movlw	1
  1022  0706                     u415:	
  1023  0706  1003               	clrc
  1024  0707  0DF7               	rlf	___awdiv@quotient,f
  1025  0708  0DF8               	rlf	___awdiv@quotient+1,f
  1026  0709  3EFF               	addlw	-1
  1027  070A  1D03               	skipz
  1028  070B  2F06               	goto	u415
  1029  070C  0871               	movf	___awdiv@divisor+1,w
  1030  070D  0273               	subwf	___awdiv@dividend+1,w
  1031  070E  1D03               	skipz
  1032  070F  2F12               	goto	u425
  1033  0710  0870               	movf	___awdiv@divisor,w
  1034  0711  0272               	subwf	___awdiv@dividend,w
  1035  0712                     u425:	
  1036  0712  1C03               	skipc
  1037  0713  2F1B               	goto	l743
  1038  0714  0870               	movf	___awdiv@divisor,w
  1039  0715  02F2               	subwf	___awdiv@dividend,f
  1040  0716  0871               	movf	___awdiv@divisor+1,w
  1041  0717  1C03               	skipc
  1042  0718  03F3               	decf	___awdiv@dividend+1,f
  1043  0719  02F3               	subwf	___awdiv@dividend+1,f
  1044  071A  1477               	bsf	___awdiv@quotient,0
  1045  071B                     l743:	
  1046  071B  3001               	movlw	1
  1047  071C                     u435:	
  1048  071C  1003               	clrc
  1049  071D  0CF1               	rrf	___awdiv@divisor+1,f
  1050  071E  0CF0               	rrf	___awdiv@divisor,f
  1051  071F  3EFF               	addlw	-1
  1052  0720  1D03               	skipz
  1053  0721  2F1C               	goto	u435
  1054  0722  3001               	movlw	1
  1055  0723  02F5               	subwf	___awdiv@counter,f
  1056  0724  1D03               	btfss	3,2
  1057  0725  2F05               	goto	l737
  1058  0726                     l747:	
  1059  0726  0876               	movf	___awdiv@sign,w
  1060  0727  1903               	btfsc	3,2
  1061  0728  2F2E               	goto	l751
  1062  0729  09F7               	comf	___awdiv@quotient,f
  1063  072A  09F8               	comf	___awdiv@quotient+1,f
  1064  072B  0AF7               	incf	___awdiv@quotient,f
  1065  072C  1903               	skipnz
  1066  072D  0AF8               	incf	___awdiv@quotient+1,f
  1067  072E                     l751:	
  1068  072E  0878               	movf	___awdiv@quotient+1,w
  1069  072F  01F1               	clrf	?___awdiv+1
  1070  0730  07F1               	addwf	?___awdiv+1,f
  1071  0731  0877               	movf	___awdiv@quotient,w
  1072  0732  01F0               	clrf	?___awdiv
  1073  0733  07F0               	addwf	?___awdiv,f
  1074  0734  0008               	return
  1075  0735                     __end_of___awdiv:	
  1076                           
  1077                           	psect	text6
  1078  064E                     __ptext6:	
  1079 ;; *************** function _initLCD *****************
  1080 ;; Defined at:
  1081 ;;		line 42 in file "C:\Users\notjo\OneDrive\Desktop\USC\USC-Year3-Sem2\3201-EmbeddedSystems\Labs\LE_02\LE2.c"
  1082 ;; Parameters:    Size  Location     Type
  1083 ;;		None
  1084 ;; Auto vars:     Size  Location     Type
  1085 ;;		None
  1086 ;; Return value:  Size  Location     Type
  1087 ;;		None               void
  1088 ;; Registers used:
  1089 ;;		wreg, status,2, status,0, pclath, cstack
  1090 ;; Tracked objects:
  1091 ;;		On entry : 0/0
  1092 ;;		On exit  : 0/0
  1093 ;;		Unchanged: 0/0
  1094 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1095 ;;      Params:         0       0       0       0       0
  1096 ;;      Locals:         0       0       0       0       0
  1097 ;;      Temps:          0       0       0       0       0
  1098 ;;      Totals:         0       0       0       0       0
  1099 ;;Total ram usage:        0 bytes
  1100 ;; Hardware stack levels used:    1
  1101 ;; Hardware stack levels required when called:    2
  1102 ;; This function calls:
  1103 ;;		_delay
  1104 ;;		_instCtrl
  1105 ;; This function is called by:
  1106 ;;		_main
  1107 ;; This function uses a non-reentrant model
  1108 ;;
  1109                           
  1110                           
  1111                           ;psect for function _initLCD
  1112  064E                     _initLCD:	
  1113                           
  1114                           ;LE2.c: 44: delay(0x2000);
  1115                           
  1116                           ;incstack = 0
  1117                           ; Regs used in _initLCD: [wreg+status,2+status,0+pclath+cstack]
  1118  064E  3000               	movlw	0
  1119  064F  00F0               	movwf	delay@timeIn
  1120  0650  3020               	movlw	32
  1121  0651  00F1               	movwf	delay@timeIn+1
  1122  0652  120A  118A  2598  120A  118A  	fcall	_delay
  1123                           
  1124                           ;LE2.c: 45: instCtrl(0x38);
  1125  0657  3038               	movlw	56
  1126  0658  1283               	bcf	3,5	;RP0=0, select bank0
  1127  0659  1303               	bcf	3,6	;RP1=0, select bank0
  1128  065A  00A2               	movwf	instCtrl@instruction_in
  1129  065B  3000               	movlw	0
  1130  065C  00A3               	movwf	instCtrl@instruction_in+1
  1131  065D  120A  118A  25D3  120A  118A  	fcall	_instCtrl
  1132                           
  1133                           ;LE2.c: 46: instCtrl(0x08);
  1134  0662  3008               	movlw	8
  1135  0663  1283               	bcf	3,5	;RP0=0, select bank0
  1136  0664  1303               	bcf	3,6	;RP1=0, select bank0
  1137  0665  00A2               	movwf	instCtrl@instruction_in
  1138  0666  3000               	movlw	0
  1139  0667  00A3               	movwf	instCtrl@instruction_in+1
  1140  0668  120A  118A  25D3  120A  118A  	fcall	_instCtrl
  1141                           
  1142                           ;LE2.c: 47: instCtrl(0x01);
  1143  066D  3001               	movlw	1
  1144  066E  1283               	bcf	3,5	;RP0=0, select bank0
  1145  066F  1303               	bcf	3,6	;RP1=0, select bank0
  1146  0670  00A2               	movwf	instCtrl@instruction_in
  1147  0671  3000               	movlw	0
  1148  0672  00A3               	movwf	instCtrl@instruction_in+1
  1149  0673  120A  118A  25D3  120A  118A  	fcall	_instCtrl
  1150                           
  1151                           ;LE2.c: 48: instCtrl(0x06);
  1152  0678  3006               	movlw	6
  1153  0679  1283               	bcf	3,5	;RP0=0, select bank0
  1154  067A  1303               	bcf	3,6	;RP1=0, select bank0
  1155  067B  00A2               	movwf	instCtrl@instruction_in
  1156  067C  3000               	movlw	0
  1157  067D  00A3               	movwf	instCtrl@instruction_in+1
  1158  067E  120A  118A  25D3  120A  118A  	fcall	_instCtrl
  1159                           
  1160                           ;LE2.c: 49: instCtrl(0x0C);
  1161  0683  300C               	movlw	12
  1162  0684  1283               	bcf	3,5	;RP0=0, select bank0
  1163  0685  1303               	bcf	3,6	;RP1=0, select bank0
  1164  0686  00A2               	movwf	instCtrl@instruction_in
  1165  0687  3000               	movlw	0
  1166  0688  00A3               	movwf	instCtrl@instruction_in+1
  1167  0689  120A  118A  25D3   	fcall	_instCtrl
  1168  068C  0008               	return
  1169  068D                     __end_of_initLCD:	
  1170                           
  1171                           	psect	text7
  1172  05D3                     __ptext7:	
  1173 ;; *************** function _instCtrl *****************
  1174 ;; Defined at:
  1175 ;;		line 20 in file "C:\Users\notjo\OneDrive\Desktop\USC\USC-Year3-Sem2\3201-EmbeddedSystems\Labs\LE_02\LE2.c"
  1176 ;; Parameters:    Size  Location     Type
  1177 ;;  instruction_    2    2[BANK0 ] int 
  1178 ;; Auto vars:     Size  Location     Type
  1179 ;;		None
  1180 ;; Return value:  Size  Location     Type
  1181 ;;		None               void
  1182 ;; Registers used:
  1183 ;;		wreg, status,2, status,0, pclath, cstack
  1184 ;; Tracked objects:
  1185 ;;		On entry : 0/0
  1186 ;;		On exit  : 0/0
  1187 ;;		Unchanged: 0/0
  1188 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1189 ;;      Params:         0       2       0       0       0
  1190 ;;      Locals:         0       0       0       0       0
  1191 ;;      Temps:          0       0       0       0       0
  1192 ;;      Totals:         0       2       0       0       0
  1193 ;;Total ram usage:        2 bytes
  1194 ;; Hardware stack levels used:    1
  1195 ;; Hardware stack levels required when called:    1
  1196 ;; This function calls:
  1197 ;;		_delay
  1198 ;; This function is called by:
  1199 ;;		_initLCD
  1200 ;;		_readKey
  1201 ;; This function uses a non-reentrant model
  1202 ;;
  1203                           
  1204                           
  1205                           ;psect for function _instCtrl
  1206  05D3                     _instCtrl:	
  1207                           
  1208                           ;LE2.c: 22: PORTB = instruction_in;
  1209                           
  1210                           ;incstack = 0
  1211                           ; Regs used in _instCtrl: [wreg+status,2+status,0+pclath+cstack]
  1212  05D3  1283               	bcf	3,5	;RP0=0, select bank0
  1213  05D4  1303               	bcf	3,6	;RP1=0, select bank0
  1214  05D5  0822               	movf	instCtrl@instruction_in,w
  1215  05D6  0086               	movwf	6	;volatile
  1216                           
  1217                           ;LE2.c: 23: delay(0x2000);
  1218  05D7  3000               	movlw	0
  1219  05D8  00F0               	movwf	delay@timeIn
  1220  05D9  3020               	movlw	32
  1221  05DA  00F1               	movwf	delay@timeIn+1
  1222  05DB  120A  118A  2598  120A  118A  	fcall	_delay
  1223                           
  1224                           ;LE2.c: 24: PORTC = 0x04;
  1225  05E0  3004               	movlw	4
  1226  05E1  1283               	bcf	3,5	;RP0=0, select bank0
  1227  05E2  1303               	bcf	3,6	;RP1=0, select bank0
  1228  05E3  0087               	movwf	7	;volatile
  1229                           
  1230                           ;LE2.c: 25: delay(0x2000);
  1231  05E4  3000               	movlw	0
  1232  05E5  00F0               	movwf	delay@timeIn
  1233  05E6  3020               	movlw	32
  1234  05E7  00F1               	movwf	delay@timeIn+1
  1235  05E8  120A  118A  2598  120A  118A  	fcall	_delay
  1236                           
  1237                           ;LE2.c: 26: PORTC = 0x00;
  1238  05ED  1283               	bcf	3,5	;RP0=0, select bank0
  1239  05EE  1303               	bcf	3,6	;RP1=0, select bank0
  1240  05EF  0187               	clrf	7	;volatile
  1241                           
  1242                           ;LE2.c: 27: delay(0x2000);
  1243  05F0  3000               	movlw	0
  1244  05F1  00F0               	movwf	delay@timeIn
  1245  05F2  3020               	movlw	32
  1246  05F3  00F1               	movwf	delay@timeIn+1
  1247  05F4  120A  118A  2598   	fcall	_delay
  1248                           
  1249                           ;LE2.c: 28: PORTC = 0x00;
  1250  05F7  1283               	bcf	3,5	;RP0=0, select bank0
  1251  05F8  1303               	bcf	3,6	;RP1=0, select bank0
  1252  05F9  0187               	clrf	7	;volatile
  1253  05FA  0008               	return
  1254  05FB                     __end_of_instCtrl:	
  1255                           
  1256                           	psect	text8
  1257  0598                     __ptext8:	
  1258 ;; *************** function _delay *****************
  1259 ;; Defined at:
  1260 ;;		line 15 in file "C:\Users\notjo\OneDrive\Desktop\USC\USC-Year3-Sem2\3201-EmbeddedSystems\Labs\LE_02\LE2.c"
  1261 ;; Parameters:    Size  Location     Type
  1262 ;;  timeIn          2    0[COMMON] int 
  1263 ;; Auto vars:     Size  Location     Type
  1264 ;;  j               2    3[COMMON] int 
  1265 ;; Return value:  Size  Location     Type
  1266 ;;		None               void
  1267 ;; Registers used:
  1268 ;;		wreg, status,2
  1269 ;; Tracked objects:
  1270 ;;		On entry : 0/0
  1271 ;;		On exit  : 0/0
  1272 ;;		Unchanged: 0/0
  1273 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1274 ;;      Params:         2       0       0       0       0
  1275 ;;      Locals:         2       0       0       0       0
  1276 ;;      Temps:          1       0       0       0       0
  1277 ;;      Totals:         5       0       0       0       0
  1278 ;;Total ram usage:        5 bytes
  1279 ;; Hardware stack levels used:    1
  1280 ;; This function calls:
  1281 ;;		Nothing
  1282 ;; This function is called by:
  1283 ;;		_instCtrl
  1284 ;;		_dataCtrl
  1285 ;;		_initLCD
  1286 ;; This function uses a non-reentrant model
  1287 ;;
  1288                           
  1289                           
  1290                           ;psect for function _delay
  1291  0598                     _delay:	
  1292                           
  1293                           ;LE2.c: 17: for(int j = 0; j < timeIn; j++);
  1294                           
  1295                           ;incstack = 0
  1296                           ; Regs used in _delay: [wreg+status,2]
  1297  0598  01F3               	clrf	delay@j
  1298  0599  01F4               	clrf	delay@j+1
  1299  059A                     l23:	
  1300  059A  0874               	movf	delay@j+1,w
  1301  059B  3A80               	xorlw	128
  1302  059C  00F2               	movwf	??_delay
  1303  059D  0871               	movf	delay@timeIn+1,w
  1304  059E  3A80               	xorlw	128
  1305  059F  0272               	subwf	??_delay,w
  1306  05A0  1D03               	skipz
  1307  05A1  2DA4               	goto	u315
  1308  05A2  0870               	movf	delay@timeIn,w
  1309  05A3  0273               	subwf	delay@j,w
  1310  05A4                     u315:	
  1311  05A4  1803               	btfsc	3,0
  1312  05A5  0008               	return
  1313  05A6  3001               	movlw	1
  1314  05A7  07F3               	addwf	delay@j,f
  1315  05A8  1803               	skipnc
  1316  05A9  0AF4               	incf	delay@j+1,f
  1317  05AA  3000               	movlw	0
  1318  05AB  07F4               	addwf	delay@j+1,f
  1319  05AC  2D9A               	goto	l23
  1320  05AD                     __end_of_delay:	
  1321  007E                     btemp	set	126	;btemp
  1322  007E                     wtemp	set	126
  1323  007E                     wtemp0	set	126
  1324  0080                     wtemp1	set	128
  1325  0082                     wtemp2	set	130
  1326  0084                     wtemp3	set	132
  1327  0086                     wtemp4	set	134
  1328  0088                     wtemp5	set	136
  1329  007F                     wtemp6	set	127
  1330  007E                     ttemp	set	126
  1331  007E                     ttemp0	set	126
  1332  0081                     ttemp1	set	129
  1333  0084                     ttemp2	set	132
  1334  0087                     ttemp3	set	135
  1335  007F                     ttemp4	set	127
  1336  007E                     ltemp	set	126
  1337  007E                     ltemp0	set	126
  1338  0082                     ltemp1	set	130
  1339  0086                     ltemp2	set	134
  1340  0080                     ltemp3	set	128


Data Sizes:
    Strings     0
    Constant    45
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     13      13
    BANK0            80     14      14
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    readKey@rowCount	PTR int  size(1) Largest target is 2
		 -> main@rowCount(BANK0[2]), 


Critical Paths under _main in COMMON

    _readKey->___wmul
    _dataCtrl->_delay
    ___wmul->___awdiv
    _instCtrl->___wmul

Critical Paths under _main in BANK0

    _main->_readKey
    _readKey->_instCtrl
    _initLCD->_instCtrl
    _instCtrl->___wmul

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    3867
                                             12 BANK0      2     2      0
                            _initLCD
                            _readKey
 ---------------------------------------------------------------------------------
 (1) _readKey                                              8     8      0    2611
                                              4 BANK0      8     8      0
                            ___awdiv
                            ___awmod
                             ___wmul
                           _dataCtrl
                           _instCtrl
 ---------------------------------------------------------------------------------
 (2) _dataCtrl                                             1     1      0     439
                                              5 COMMON     1     1      0
                              _delay
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     198
                                              9 COMMON     4     0      4
                                              0 BANK0      2     2      0
                            ___awdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              7     3      4     508
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     406
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (1) _initLCD                                              0     0      0    1227
                              _delay
                           _instCtrl
 ---------------------------------------------------------------------------------
 (2) _instCtrl                                             2     0      2     810
                                              2 BANK0      2     0      2
                            ___awdiv (ARG)
                             ___wmul (ARG)
                              _delay
 ---------------------------------------------------------------------------------
 (3) _delay                                                5     3      2     417
                                              0 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _initLCD
     _delay
     _instCtrl
       ___awdiv (ARG)
       ___wmul (ARG)
         ___awdiv (ARG)
       _delay (ARG)
   _readKey
     ___awdiv
     ___awmod
     ___wmul
       ___awdiv (ARG)
     _dataCtrl
       _delay
     _instCtrl
       ___awdiv (ARG)
       ___wmul (ARG)
         ___awdiv (ARG)
       _delay (ARG)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      D       D       1       92.9%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      E       E       5       17.5%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V1.33 build 59893 
Symbol Table                                                                                   Wed Feb 07 21:07:48 2024

                      pc 0002                       l23 059A             ___awdiv@sign 0076  
                     fsr 0004      ___wmul@multiplicand 007B                      l134 0609  
                    l701 05FF                      l803 0748                      l725 06EF  
                    l813 07EA                      l751 072E                      l743 071B  
                    l735 06F7                      l719 06E4                      l807 076F  
                    l737 0705                      l809 077E                      l747 0726  
                    l763 0697                      l835 05C8                      l781 06C0  
                    l775 06A4                      l767 069E                      l777 06B2  
                    l785 06CB                      l789 06D3                      _RD4 0044  
                    u315 05A4                      u415 0706                      u335 060A  
                    u425 0712                      u345 0611                      u435 071C  
                    u515 06B8                      u525 06C1                      u395 06FA  
                    u565 075F                      u495 06A7          readKey@rowCount 002B  
                    fsr0 0004                      indf 0000             ___awmod@sign 0076  
   dataCtrl@data_inst_in 0075                     _main 05AD                     btemp 007E  
                   ltemp 007E                     start 0000                     ttemp 007E  
                   wtemp 007E                    ?_main 0070          __end_of___awdiv 0735  
        __end_of___awmod 06DA          ___awdiv@divisor 0070          ___awdiv@counter 0075  
                  _PORTB 0006                    _PORTC 0007                    _PORTD 0008  
                  _TRISB 0086                    _TRISC 0087                    _TRISD 0088  
        __end_of_initLCD 068D                    _delay 0598          __end_of_readKey 07FC  
           main@rowCount 002C                    pclath 000A                    ltemp0 007E  
                  ltemp1 0082                    ltemp2 0086                    ltemp3 0080  
                  ttemp0 007E                    ttemp1 0081                    ttemp2 0084  
                  ttemp3 0087                    ttemp4 007F                    status 0003  
                  wtemp0 007E                    wtemp1 0080                    wtemp2 0082  
                  wtemp3 0084                    wtemp4 0086                    wtemp5 0088  
                  wtemp6 007F          __initialization 07FC             __end_of_main 05D3  
                 ??_main 007D                   ?_delay 0070         ___awdiv@dividend 0072  
            readKey@bits 0027         __end_of_dataCtrl 064E         __end_of_keyCodes 0027  
                 ___wmul 05FB                ??___awdiv 0074                ??___awmod 0074  
                 _keyMap 0027                   delay@j 0073         ___awdiv@quotient 0077  
        ___awmod@divisor 0070         __end_of_instCtrl 05FB          ___awmod@counter 0075  
              ??_initLCD 007D                ??_readKey 0024  __end_of__initialization 07FC  
         __pcstackCOMMON 0070            __end_of_delay 05AD                  ??_delay 0072  
             __pmaintext 05AD                  ?___wmul 0079                ?_dataCtrl 0070  
             __stringtab 0003                ?_instCtrl 0022                  ___awdiv 06DA  
                ___awmod 068D          __size_of___wmul 0029                  __ptext1 0735  
                __ptext2 0624                  __ptext3 05FB                  __ptext4 068D  
                __ptext5 06DA                  __ptext6 064E                  __ptext7 05D3  
                __ptext8 0598                  _initLCD 064E                  _readKey 0735  
             ??_dataCtrl 0075         ___awmod@dividend 0072     end_of_initialization 07FC  
             ??_instCtrl 007D           __end_of___wmul 0624           __end_of_keyMap 0036  
    start_initialization 07FC                 ??___wmul 007D                ___latbits 0002  
          __pcstackBANK0 0020        __size_of_dataCtrl 002A        __size_of_instCtrl 0028  
               ?___awdiv 0070                 ?___awmod 0070                __pstrings 0003  
               ?_initLCD 0070                 ?_readKey 0070           __size_of_delay 0015  
         ___wmul@product 0020              __stringbase 0008        ___wmul@multiplier 0079  
       __size_of___awdiv 005B         __size_of___awmod 004D       __end_of__stringtab 0009  
               _dataCtrl 0624         __size_of_initLCD 003F         __size_of_readKey 00C7  
               _keyCodes 0009            __size_of_main 0026                 _instCtrl 05D3  
            delay@timeIn 0070   instCtrl@instruction_in 0022                 readKey@i 0029  
              stringcode 0003               _OPTION_REG 0081                 stringdir 0003  
               stringtab 0003  



Microchip Technology PIC LITE Macro Assembler V1.33 build 59893 
                                                                                               Wed Feb 21 07:48:36 2024

Microchip Technology Omniscient Code Generator (Lite mode) build 59893
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	text0,local,class=CODE,merge=1,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2
    12                           	psect	text4,local,class=CODE,merge=1,delta=2
    13                           	psect	text5,local,class=CODE,merge=1,delta=2
    14                           	psect	text6,local,class=CODE,merge=1,delta=2
    15                           	dabs	1,0x7E,2
    16  0000                     	;# 
    17  0001                     	;# 
    18  0002                     	;# 
    19  0003                     	;# 
    20  0004                     	;# 
    21  0005                     	;# 
    22  0006                     	;# 
    23  0007                     	;# 
    24  0008                     	;# 
    25  0009                     	;# 
    26  000A                     	;# 
    27  000B                     	;# 
    28  000C                     	;# 
    29  000D                     	;# 
    30  000E                     	;# 
    31  000E                     	;# 
    32  000F                     	;# 
    33  0010                     	;# 
    34  0011                     	;# 
    35  0012                     	;# 
    36  0013                     	;# 
    37  0014                     	;# 
    38  0015                     	;# 
    39  0015                     	;# 
    40  0016                     	;# 
    41  0017                     	;# 
    42  0018                     	;# 
    43  0019                     	;# 
    44  001A                     	;# 
    45  001B                     	;# 
    46  001B                     	;# 
    47  001C                     	;# 
    48  001D                     	;# 
    49  001E                     	;# 
    50  001F                     	;# 
    51  0081                     	;# 
    52  0085                     	;# 
    53  0086                     	;# 
    54  0087                     	;# 
    55  0088                     	;# 
    56  0089                     	;# 
    57  008C                     	;# 
    58  008D                     	;# 
    59  008E                     	;# 
    60  0091                     	;# 
    61  0092                     	;# 
    62  0093                     	;# 
    63  0094                     	;# 
    64  0098                     	;# 
    65  0099                     	;# 
    66  009C                     	;# 
    67  009D                     	;# 
    68  009E                     	;# 
    69  009F                     	;# 
    70  010C                     	;# 
    71  010D                     	;# 
    72  010E                     	;# 
    73  010F                     	;# 
    74  018C                     	;# 
    75  018D                     	;# 
    76  0006                     _PORTB	set	6
    77  0007                     _PORTCbits	set	7
    78  0008                     _PORTD	set	8
    79  0044                     _RD4	set	68
    80  0086                     _TRISB	set	134
    81  0087                     _TRISC	set	135
    82  0088                     _TRISD	set	136
    83                           
    84                           	psect	text0
    85  0000                     __ptext0:	
    86                           ; #config settings
    87                           
    88                           
    89                           ;psect for function ___awmod
    90  0000                     
    91                           	psect	cinit
    92  07FC                     start_initialization:	
    93  07FC                     __initialization:	
    94  07FC                     end_of_initialization:	
    95                           ;End of C runtime variable initialization code
    96                           
    97  07FC                     __end_of__initialization:	
    98  07FC  0183               	clrf	3
    99  07FD  120A  118A  2EF0   	ljmp	_main	;jump to C main() function
   100                           
   101                           	psect	cstackCOMMON
   102  0070                     __pcstackCOMMON:	
   103  0070                     ?_delay:	
   104  0070                     ?_instCtrl:	
   105                           ; 0 bytes @ 0x0
   106                           
   107  0070                     ??_instCtrl:	
   108                           ; 0 bytes @ 0x0
   109                           
   110  0070                     ?_dataCtrl:	
   111                           ; 0 bytes @ 0x0
   112                           
   113  0070                     ??_dataCtrl:	
   114                           ; 0 bytes @ 0x0
   115                           
   116  0070                     ?_initLCD:	
   117                           ; 0 bytes @ 0x0
   118                           
   119  0070                     ?_main:	
   120                           ; 0 bytes @ 0x0
   121                           
   122  0070                     ?___awmod:	
   123                           ; 0 bytes @ 0x0
   124                           
   125  0070                     delay@timeIn:	
   126                           ; 2 bytes @ 0x0
   127                           
   128  0070                     ___awmod@divisor:	
   129                           ; 2 bytes @ 0x0
   130                           
   131                           
   132                           ; 2 bytes @ 0x0
   133  0070                     	ds	2
   134  0072                     ??_delay:	
   135  0072                     instCtrl@dataIn:	
   136                           ; 0 bytes @ 0x2
   137                           
   138  0072                     dataCtrl@dataIn:	
   139                           ; 1 bytes @ 0x2
   140                           
   141  0072                     ___awmod@dividend:	
   142                           ; 1 bytes @ 0x2
   143                           
   144                           
   145                           ; 2 bytes @ 0x2
   146  0072                     	ds	1
   147  0073                     ?_readKey:	
   148  0073                     delay@j:	
   149                           ; 2 bytes @ 0x3
   150                           
   151                           
   152                           ; 2 bytes @ 0x3
   153  0073                     	ds	1
   154  0074                     ??___awmod:	
   155                           
   156                           ; 0 bytes @ 0x4
   157  0074                     	ds	1
   158  0075                     ??_initLCD:	
   159  0075                     ??_readKey:	
   160                           ; 0 bytes @ 0x5
   161                           
   162  0075                     ___awmod@counter:	
   163                           ; 0 bytes @ 0x5
   164                           
   165                           
   166                           ; 1 bytes @ 0x5
   167  0075                     	ds	1
   168  0076                     ___awmod@sign:	
   169                           
   170                           ; 1 bytes @ 0x6
   171  0076                     	ds	1
   172  0077                     readKey@charCount:	
   173                           
   174                           ; 1 bytes @ 0x7
   175  0077                     	ds	1
   176  0078                     readKey@bits:	
   177                           
   178                           ; 2 bytes @ 0x8
   179  0078                     	ds	2
   180  007A                     readKey@isValidKey:	
   181                           
   182                           ; 2 bytes @ 0xA
   183  007A                     	ds	2
   184  007C                     ??_main:	
   185                           
   186                           	psect	cstackBANK0
   187  0020                     __pcstackBANK0:	
   188                           ; 0 bytes @ 0xC
   189                           
   190  0020                     main@isValidKey:	
   191                           
   192                           ; 2 bytes @ 0x0
   193  0020                     	ds	2
   194  0022                     main@charCount:	
   195                           
   196                           ; 2 bytes @ 0x2
   197  0022                     	ds	2
   198                           
   199                           	psect	maintext
   200  06F0                     __pmaintext:	
   201 ;;
   202 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   203 ;;
   204 ;; *************** function _main *****************
   205 ;; Defined at:
   206 ;;		line 130 in file "C:\Users\notjo\OneDrive\Desktop\USC\USC-Year3-Sem2\3201-EmbeddedSystems\Labs\LE_02\LE2-3\LE2-3.c"
   207 ;; Parameters:    Size  Location     Type
   208 ;;		None
   209 ;; Auto vars:     Size  Location     Type
   210 ;;  isValidKey      2    0[BANK0 ] int 
   211 ;;  charCount       2    2[BANK0 ] int 
   212 ;; Return value:  Size  Location     Type
   213 ;;		None               void
   214 ;; Registers used:
   215 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   216 ;; Tracked objects:
   217 ;;		On entry : 17F/0
   218 ;;		On exit  : 0/0
   219 ;;		Unchanged: 0/0
   220 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   221 ;;      Params:         0       0       0       0       0
   222 ;;      Locals:         0       4       0       0       0
   223 ;;      Temps:          0       0       0       0       0
   224 ;;      Totals:         0       4       0       0       0
   225 ;;Total ram usage:        4 bytes
   226 ;; Hardware stack levels required when called:    2
   227 ;; This function calls:
   228 ;;		___awmod
   229 ;;		_initLCD
   230 ;;		_instCtrl
   231 ;;		_readKey
   232 ;; This function is called by:
   233 ;;		Startup code after reset
   234 ;; This function uses a non-reentrant model
   235 ;;
   236                           
   237                           
   238                           ;psect for function _main
   239  06F0                     _main:	
   240                           
   241                           ;LE2-3.c: 132: int charCount = 0;
   242                           
   243                           ;incstack = 0
   244                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   245  06F0  1283               	bcf	3,5	;RP0=0, select bank0
   246  06F1  1303               	bcf	3,6	;RP1=0, select bank0
   247  06F2  01A2               	clrf	main@charCount
   248  06F3  01A3               	clrf	main@charCount+1
   249                           
   250                           ;LE2-3.c: 133: TRISB = 0x00;
   251  06F4  1683               	bsf	3,5	;RP0=1, select bank1
   252  06F5  1303               	bcf	3,6	;RP1=0, select bank1
   253  06F6  0186               	clrf	6	;volatile
   254                           
   255                           ;LE2-3.c: 134: TRISC = 0x00;
   256  06F7  0187               	clrf	7	;volatile
   257                           
   258                           ;LE2-3.c: 135: TRISD = 0xFF;
   259  06F8  30FF               	movlw	255
   260  06F9  0088               	movwf	8	;volatile
   261                           
   262                           ;LE2-3.c: 137: initLCD();
   263  06FA  120A  118A  267D  120A  118A  	fcall	_initLCD
   264  06FF                     l803:	
   265                           ;LE2-3.c: 138: while (1)
   266                           
   267                           
   268                           ;LE2-3.c: 139: {
   269                           ;LE2-3.c: 140: if (RD4 == 1)
   270  06FF  1283               	bcf	3,5	;RP0=0, select bank0
   271  0700  1303               	bcf	3,6	;RP1=0, select bank0
   272  0701  1E08               	btfss	8,4	;volatile
   273  0702  2EFF               	goto	l803
   274                           
   275                           ;LE2-3.c: 141: {
   276                           ;LE2-3.c: 142: int isValidKey = readKey(&charCount);
   277  0703  3022               	movlw	main@charCount& (0+255)
   278  0704  120A  118A  2765  120A  118A  	fcall	_readKey
   279  0709  0874               	movf	?_readKey+1,w
   280  070A  1283               	bcf	3,5	;RP0=0, select bank0
   281  070B  1303               	bcf	3,6	;RP1=0, select bank0
   282  070C  01A1               	clrf	main@isValidKey+1
   283  070D  07A1               	addwf	main@isValidKey+1,f
   284  070E  0873               	movf	?_readKey,w
   285  070F  01A0               	clrf	main@isValidKey
   286  0710  07A0               	addwf	main@isValidKey,f
   287                           
   288                           ;LE2-3.c: 143: if (isValidKey)
   289  0711  0821               	movf	main@isValidKey+1,w
   290  0712  0420               	iorwf	main@isValidKey,w
   291  0713  1903               	skipnz
   292  0714  2EFF               	goto	l803
   293                           
   294                           ;LE2-3.c: 144: {
   295                           ;LE2-3.c: 145: charCount += 1;
   296  0715  3001               	movlw	1
   297  0716  07A2               	addwf	main@charCount,f
   298  0717  1803               	skipnc
   299  0718  0AA3               	incf	main@charCount+1,f
   300  0719  3000               	movlw	0
   301  071A  07A3               	addwf	main@charCount+1,f
   302                           
   303                           ;LE2-3.c: 146: if (charCount % 20 == 0)
   304  071B  3014               	movlw	20
   305  071C  00F0               	movwf	___awmod@divisor
   306  071D  3000               	movlw	0
   307  071E  00F1               	movwf	___awmod@divisor+1
   308  071F  0823               	movf	main@charCount+1,w
   309  0720  01F3               	clrf	___awmod@dividend+1
   310  0721  07F3               	addwf	___awmod@dividend+1,f
   311  0722  0822               	movf	main@charCount,w
   312  0723  01F2               	clrf	___awmod@dividend
   313  0724  07F2               	addwf	___awmod@dividend,f
   314  0725  120A  118A  26A3  120A  118A  	fcall	___awmod
   315  072A  0871               	movf	?___awmod+1,w
   316  072B  0470               	iorwf	?___awmod,w
   317  072C  1D03               	skipz
   318  072D  2F4D               	goto	l825
   319                           
   320                           ;LE2-3.c: 147: {
   321                           ;LE2-3.c: 148: if (charCount == 20)
   322  072E  3014               	movlw	20
   323  072F  1283               	bcf	3,5	;RP0=0, select bank0
   324  0730  1303               	bcf	3,6	;RP1=0, select bank0
   325  0731  0622               	xorwf	main@charCount,w
   326  0732  0423               	iorwf	main@charCount+1,w
   327  0733  1D03               	skipz
   328  0734  2F37               	goto	l817
   329                           
   330                           ;LE2-3.c: 149: instCtrl(0xC0);
   331  0735  30C0               	movlw	192
   332  0736  2F48               	goto	L1
   333  0737                     l817:	
   334                           
   335                           ;LE2-3.c: 150: else if (charCount == 40)
   336  0737  3028               	movlw	40
   337  0738  1283               	bcf	3,5	;RP0=0, select bank0
   338  0739  1303               	bcf	3,6	;RP1=0, select bank0
   339  073A  0622               	xorwf	main@charCount,w
   340  073B  0423               	iorwf	main@charCount+1,w
   341  073C  1D03               	skipz
   342  073D  2F40               	goto	l821
   343                           
   344                           ;LE2-3.c: 151: instCtrl(0x94);
   345  073E  3094               	movlw	148
   346  073F  2F48               	goto	L1
   347  0740                     l821:	
   348                           
   349                           ;LE2-3.c: 152: else if (charCount == 60)
   350  0740  303C               	movlw	60
   351  0741  1283               	bcf	3,5	;RP0=0, select bank0
   352  0742  1303               	bcf	3,6	;RP1=0, select bank0
   353  0743  0622               	xorwf	main@charCount,w
   354  0744  0423               	iorwf	main@charCount+1,w
   355  0745  1D03               	skipz
   356  0746  2F4D               	goto	l825
   357                           
   358                           ;LE2-3.c: 153: instCtrl(0xD4);
   359  0747  30D4               	movlw	212
   360  0748                     L1:	
   361  0748  120A  118A  2640  120A  118A  	fcall	_instCtrl
   362  074D                     l825:	
   363                           
   364                           ;LE2-3.c: 154: }
   365                           ;LE2-3.c: 155: if (charCount > 80)
   366  074D  1283               	bcf	3,5	;RP0=0, select bank0
   367  074E  1303               	bcf	3,6	;RP1=0, select bank0
   368  074F  0823               	movf	main@charCount+1,w
   369  0750  3A80               	xorlw	128
   370  0751  00FF               	movwf	127
   371  0752  3080               	movlw	128
   372  0753  027F               	subwf	127,w
   373  0754  1D03               	skipz
   374  0755  2F58               	goto	u365
   375  0756  3051               	movlw	81
   376  0757  0222               	subwf	main@charCount,w
   377  0758                     u365:	
   378  0758  1C03               	skipc
   379  0759  2EFF               	goto	l803
   380                           
   381                           ;LE2-3.c: 156: {
   382                           ;LE2-3.c: 157: instCtrl(0x01);
   383  075A  3001               	movlw	1
   384  075B  120A  118A  2640  120A  118A  	fcall	_instCtrl
   385                           
   386                           ;LE2-3.c: 158: charCount = 0;
   387  0760  1283               	bcf	3,5	;RP0=0, select bank0
   388  0761  1303               	bcf	3,6	;RP1=0, select bank0
   389  0762  01A2               	clrf	main@charCount
   390  0763  01A3               	clrf	main@charCount+1
   391  0764  2EFF               	goto	l803
   392  0765                     __end_of_main:	
   393                           
   394                           	psect	text1
   395  0765                     __ptext1:	
   396 ;; *************** function _readKey *****************
   397 ;; Defined at:
   398 ;;		line 81 in file "C:\Users\notjo\OneDrive\Desktop\USC\USC-Year3-Sem2\3201-EmbeddedSystems\Labs\LE_02\LE2-3\LE2-3.c"
   399 ;; Parameters:    Size  Location     Type
   400 ;;  charCount       1    wreg     PTR int 
   401 ;;		 -> main@charCount(2), 
   402 ;; Auto vars:     Size  Location     Type
   403 ;;  charCount       1    7[COMMON] PTR int 
   404 ;;		 -> main@charCount(2), 
   405 ;;  isValidKey      2   10[COMMON] int 
   406 ;;  bits            2    8[COMMON] int 
   407 ;; Return value:  Size  Location     Type
   408 ;;                  2    3[COMMON] int 
   409 ;; Registers used:
   410 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   411 ;; Tracked objects:
   412 ;;		On entry : 0/0
   413 ;;		On exit  : 0/0
   414 ;;		Unchanged: 0/0
   415 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   416 ;;      Params:         2       0       0       0       0
   417 ;;      Locals:         5       0       0       0       0
   418 ;;      Temps:          2       0       0       0       0
   419 ;;      Totals:         9       0       0       0       0
   420 ;;Total ram usage:        9 bytes
   421 ;; Hardware stack levels used:    1
   422 ;; Hardware stack levels required when called:    1
   423 ;; This function calls:
   424 ;;		_dataCtrl
   425 ;; This function is called by:
   426 ;;		_main
   427 ;; This function uses a non-reentrant model
   428 ;;
   429                           
   430                           
   431                           ;psect for function _readKey
   432  0765                     _readKey:	
   433                           
   434                           ;LE2-3.c: 83: int isValidKey = 1;
   435                           
   436                           ;incstack = 0
   437                           ; Regs used in _readKey: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   438  0765  3001               	movlw	1
   439  0766  00FA               	movwf	readKey@isValidKey
   440  0767  3000               	movlw	0
   441  0768  00FB               	movwf	readKey@isValidKey+1
   442                           
   443                           ;LE2-3.c: 84: int bits = PORTD;
   444  0769  1283               	bcf	3,5	;RP0=0, select bank0
   445  076A  1303               	bcf	3,6	;RP1=0, select bank0
   446  076B  0808               	movf	8,w	;volatile
   447  076C  00F5               	movwf	??_readKey
   448  076D  01F6               	clrf	??_readKey+1
   449  076E  0875               	movf	??_readKey,w
   450  076F  00F8               	movwf	readKey@bits
   451  0770  0876               	movf	??_readKey+1,w
   452  0771  00F9               	movwf	readKey@bits+1
   453                           
   454                           ;LE2-3.c: 85: switch (bits)
   455  0772  2FCA               	goto	l741
   456  0773                     l713:	
   457                           ;LE2-3.c: 86: {
   458                           ;LE2-3.c: 87: case KEY_0:
   459                           
   460                           
   461                           ;LE2-3.c: 88: dataCtrl('0');
   462  0773  3030               	movlw	48
   463  0774  120A  118A  2654  120A  118A  	fcall	_dataCtrl
   464                           
   465                           ;LE2-3.c: 89: break;
   466  0779  2FF5               	goto	l743
   467  077A                     l715:	
   468                           ;LE2-3.c: 90: case KEY_1:
   469                           
   470                           
   471                           ;LE2-3.c: 91: dataCtrl('1');
   472  077A  3031               	movlw	49
   473  077B  120A  118A  2654  120A  118A  	fcall	_dataCtrl
   474                           
   475                           ;LE2-3.c: 92: break;
   476  0780  2FF5               	goto	l743
   477  0781                     l717:	
   478                           ;LE2-3.c: 93: case KEY_2:
   479                           
   480                           
   481                           ;LE2-3.c: 94: dataCtrl('2');
   482  0781  3032               	movlw	50
   483  0782  120A  118A  2654  120A  118A  	fcall	_dataCtrl
   484                           
   485                           ;LE2-3.c: 95: break;
   486  0787  2FF5               	goto	l743
   487  0788                     l719:	
   488                           ;LE2-3.c: 96: case KEY_3:
   489                           
   490                           
   491                           ;LE2-3.c: 97: dataCtrl('3');
   492  0788  3033               	movlw	51
   493  0789  120A  118A  2654  120A  118A  	fcall	_dataCtrl
   494                           
   495                           ;LE2-3.c: 98: break;
   496  078E  2FF5               	goto	l743
   497  078F                     l721:	
   498                           ;LE2-3.c: 99: case KEY_4:
   499                           
   500                           
   501                           ;LE2-3.c: 100: dataCtrl('4');
   502  078F  3034               	movlw	52
   503  0790  120A  118A  2654  120A  118A  	fcall	_dataCtrl
   504                           
   505                           ;LE2-3.c: 101: break;
   506  0795  2FF5               	goto	l743
   507  0796                     l723:	
   508                           ;LE2-3.c: 102: case KEY_5:
   509                           
   510                           
   511                           ;LE2-3.c: 103: dataCtrl('5');
   512  0796  3035               	movlw	53
   513  0797  120A  118A  2654  120A  118A  	fcall	_dataCtrl
   514                           
   515                           ;LE2-3.c: 104: break;
   516  079C  2FF5               	goto	l743
   517  079D                     l725:	
   518                           ;LE2-3.c: 105: case KEY_6:
   519                           
   520                           
   521                           ;LE2-3.c: 106: dataCtrl('6');
   522  079D  3036               	movlw	54
   523  079E  120A  118A  2654  120A  118A  	fcall	_dataCtrl
   524                           
   525                           ;LE2-3.c: 107: break;
   526  07A3  2FF5               	goto	l743
   527  07A4                     l727:	
   528                           ;LE2-3.c: 108: case KEY_7:
   529                           
   530                           
   531                           ;LE2-3.c: 109: dataCtrl('7');
   532  07A4  3037               	movlw	55
   533  07A5  120A  118A  2654  120A  118A  	fcall	_dataCtrl
   534                           
   535                           ;LE2-3.c: 110: break;
   536  07AA  2FF5               	goto	l743
   537  07AB                     l729:	
   538                           ;LE2-3.c: 111: case KEY_8:
   539                           
   540                           
   541                           ;LE2-3.c: 112: dataCtrl('8');
   542  07AB  3038               	movlw	56
   543  07AC  120A  118A  2654  120A  118A  	fcall	_dataCtrl
   544                           
   545                           ;LE2-3.c: 113: break;
   546  07B1  2FF5               	goto	l743
   547  07B2                     l731:	
   548                           ;LE2-3.c: 114: case KEY_9:
   549                           
   550                           
   551                           ;LE2-3.c: 115: dataCtrl('9');
   552  07B2  3039               	movlw	57
   553  07B3  120A  118A  2654  120A  118A  	fcall	_dataCtrl
   554                           
   555                           ;LE2-3.c: 116: break;
   556  07B8  2FF5               	goto	l743
   557  07B9                     l733:	
   558                           ;LE2-3.c: 117: case KEY_HASH:
   559                           
   560                           
   561                           ;LE2-3.c: 118: dataCtrl('#');
   562  07B9  3023               	movlw	35
   563  07BA  120A  118A  2654  120A  118A  	fcall	_dataCtrl
   564                           
   565                           ;LE2-3.c: 119: break;
   566  07BF  2FF5               	goto	l743
   567  07C0                     l735:	
   568                           ;LE2-3.c: 120: case KEY_MULTIPLY:
   569                           
   570                           
   571                           ;LE2-3.c: 121: dataCtrl('*');
   572  07C0  302A               	movlw	42
   573  07C1  120A  118A  2654  120A  118A  	fcall	_dataCtrl
   574                           
   575                           ;LE2-3.c: 122: break;
   576  07C6  2FF5               	goto	l743
   577  07C7                     l737:	
   578                           ;LE2-3.c: 123: default:
   579                           
   580                           
   581                           ;LE2-3.c: 124: isValidKey = 0;
   582  07C7  01FA               	clrf	readKey@isValidKey
   583  07C8  01FB               	clrf	readKey@isValidKey+1
   584                           
   585                           ;LE2-3.c: 126: }
   586                           
   587                           ;LE2-3.c: 125: break;
   588  07C9  2FF5               	goto	l743
   589  07CA                     l741:	
   590                           
   591                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   592                           ; Switch size 1, requested type "space"
   593                           ; Number of cases is 1, Range of values is 0 to 0
   594                           ; switch strategies available:
   595                           ; Name         Instructions Cycles
   596                           ; simple_byte            4     3 (average)
   597                           ; direct_byte           11     8 (fixed)
   598                           ; jumptable            260     6 (fixed)
   599                           ;	Chosen strategy is simple_byte
   600  07CA  0879               	movf	readKey@bits+1,w
   601  07CB  3A00               	xorlw	0	; case 0
   602  07CC  1903               	skipnz
   603  07CD  2FCF               	goto	l851
   604  07CE  2FC7               	goto	l737
   605  07CF                     l851:	
   606                           
   607                           ; Switch size 1, requested type "space"
   608                           ; Number of cases is 12, Range of values is 16 to 30
   609                           ; switch strategies available:
   610                           ; Name         Instructions Cycles
   611                           ; simple_byte           37    19 (average)
   612                           ; direct_byte           56    11 (fixed)
   613                           ; jumptable            263     9 (fixed)
   614                           ;	Chosen strategy is simple_byte
   615  07CF  0878               	movf	readKey@bits,w
   616  07D0  3A10               	xorlw	16	; case 16
   617  07D1  1903               	skipnz
   618  07D2  2F7A               	goto	l715
   619  07D3  3A01               	xorlw	1	; case 17
   620  07D4  1903               	skipnz
   621  07D5  2F81               	goto	l717
   622  07D6  3A03               	xorlw	3	; case 18
   623  07D7  1903               	skipnz
   624  07D8  2F88               	goto	l719
   625  07D9  3A06               	xorlw	6	; case 20
   626  07DA  1903               	skipnz
   627  07DB  2F8F               	goto	l721
   628  07DC  3A01               	xorlw	1	; case 21
   629  07DD  1903               	skipnz
   630  07DE  2F96               	goto	l723
   631  07DF  3A03               	xorlw	3	; case 22
   632  07E0  1903               	skipnz
   633  07E1  2F9D               	goto	l725
   634  07E2  3A0E               	xorlw	14	; case 24
   635  07E3  1903               	skipnz
   636  07E4  2FA4               	goto	l727
   637  07E5  3A01               	xorlw	1	; case 25
   638  07E6  1903               	skipnz
   639  07E7  2FAB               	goto	l729
   640  07E8  3A03               	xorlw	3	; case 26
   641  07E9  1903               	skipnz
   642  07EA  2FB2               	goto	l731
   643  07EB  3A06               	xorlw	6	; case 28
   644  07EC  1903               	skipnz
   645  07ED  2FC0               	goto	l735
   646  07EE  3A01               	xorlw	1	; case 29
   647  07EF  1903               	skipnz
   648  07F0  2F73               	goto	l713
   649  07F1  3A03               	xorlw	3	; case 30
   650  07F2  1903               	skipnz
   651  07F3  2FB9               	goto	l733
   652  07F4  2FC7               	goto	l737
   653  07F5                     l743:	
   654                           
   655                           ;LE2-3.c: 127: return isValidKey;
   656  07F5  087B               	movf	readKey@isValidKey+1,w
   657  07F6  01F4               	clrf	?_readKey+1
   658  07F7  07F4               	addwf	?_readKey+1,f
   659  07F8  087A               	movf	readKey@isValidKey,w
   660  07F9  01F3               	clrf	?_readKey
   661  07FA  07F3               	addwf	?_readKey,f
   662  07FB  0008               	return
   663  07FC                     __end_of_readKey:	
   664                           
   665                           	psect	text2
   666  0654                     __ptext2:	
   667 ;; *************** function _dataCtrl *****************
   668 ;; Defined at:
   669 ;;		line 53 in file "C:\Users\notjo\OneDrive\Desktop\USC\USC-Year3-Sem2\3201-EmbeddedSystems\Labs\LE_02\LE2-3\LE2-3.c"
   670 ;; Parameters:    Size  Location     Type
   671 ;;  dataIn          1    wreg     unsigned char 
   672 ;; Auto vars:     Size  Location     Type
   673 ;;  dataIn          1    2[COMMON] unsigned char 
   674 ;; Return value:  Size  Location     Type
   675 ;;		None               void
   676 ;; Registers used:
   677 ;;		wreg
   678 ;; Tracked objects:
   679 ;;		On entry : 0/0
   680 ;;		On exit  : 0/0
   681 ;;		Unchanged: 0/0
   682 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   683 ;;      Params:         0       0       0       0       0
   684 ;;      Locals:         1       0       0       0       0
   685 ;;      Temps:          2       0       0       0       0
   686 ;;      Totals:         3       0       0       0       0
   687 ;;Total ram usage:        3 bytes
   688 ;; Hardware stack levels used:    1
   689 ;; This function calls:
   690 ;;		Nothing
   691 ;; This function is called by:
   692 ;;		_readKey
   693 ;;		_printStr
   694 ;; This function uses a non-reentrant model
   695 ;;
   696                           
   697                           
   698                           ;psect for function _dataCtrl
   699  0654                     _dataCtrl:	
   700                           
   701                           ;incstack = 0
   702                           ; Regs used in _dataCtrl: [wreg]
   703                           ;dataCtrl@dataIn stored from wreg
   704  0654  00F2               	movwf	dataCtrl@dataIn
   705                           
   706                           ;LE2-3.c: 55: PORTB = dataIn;
   707  0655  0872               	movf	dataCtrl@dataIn,w
   708  0656  1283               	bcf	3,5	;RP0=0, select bank0
   709  0657  1303               	bcf	3,6	;RP1=0, select bank0
   710  0658  0086               	movwf	6	;volatile
   711                           
   712                           ;LE2-3.c: 56: PORTCbits.RC1 = 1;
   713  0659  1487               	bsf	7,1	;volatile
   714                           
   715                           ;LE2-3.c: 57: PORTCbits.RC2 = 1;
   716  065A  1507               	bsf	7,2	;volatile
   717                           
   718                           ;LE2-3.c: 58: _delay((unsigned long)((100)*(4000000/4000.0)));
   719  065B  3082               	movlw	130
   720  065C  00F1               	movwf	??_dataCtrl+1
   721  065D  30DD               	movlw	221
   722  065E  00F0               	movwf	??_dataCtrl
   723  065F                     u377:	
   724  065F  0BF0               	decfsz	??_dataCtrl,f
   725  0660  2E5F               	goto	u377
   726  0661  0BF1               	decfsz	??_dataCtrl+1,f
   727  0662  2E5F               	goto	u377
   728  0663  2E64               	nop2
   729                           
   730                           ;LE2-3.c: 59: PORTCbits.RC2 = 0;
   731  0664  1283               	bcf	3,5	;RP0=0, select bank0
   732  0665  1303               	bcf	3,6	;RP1=0, select bank0
   733  0666  1107               	bcf	7,2	;volatile
   734  0667  0008               	return
   735  0668                     __end_of_dataCtrl:	
   736                           
   737                           	psect	text3
   738  067D                     __ptext3:	
   739 ;; *************** function _initLCD *****************
   740 ;; Defined at:
   741 ;;		line 62 in file "C:\Users\notjo\OneDrive\Desktop\USC\USC-Year3-Sem2\3201-EmbeddedSystems\Labs\LE_02\LE2-3\LE2-3.c"
   742 ;; Parameters:    Size  Location     Type
   743 ;;		None
   744 ;; Auto vars:     Size  Location     Type
   745 ;;		None
   746 ;; Return value:  Size  Location     Type
   747 ;;		None               void
   748 ;; Registers used:
   749 ;;		wreg, status,2, status,0, pclath, cstack
   750 ;; Tracked objects:
   751 ;;		On entry : 0/0
   752 ;;		On exit  : 0/0
   753 ;;		Unchanged: 0/0
   754 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   755 ;;      Params:         0       0       0       0       0
   756 ;;      Locals:         0       0       0       0       0
   757 ;;      Temps:          0       0       0       0       0
   758 ;;      Totals:         0       0       0       0       0
   759 ;;Total ram usage:        0 bytes
   760 ;; Hardware stack levels used:    1
   761 ;; Hardware stack levels required when called:    1
   762 ;; This function calls:
   763 ;;		_delay
   764 ;;		_instCtrl
   765 ;; This function is called by:
   766 ;;		_main
   767 ;; This function uses a non-reentrant model
   768 ;;
   769                           
   770                           
   771                           ;psect for function _initLCD
   772  067D                     _initLCD:	
   773                           
   774                           ;LE2-3.c: 64: delay(100);
   775                           
   776                           ;incstack = 0
   777                           ; Regs used in _initLCD: [wreg+status,2+status,0+pclath+cstack]
   778  067D  3064               	movlw	100
   779  067E  00F0               	movwf	delay@timeIn
   780  067F  3000               	movlw	0
   781  0680  00F1               	movwf	delay@timeIn+1
   782  0681  120A  118A  2668  120A  118A  	fcall	_delay
   783                           
   784                           ;LE2-3.c: 65: instCtrl(0x38);
   785  0686  3038               	movlw	56
   786  0687  120A  118A  2640  120A  118A  	fcall	_instCtrl
   787                           
   788                           ;LE2-3.c: 66: instCtrl(0x08);
   789  068C  3008               	movlw	8
   790  068D  120A  118A  2640  120A  118A  	fcall	_instCtrl
   791                           
   792                           ;LE2-3.c: 67: instCtrl(0x01);
   793  0692  3001               	movlw	1
   794  0693  120A  118A  2640  120A  118A  	fcall	_instCtrl
   795                           
   796                           ;LE2-3.c: 68: instCtrl(0x06);
   797  0698  3006               	movlw	6
   798  0699  120A  118A  2640  120A  118A  	fcall	_instCtrl
   799                           
   800                           ;LE2-3.c: 69: instCtrl(0x0C);
   801  069E  300C               	movlw	12
   802  069F  120A  118A  2640   	fcall	_instCtrl
   803  06A2  0008               	return
   804  06A3                     __end_of_initLCD:	
   805                           
   806                           	psect	text4
   807  0640                     __ptext4:	
   808 ;; *************** function _instCtrl *****************
   809 ;; Defined at:
   810 ;;		line 44 in file "C:\Users\notjo\OneDrive\Desktop\USC\USC-Year3-Sem2\3201-EmbeddedSystems\Labs\LE_02\LE2-3\LE2-3.c"
   811 ;; Parameters:    Size  Location     Type
   812 ;;  dataIn          1    wreg     unsigned char 
   813 ;; Auto vars:     Size  Location     Type
   814 ;;  dataIn          1    2[COMMON] unsigned char 
   815 ;; Return value:  Size  Location     Type
   816 ;;		None               void
   817 ;; Registers used:
   818 ;;		wreg
   819 ;; Tracked objects:
   820 ;;		On entry : 0/0
   821 ;;		On exit  : 0/0
   822 ;;		Unchanged: 0/0
   823 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   824 ;;      Params:         0       0       0       0       0
   825 ;;      Locals:         1       0       0       0       0
   826 ;;      Temps:          2       0       0       0       0
   827 ;;      Totals:         3       0       0       0       0
   828 ;;Total ram usage:        3 bytes
   829 ;; Hardware stack levels used:    1
   830 ;; This function calls:
   831 ;;		Nothing
   832 ;; This function is called by:
   833 ;;		_initLCD
   834 ;;		_main
   835 ;; This function uses a non-reentrant model
   836 ;;
   837                           
   838                           
   839                           ;psect for function _instCtrl
   840  0640                     _instCtrl:	
   841                           
   842                           ;incstack = 0
   843                           ; Regs used in _instCtrl: [wreg]
   844                           ;instCtrl@dataIn stored from wreg
   845  0640  00F2               	movwf	instCtrl@dataIn
   846                           
   847                           ;LE2-3.c: 46: PORTB = dataIn;
   848  0641  0872               	movf	instCtrl@dataIn,w
   849  0642  1283               	bcf	3,5	;RP0=0, select bank0
   850  0643  1303               	bcf	3,6	;RP1=0, select bank0
   851  0644  0086               	movwf	6	;volatile
   852                           
   853                           ;LE2-3.c: 47: PORTCbits.RC1 = 0;
   854  0645  1087               	bcf	7,1	;volatile
   855                           
   856                           ;LE2-3.c: 48: PORTCbits.RC2 = 1;
   857  0646  1507               	bsf	7,2	;volatile
   858                           
   859                           ;LE2-3.c: 49: _delay((unsigned long)((100)*(4000000/4000.0)));
   860  0647  3082               	movlw	130
   861  0648  00F1               	movwf	??_instCtrl+1
   862  0649  30DD               	movlw	221
   863  064A  00F0               	movwf	??_instCtrl
   864  064B                     u387:	
   865  064B  0BF0               	decfsz	??_instCtrl,f
   866  064C  2E4B               	goto	u387
   867  064D  0BF1               	decfsz	??_instCtrl+1,f
   868  064E  2E4B               	goto	u387
   869  064F  2E50               	nop2
   870                           
   871                           ;LE2-3.c: 50: PORTCbits.RC2 = 0;
   872  0650  1283               	bcf	3,5	;RP0=0, select bank0
   873  0651  1303               	bcf	3,6	;RP1=0, select bank0
   874  0652  1107               	bcf	7,2	;volatile
   875  0653  0008               	return
   876  0654                     __end_of_instCtrl:	
   877                           
   878                           	psect	text5
   879  0668                     __ptext5:	
   880 ;; *************** function _delay *****************
   881 ;; Defined at:
   882 ;;		line 39 in file "C:\Users\notjo\OneDrive\Desktop\USC\USC-Year3-Sem2\3201-EmbeddedSystems\Labs\LE_02\LE2-3\LE2-3.c"
   883 ;; Parameters:    Size  Location     Type
   884 ;;  timeIn          2    0[COMMON] int 
   885 ;; Auto vars:     Size  Location     Type
   886 ;;  j               2    3[COMMON] int 
   887 ;; Return value:  Size  Location     Type
   888 ;;		None               void
   889 ;; Registers used:
   890 ;;		wreg, status,2
   891 ;; Tracked objects:
   892 ;;		On entry : 0/0
   893 ;;		On exit  : 0/0
   894 ;;		Unchanged: 0/0
   895 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   896 ;;      Params:         2       0       0       0       0
   897 ;;      Locals:         2       0       0       0       0
   898 ;;      Temps:          1       0       0       0       0
   899 ;;      Totals:         5       0       0       0       0
   900 ;;Total ram usage:        5 bytes
   901 ;; Hardware stack levels used:    1
   902 ;; This function calls:
   903 ;;		Nothing
   904 ;; This function is called by:
   905 ;;		_initLCD
   906 ;; This function uses a non-reentrant model
   907 ;;
   908                           
   909                           
   910                           ;psect for function _delay
   911  0668                     _delay:	
   912                           
   913                           ;LE2-3.c: 41: for (int j = 0; j < timeIn; j++);
   914                           
   915                           ;incstack = 0
   916                           ; Regs used in _delay: [wreg+status,2]
   917  0668  01F3               	clrf	delay@j
   918  0669  01F4               	clrf	delay@j+1
   919  066A                     l19:	
   920  066A  0874               	movf	delay@j+1,w
   921  066B  3A80               	xorlw	128
   922  066C  00F2               	movwf	??_delay
   923  066D  0871               	movf	delay@timeIn+1,w
   924  066E  3A80               	xorlw	128
   925  066F  0272               	subwf	??_delay,w
   926  0670  1D03               	skipz
   927  0671  2E74               	goto	u195
   928  0672  0870               	movf	delay@timeIn,w
   929  0673  0273               	subwf	delay@j,w
   930  0674                     u195:	
   931  0674  1803               	btfsc	3,0
   932  0675  0008               	return
   933  0676  3001               	movlw	1
   934  0677  07F3               	addwf	delay@j,f
   935  0678  1803               	skipnc
   936  0679  0AF4               	incf	delay@j+1,f
   937  067A  3000               	movlw	0
   938  067B  07F4               	addwf	delay@j+1,f
   939  067C  2E6A               	goto	l19
   940  067D                     __end_of_delay:	
   941                           
   942                           	psect	text6
   943  06A3                     __ptext6:	
   944 ;; *************** function ___awmod *****************
   945 ;; Defined at:
   946 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\awmod.c"
   947 ;; Parameters:    Size  Location     Type
   948 ;;  divisor         2    0[COMMON] int 
   949 ;;  dividend        2    2[COMMON] int 
   950 ;; Auto vars:     Size  Location     Type
   951 ;;  sign            1    6[COMMON] unsigned char 
   952 ;;  counter         1    5[COMMON] unsigned char 
   953 ;; Return value:  Size  Location     Type
   954 ;;                  2    0[COMMON] int 
   955 ;; Registers used:
   956 ;;		wreg, status,2, status,0
   957 ;; Tracked objects:
   958 ;;		On entry : 0/0
   959 ;;		On exit  : 0/0
   960 ;;		Unchanged: 0/0
   961 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   962 ;;      Params:         4       0       0       0       0
   963 ;;      Locals:         2       0       0       0       0
   964 ;;      Temps:          1       0       0       0       0
   965 ;;      Totals:         7       0       0       0       0
   966 ;;Total ram usage:        7 bytes
   967 ;; Hardware stack levels used:    1
   968 ;; This function calls:
   969 ;;		Nothing
   970 ;; This function is called by:
   971 ;;		_main
   972 ;; This function uses a non-reentrant model
   973 ;;
   974                           
   975                           
   976                           ;psect for function ___awmod
   977  06A3                     ___awmod:	
   978                           
   979                           ;incstack = 0
   980                           ; Regs used in ___awmod: [wreg+status,2+status,0]
   981  06A3  01F6               	clrf	___awmod@sign
   982  06A4  1FF3               	btfss	___awmod@dividend+1,7
   983  06A5  2EAD               	goto	l759
   984  06A6  09F2               	comf	___awmod@dividend,f
   985  06A7  09F3               	comf	___awmod@dividend+1,f
   986  06A8  0AF2               	incf	___awmod@dividend,f
   987  06A9  1903               	skipnz
   988  06AA  0AF3               	incf	___awmod@dividend+1,f
   989  06AB  01F6               	clrf	___awmod@sign
   990  06AC  0AF6               	incf	___awmod@sign,f
   991  06AD                     l759:	
   992  06AD  1FF1               	btfss	___awmod@divisor+1,7
   993  06AE  2EB4               	goto	l763
   994  06AF  09F0               	comf	___awmod@divisor,f
   995  06B0  09F1               	comf	___awmod@divisor+1,f
   996  06B1  0AF0               	incf	___awmod@divisor,f
   997  06B2  1903               	skipnz
   998  06B3  0AF1               	incf	___awmod@divisor+1,f
   999  06B4                     l763:	
  1000  06B4  0871               	movf	___awmod@divisor+1,w
  1001  06B5  0470               	iorwf	___awmod@divisor,w
  1002  06B6  1903               	skipnz
  1003  06B7  2EE1               	goto	l781
  1004  06B8  01F5               	clrf	___awmod@counter
  1005  06B9  0AF5               	incf	___awmod@counter,f
  1006  06BA                     l771:	
  1007  06BA  1BF1               	btfsc	___awmod@divisor+1,7
  1008  06BB  2EC8               	goto	l773
  1009  06BC  3001               	movlw	1
  1010  06BD                     u235:	
  1011  06BD  1003               	clrc
  1012  06BE  0DF0               	rlf	___awmod@divisor,f
  1013  06BF  0DF1               	rlf	___awmod@divisor+1,f
  1014  06C0  3EFF               	addlw	-1
  1015  06C1  1D03               	skipz
  1016  06C2  2EBD               	goto	u235
  1017  06C3  3001               	movlw	1
  1018  06C4  00F4               	movwf	??___awmod
  1019  06C5  0874               	movf	??___awmod,w
  1020  06C6  07F5               	addwf	___awmod@counter,f
  1021  06C7  2EBA               	goto	l771
  1022  06C8                     l773:	
  1023  06C8  0871               	movf	___awmod@divisor+1,w
  1024  06C9  0273               	subwf	___awmod@dividend+1,w
  1025  06CA  1D03               	skipz
  1026  06CB  2ECE               	goto	u255
  1027  06CC  0870               	movf	___awmod@divisor,w
  1028  06CD  0272               	subwf	___awmod@dividend,w
  1029  06CE                     u255:	
  1030  06CE  1C03               	skipc
  1031  06CF  2ED6               	goto	l777
  1032  06D0  0870               	movf	___awmod@divisor,w
  1033  06D1  02F2               	subwf	___awmod@dividend,f
  1034  06D2  0871               	movf	___awmod@divisor+1,w
  1035  06D3  1C03               	skipc
  1036  06D4  03F3               	decf	___awmod@dividend+1,f
  1037  06D5  02F3               	subwf	___awmod@dividend+1,f
  1038  06D6                     l777:	
  1039  06D6  3001               	movlw	1
  1040  06D7                     u265:	
  1041  06D7  1003               	clrc
  1042  06D8  0CF1               	rrf	___awmod@divisor+1,f
  1043  06D9  0CF0               	rrf	___awmod@divisor,f
  1044  06DA  3EFF               	addlw	-1
  1045  06DB  1D03               	skipz
  1046  06DC  2ED7               	goto	u265
  1047  06DD  3001               	movlw	1
  1048  06DE  02F5               	subwf	___awmod@counter,f
  1049  06DF  1D03               	btfss	3,2
  1050  06E0  2EC8               	goto	l773
  1051  06E1                     l781:	
  1052  06E1  0876               	movf	___awmod@sign,w
  1053  06E2  1903               	btfsc	3,2
  1054  06E3  2EE9               	goto	l785
  1055  06E4  09F2               	comf	___awmod@dividend,f
  1056  06E5  09F3               	comf	___awmod@dividend+1,f
  1057  06E6  0AF2               	incf	___awmod@dividend,f
  1058  06E7  1903               	skipnz
  1059  06E8  0AF3               	incf	___awmod@dividend+1,f
  1060  06E9                     l785:	
  1061  06E9  0873               	movf	___awmod@dividend+1,w
  1062  06EA  01F1               	clrf	?___awmod+1
  1063  06EB  07F1               	addwf	?___awmod+1,f
  1064  06EC  0872               	movf	___awmod@dividend,w
  1065  06ED  01F0               	clrf	?___awmod
  1066  06EE  07F0               	addwf	?___awmod,f
  1067  06EF  0008               	return
  1068  06F0                     __end_of___awmod:	
  1069  007E                     btemp	set	126	;btemp
  1070  007E                     wtemp	set	126
  1071  007E                     wtemp0	set	126
  1072  0080                     wtemp1	set	128
  1073  0082                     wtemp2	set	130
  1074  0084                     wtemp3	set	132
  1075  0086                     wtemp4	set	134
  1076  0088                     wtemp5	set	136
  1077  007F                     wtemp6	set	127
  1078  007E                     ttemp	set	126
  1079  007E                     ttemp0	set	126
  1080  0081                     ttemp1	set	129
  1081  0084                     ttemp2	set	132
  1082  0087                     ttemp3	set	135
  1083  007F                     ttemp4	set	127
  1084  007E                     ltemp	set	126
  1085  007E                     ltemp0	set	126
  1086  0082                     ltemp1	set	130
  1087  0086                     ltemp2	set	134
  1088  0080                     ltemp3	set	128


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     12      12
    BANK0            80      4       4
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    readKey@charCount	PTR int  size(1) Largest target is 2
		 -> main@charCount(BANK0[2]), 


Critical Paths under _main in COMMON

    _main->_readKey
    _readKey->_dataCtrl
    _initLCD->_delay

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0     799
                                              0 BANK0      4     4      0
                            ___awmod
                            _initLCD
                           _instCtrl
                            _readKey
 ---------------------------------------------------------------------------------
 (1) _readKey                                              9     7      2      96
                                              3 COMMON     9     7      2
                           _dataCtrl
 ---------------------------------------------------------------------------------
 (2) _dataCtrl                                             3     3      0      22
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _initLCD                                              0     0      0     121
                              _delay
                           _instCtrl
 ---------------------------------------------------------------------------------
 (1) _instCtrl                                             3     3      0      22
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (2) _delay                                                5     3      2      99
                                              0 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 (1) ___awmod                                              7     3      4     402
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___awmod
   _initLCD
     _delay
     _instCtrl
   _instCtrl
   _readKey
     _dataCtrl

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      C       C       1       85.7%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      4       4       5        5.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V1.33 build 59893 
Symbol Table                                                                                   Wed Feb 21 07:48:36 2024

            __CFG_CP$OFF 0000                       l19 066A                      l721 078F  
                    l713 0773                      l731 07B2                      l723 0796  
                    l715 077A                      l803 06FF                      l733 07B9  
                    l725 079D                      l717 0781                      l741 07CA  
                    l821 0740                      l735 07C0                      l727 07A4  
                    l719 0788                      l743 07F5                      l737 07C7  
                    l729 07AB                      l817 0737                      l825 074D  
                    l771 06BA                      l763 06B4                      l851 07CF  
                    l773 06C8                      l781 06E1                      l759 06AD  
                    l785 06E9                      l777 06D6                      _RD4 0044  
                    u235 06BD                      u255 06CE                      u265 06D7  
           __CFG_CPD$OFF 0000                      u195 0674                      u365 0758  
                    u377 065F                      u387 064B             ___awmod@sign 0076  
           __CFG_FOSC$XT 0000             __CFG_LVP$OFF 0000           instCtrl@dataIn 0072  
           __CFG_WRT$OFF 0000                     _main 06F0                     btemp 007E  
          __CFG_BOREN$ON 0000                     ltemp 007E                     start 0000  
                   ttemp 007E                     wtemp 007E                    ?_main 0070  
          __CFG_WDTE$OFF 0000          __end_of___awmod 06F0                    _PORTB 0006  
                  _PORTD 0008                    _TRISB 0086                    _TRISC 0087  
                  _TRISD 0088            __CFG_PWRTE$ON 0000          __end_of_initLCD 06A3  
                  _delay 0668          __end_of_readKey 07FC                    ltemp0 007E  
                  ltemp1 0082                    ltemp2 0086                    ltemp3 0080  
                  ttemp0 007E                    ttemp1 0081                    ttemp2 0084  
                  ttemp3 0087                    ttemp4 007F                    status 0003  
                  wtemp0 007E                    wtemp1 0080                    wtemp2 0082  
                  wtemp3 0084                    wtemp4 0086                    wtemp5 0088  
                  wtemp6 007F          __initialization 07FC            main@charCount 0022  
           __end_of_main 0765                   ??_main 007C                   ?_delay 0070  
            readKey@bits 0078         __end_of_dataCtrl 0668                ??___awmod 0074  
                 delay@j 0073          ___awmod@divisor 0070         __end_of_instCtrl 0654  
        ___awmod@counter 0075                ??_initLCD 0075                ??_readKey 0075  
__end_of__initialization 07FC           __pcstackCOMMON 0070            __end_of_delay 067D  
                ??_delay 0072               __pmaintext 06F0           main@isValidKey 0020  
         dataCtrl@dataIn 0072                ?_dataCtrl 0070                ?_instCtrl 0070  
                ___awmod 06A3                  __ptext0 0000                  __ptext1 0765  
                __ptext2 0654                  __ptext3 067D                  __ptext4 0640  
                __ptext5 0668                  __ptext6 06A3                  _initLCD 067D  
                _readKey 0765               ??_dataCtrl 0070         ___awmod@dividend 0072  
   end_of_initialization 07FC               ??_instCtrl 0070                _PORTCbits 0007  
    start_initialization 07FC                ___latbits 0002            __pcstackBANK0 0020  
      __size_of_dataCtrl 0014        __size_of_instCtrl 0014                 ?___awmod 0070  
               ?_initLCD 0070                 ?_readKey 0073           __size_of_delay 0015  
       __size_of___awmod 004D                 _dataCtrl 0654         __size_of_initLCD 0026  
       __size_of_readKey 0097            __size_of_main 0075                 _instCtrl 0640  
            delay@timeIn 0070         readKey@charCount 0077        readKey@isValidKey 007A  

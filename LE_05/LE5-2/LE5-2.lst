

Microchip Technology PIC LITE Macro Assembler V1.33 build 59893 
                                                                                               Tue Apr 02 17:57:45 2024

Microchip Technology Omniscient Code Generator (Lite mode) build 59893
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	text0,local,class=CODE,merge=1,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	intentry,global,class=CODE,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2
    16                           	psect	text6,local,class=CODE,merge=1,delta=2
    17                           	psect	text7,local,class=CODE,merge=1,delta=2
    18                           	psect	text8,local,class=CODE,merge=1,delta=2
    19                           	psect	text9,local,class=CODE,merge=1,delta=2
    20                           	dabs	1,0x7E,2
    21  0000                     	;# 
    22  0001                     	;# 
    23  0002                     	;# 
    24  0003                     	;# 
    25  0004                     	;# 
    26  0005                     	;# 
    27  0006                     	;# 
    28  0007                     	;# 
    29  0008                     	;# 
    30  0009                     	;# 
    31  000A                     	;# 
    32  000B                     	;# 
    33  000C                     	;# 
    34  000D                     	;# 
    35  000E                     	;# 
    36  000E                     	;# 
    37  000F                     	;# 
    38  0010                     	;# 
    39  0011                     	;# 
    40  0012                     	;# 
    41  0013                     	;# 
    42  0014                     	;# 
    43  0015                     	;# 
    44  0015                     	;# 
    45  0016                     	;# 
    46  0017                     	;# 
    47  0018                     	;# 
    48  0019                     	;# 
    49  001A                     	;# 
    50  001B                     	;# 
    51  001B                     	;# 
    52  001C                     	;# 
    53  001D                     	;# 
    54  001E                     	;# 
    55  001F                     	;# 
    56  0081                     	;# 
    57  0085                     	;# 
    58  0086                     	;# 
    59  0087                     	;# 
    60  0088                     	;# 
    61  0089                     	;# 
    62  008C                     	;# 
    63  008D                     	;# 
    64  008E                     	;# 
    65  0091                     	;# 
    66  0092                     	;# 
    67  0093                     	;# 
    68  0094                     	;# 
    69  0098                     	;# 
    70  0099                     	;# 
    71  009C                     	;# 
    72  009D                     	;# 
    73  009E                     	;# 
    74  009F                     	;# 
    75  010C                     	;# 
    76  010D                     	;# 
    77  010E                     	;# 
    78  010F                     	;# 
    79  018C                     	;# 
    80  018D                     	;# 
    81  001F                     _ADCON0	set	31
    82  001E                     _ADRESH	set	30
    83  0006                     _PORTB	set	6
    84  0066                     _ADIF	set	102
    85  005F                     _GIE	set	95
    86  00FA                     _GO	set	250
    87  005E                     _PEIE	set	94
    88  009F                     _ADCON1	set	159
    89  009E                     _ADRESL	set	158
    90  0086                     _TRISB	set	134
    91  0466                     _ADIE	set	1126
    92                           
    93                           	psect	text0
    94  0000                     __ptext0:	
    95                           ; #config settings
    96                           
    97                           
    98                           ;psect for function ___awdiv
    99  0000                     
   100                           	psect	cinit
   101  0015                     start_initialization:	
   102  0015                     __initialization:	
   103  0015                     end_of_initialization:	
   104                           ;End of C runtime variable initialization code
   105                           
   106  0015                     __end_of__initialization:	
   107  0015  0183               	clrf	3
   108  0016  120A  118A  2B73   	ljmp	_main	;jump to C main() function
   109                           
   110                           	psect	cstackBANK1
   111  0000                     __pcstackBANK1:	
   112  0000                     ??_main:	
   113                           
   114                           	psect	cstackCOMMON
   115  0070                     __pcstackCOMMON:	
   116                           ; 0 bytes @ 0x0
   117                           
   118  0070                     ?_delay:	
   119  0070                     ?_ISR:	
   120                           ; 0 bytes @ 0x0
   121                           
   122  0070                     ?_main:	
   123                           ; 0 bytes @ 0x0
   124                           
   125  0070                     ?_readADC:	
   126                           ; 0 bytes @ 0x0
   127                           
   128  0070                     ?___awdiv:	
   129                           ; 2 bytes @ 0x0
   130                           
   131  0070                     ?___awmod:	
   132                           ; 2 bytes @ 0x0
   133                           
   134  0070                     ?___ftpack:	
   135                           ; 2 bytes @ 0x0
   136                           
   137  0070                     delay@delayIn:	
   138                           ; 3 bytes @ 0x0
   139                           
   140  0070                     ___awdiv@divisor:	
   141                           ; 2 bytes @ 0x0
   142                           
   143  0070                     ___awmod@divisor:	
   144                           ; 2 bytes @ 0x0
   145                           
   146  0070                     ___ftpack@arg:	
   147                           ; 2 bytes @ 0x0
   148                           
   149                           
   150                           ; 3 bytes @ 0x0
   151  0070                     	ds	2
   152  0072                     ??_readADC:	
   153  0072                     ??_delay:	
   154                           ; 0 bytes @ 0x2
   155                           
   156  0072                     ___awdiv@dividend:	
   157                           ; 0 bytes @ 0x2
   158                           
   159  0072                     ___awmod@dividend:	
   160                           ; 2 bytes @ 0x2
   161                           
   162                           
   163                           ; 2 bytes @ 0x2
   164  0072                     	ds	1
   165  0073                     ___ftpack@exp:	
   166  0073                     delay@i:	
   167                           ; 1 bytes @ 0x3
   168                           
   169                           
   170                           ; 2 bytes @ 0x3
   171  0073                     	ds	1
   172  0074                     ??___awdiv:	
   173  0074                     ??___awmod:	
   174                           ; 0 bytes @ 0x4
   175                           
   176  0074                     ___ftpack@sign:	
   177                           ; 0 bytes @ 0x4
   178                           
   179  0074                     readADC@temp:	
   180                           ; 1 bytes @ 0x4
   181                           
   182                           
   183                           ; 2 bytes @ 0x4
   184  0074                     	ds	1
   185  0075                     ??___ftpack:	
   186  0075                     ___awdiv@counter:	
   187                           ; 0 bytes @ 0x5
   188                           
   189  0075                     ___awmod@counter:	
   190                           ; 1 bytes @ 0x5
   191                           
   192                           
   193                           ; 1 bytes @ 0x5
   194  0075                     	ds	1
   195  0076                     ___awdiv@sign:	
   196  0076                     ___awmod@sign:	
   197                           ; 1 bytes @ 0x6
   198                           
   199                           
   200                           ; 1 bytes @ 0x6
   201  0076                     	ds	1
   202  0077                     ___awdiv@quotient:	
   203                           
   204                           ; 2 bytes @ 0x7
   205  0077                     	ds	1
   206  0078                     ?___awtoft:	
   207  0078                     ___awtoft@c:	
   208                           ; 3 bytes @ 0x8
   209                           
   210                           
   211                           ; 2 bytes @ 0x8
   212  0078                     	ds	3
   213  007B                     ??___awtoft:	
   214                           
   215                           ; 0 bytes @ 0xB
   216  007B                     	ds	2
   217  007D                     ___awtoft@sign:	
   218                           
   219                           ; 1 bytes @ 0xD
   220  007D                     	ds	1
   221                           
   222                           	psect	cstackBANK0
   223  0020                     __pcstackBANK0:	
   224  0020                     ?___ftmul:	
   225  0020                     ___ftmul@f1:	
   226                           ; 3 bytes @ 0x0
   227                           
   228                           
   229                           ; 3 bytes @ 0x0
   230  0020                     	ds	3
   231  0023                     ___ftmul@f2:	
   232                           
   233                           ; 3 bytes @ 0x3
   234  0023                     	ds	3
   235  0026                     ??___ftmul:	
   236                           
   237                           ; 0 bytes @ 0x6
   238  0026                     	ds	4
   239  002A                     ___ftmul@exp:	
   240                           
   241                           ; 1 bytes @ 0xA
   242  002A                     	ds	1
   243  002B                     ___ftmul@f3_as_product:	
   244                           
   245                           ; 3 bytes @ 0xB
   246  002B                     	ds	3
   247  002E                     ___ftmul@cntr:	
   248                           
   249                           ; 1 bytes @ 0xE
   250  002E                     	ds	1
   251  002F                     ___ftmul@sign:	
   252                           
   253                           ; 1 bytes @ 0xF
   254  002F                     	ds	1
   255  0030                     ?___fttol:	
   256  0030                     ___fttol@f1:	
   257                           ; 4 bytes @ 0x10
   258                           
   259                           
   260                           ; 3 bytes @ 0x10
   261  0030                     	ds	4
   262  0034                     ??___fttol:	
   263                           
   264                           ; 0 bytes @ 0x14
   265  0034                     	ds	4
   266  0038                     ___fttol@sign1:	
   267                           
   268                           ; 1 bytes @ 0x18
   269  0038                     	ds	1
   270  0039                     ___fttol@lval:	
   271                           
   272                           ; 4 bytes @ 0x19
   273  0039                     	ds	4
   274  003D                     ___fttol@exp1:	
   275                           
   276                           ; 1 bytes @ 0x1D
   277  003D                     	ds	1
   278  003E                     ??_ISR:	
   279                           
   280                           ; 0 bytes @ 0x1E
   281  003E                     	ds	6
   282  0044                     ISR@decimal_number:	
   283                           
   284                           ; 2 bytes @ 0x24
   285  0044                     	ds	2
   286  0046                     ISR@whole_number:	
   287                           
   288                           ; 2 bytes @ 0x26
   289  0046                     	ds	2
   290  0048                     ISR@result:	
   291                           
   292                           ; 2 bytes @ 0x28
   293  0048                     	ds	2
   294  004A                     ISR@d_value:	
   295                           
   296                           ; 2 bytes @ 0x2A
   297  004A                     	ds	2
   298  004C                     ISR@resultOfConversion:	
   299                           
   300                           ; 2 bytes @ 0x2C
   301  004C                     	ds	2
   302                           
   303                           	psect	maintext
   304  0373                     __pmaintext:	
   305 ;;
   306 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   307 ;;
   308 ;; *************** function _main *****************
   309 ;; Defined at:
   310 ;;		line 95 in file "C:\Users\notjo\OneDrive\Desktop\USC\USC-Year3-Sem2\3201-EmbeddedSystems\Labs\LE_05\LE5-2\LE5-2.c"
   311 ;; Parameters:    Size  Location     Type
   312 ;;		None
   313 ;; Auto vars:     Size  Location     Type
   314 ;;		None
   315 ;; Return value:  Size  Location     Type
   316 ;;		None               void
   317 ;; Registers used:
   318 ;;		wreg, status,2
   319 ;; Tracked objects:
   320 ;;		On entry : 17F/0
   321 ;;		On exit  : 0/0
   322 ;;		Unchanged: 0/0
   323 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   324 ;;      Params:         0       0       0       0       0
   325 ;;      Locals:         0       0       0       0       0
   326 ;;      Temps:          0       0       0       0       0
   327 ;;      Totals:         0       0       0       0       0
   328 ;;Total ram usage:        0 bytes
   329 ;; Hardware stack levels required when called:    3
   330 ;; This function calls:
   331 ;;		Nothing
   332 ;; This function is called by:
   333 ;;		Startup code after reset
   334 ;; This function uses a non-reentrant model
   335 ;;
   336                           
   337                           
   338                           ;psect for function _main
   339  0373                     _main:	
   340                           
   341                           ;LE5-2.c: 97: TRISB = 0x00;
   342                           
   343                           ;incstack = 0
   344                           ; Regs used in _main: [wreg+status,2]
   345  0373  1683               	bsf	3,5	;RP0=1, select bank1
   346  0374  1303               	bcf	3,6	;RP1=0, select bank1
   347  0375  0186               	clrf	6	;volatile
   348                           
   349                           ;LE5-2.c: 98: PORTB = 0x00;
   350  0376  1283               	bcf	3,5	;RP0=0, select bank0
   351  0377  1303               	bcf	3,6	;RP1=0, select bank0
   352  0378  0186               	clrf	6	;volatile
   353                           
   354                           ;LE5-2.c: 99: ADCON1 = 0x80;
   355  0379  3080               	movlw	128
   356  037A  1683               	bsf	3,5	;RP0=1, select bank1
   357  037B  1303               	bcf	3,6	;RP1=0, select bank1
   358  037C  009F               	movwf	31	;volatile
   359                           
   360                           ;LE5-2.c: 102: ADCON0 = 0x41;
   361  037D  3041               	movlw	65
   362  037E  1283               	bcf	3,5	;RP0=0, select bank0
   363  037F  1303               	bcf	3,6	;RP1=0, select bank0
   364  0380  009F               	movwf	31	;volatile
   365                           
   366                           ;LE5-2.c: 104: PEIE = 1;
   367  0381  170B               	bsf	11,6	;volatile
   368                           
   369                           ;LE5-2.c: 105: ADIE = 1;
   370  0382  1683               	bsf	3,5	;RP0=1, select bank1
   371  0383  1303               	bcf	3,6	;RP1=0, select bank1
   372  0384  170C               	bsf	12,6	;volatile
   373                           
   374                           ;LE5-2.c: 106: ADIF = 0;
   375  0385  1283               	bcf	3,5	;RP0=0, select bank0
   376  0386  1303               	bcf	3,6	;RP1=0, select bank0
   377  0387  130C               	bcf	12,6	;volatile
   378                           
   379                           ;LE5-2.c: 107: GIE = 1;
   380  0388  178B               	bsf	11,7	;volatile
   381                           
   382                           ;LE5-2.c: 108: GO = 1;
   383  0389  151F               	bsf	31,2	;volatile
   384  038A                     l33:	
   385                           ;LE5-2.c: 109: for(;;)
   386                           
   387                           
   388                           ;LE5-2.c: 110: {
   389                           ;LE5-2.c: 111: }
   390  038A  2B8A               	goto	l33
   391  038B                     __end_of_main:	
   392                           
   393                           	psect	text1
   394  00EC                     __ptext1:	
   395 ;; *************** function _ISR *****************
   396 ;; Defined at:
   397 ;;		line 48 in file "C:\Users\notjo\OneDrive\Desktop\USC\USC-Year3-Sem2\3201-EmbeddedSystems\Labs\LE_05\LE5-2\LE5-2.c"
   398 ;; Parameters:    Size  Location     Type
   399 ;;		None
   400 ;; Auto vars:     Size  Location     Type
   401 ;;  resultOfConv    2   44[BANK0 ] int 
   402 ;;  result          2   40[BANK0 ] int 
   403 ;;  whole_number    2   38[BANK0 ] int 
   404 ;;  decimal_numb    2   36[BANK0 ] int 
   405 ;;  d_value         2   42[BANK0 ] int 
   406 ;; Return value:  Size  Location     Type
   407 ;;		None               void
   408 ;; Registers used:
   409 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   410 ;; Tracked objects:
   411 ;;		On entry : 0/0
   412 ;;		On exit  : 0/0
   413 ;;		Unchanged: 0/0
   414 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   415 ;;      Params:         0       0       0       0       0
   416 ;;      Locals:         0      10       0       0       0
   417 ;;      Temps:          0       6       0       0       0
   418 ;;      Totals:         0      16       0       0       0
   419 ;;Total ram usage:       16 bytes
   420 ;; Hardware stack levels used:    1
   421 ;; Hardware stack levels required when called:    2
   422 ;; This function calls:
   423 ;;		___awdiv
   424 ;;		___awmod
   425 ;;		___awtoft
   426 ;;		___ftmul
   427 ;;		___fttol
   428 ;;		_delay
   429 ;;		_readADC
   430 ;; This function is called by:
   431 ;;		Interrupt level 1
   432 ;; This function uses a non-reentrant model
   433 ;;
   434                           
   435                           
   436                           ;psect for function _ISR
   437  00EC                     _ISR:	
   438                           
   439                           ;LE5-2.c: 50: int d_value = 0;
   440  00EC  01CA               	clrf	ISR@d_value
   441  00ED  01CB               	clrf	ISR@d_value+1
   442                           
   443                           ;LE5-2.c: 51: if(ADIF == 1)
   444  00EE  1F0C               	btfss	12,6	;volatile
   445  00EF  2974               	goto	i1l1027
   446                           
   447                           ;LE5-2.c: 52: {
   448                           ;LE5-2.c: 59: ADIF = 0;
   449  00F0  130C               	bcf	12,6	;volatile
   450                           
   451                           ;LE5-2.c: 62: d_value = readADC();
   452  00F1  120A  118A  232A  120A  118A  	fcall	_readADC
   453  00F6  0871               	movf	?_readADC+1,w
   454  00F7  1283               	bcf	3,5	;RP0=0, select bank0
   455  00F8  1303               	bcf	3,6	;RP1=0, select bank0
   456  00F9  01CB               	clrf	ISR@d_value+1
   457  00FA  07CB               	addwf	ISR@d_value+1,f
   458  00FB  0870               	movf	?_readADC,w
   459  00FC  01CA               	clrf	ISR@d_value
   460  00FD  07CA               	addwf	ISR@d_value,f
   461                           
   462                           ;LE5-2.c: 65: int resultOfConversion = ((float) d_value * 0.0049) * 10;
   463  00FE  084B               	movf	ISR@d_value+1,w
   464  00FF  01F9               	clrf	___awtoft@c+1
   465  0100  07F9               	addwf	___awtoft@c+1,f
   466  0101  084A               	movf	ISR@d_value,w
   467  0102  01F8               	clrf	___awtoft@c
   468  0103  07F8               	addwf	___awtoft@c,f
   469  0104  120A  118A  2352  120A  118A  	fcall	___awtoft
   470  0109  0878               	movf	?___awtoft,w
   471  010A  1283               	bcf	3,5	;RP0=0, select bank0
   472  010B  1303               	bcf	3,6	;RP1=0, select bank0
   473  010C  00A3               	movwf	___ftmul@f2
   474  010D  0879               	movf	?___awtoft+1,w
   475  010E  00A4               	movwf	___ftmul@f2+1
   476  010F  087A               	movf	?___awtoft+2,w
   477  0110  00A5               	movwf	___ftmul@f2+2
   478  0111  30B4               	movlw	180
   479  0112  00A0               	movwf	___ftmul@f1
   480  0113  3048               	movlw	72
   481  0114  00A1               	movwf	___ftmul@f1+1
   482  0115  303D               	movlw	61
   483  0116  00A2               	movwf	___ftmul@f1+2
   484  0117  120A  118A  2019  120A  118A  	fcall	___ftmul
   485  011C  1283               	bcf	3,5	;RP0=0, select bank0
   486  011D  1303               	bcf	3,6	;RP1=0, select bank0
   487  011E  0820               	movf	?___ftmul,w
   488  011F  00B0               	movwf	___fttol@f1
   489  0120  0821               	movf	?___ftmul+1,w
   490  0121  00B1               	movwf	___fttol@f1+1
   491  0122  0822               	movf	?___ftmul+2,w
   492  0123  00B2               	movwf	___fttol@f1+2
   493  0124  120A  118A  218C  120A  118A  	fcall	___fttol
   494  0129  1283               	bcf	3,5	;RP0=0, select bank0
   495  012A  1303               	bcf	3,6	;RP1=0, select bank0
   496  012B  0831               	movf	?___fttol+1,w
   497  012C  01CD               	clrf	ISR@resultOfConversion+1
   498  012D  07CD               	addwf	ISR@resultOfConversion+1,f
   499  012E  0830               	movf	?___fttol,w
   500  012F  01CC               	clrf	ISR@resultOfConversion
   501  0130  07CC               	addwf	ISR@resultOfConversion,f
   502                           
   503                           ;LE5-2.c: 76: int decimal_number = resultOfConversion / 10;
   504  0131  300A               	movlw	10
   505  0132  00F0               	movwf	___awdiv@divisor
   506  0133  3000               	movlw	0
   507  0134  00F1               	movwf	___awdiv@divisor+1
   508  0135  084D               	movf	ISR@resultOfConversion+1,w
   509  0136  01F3               	clrf	___awdiv@dividend+1
   510  0137  07F3               	addwf	___awdiv@dividend+1,f
   511  0138  084C               	movf	ISR@resultOfConversion,w
   512  0139  01F2               	clrf	___awdiv@dividend
   513  013A  07F2               	addwf	___awdiv@dividend,f
   514  013B  120A  118A  2282  120A  118A  	fcall	___awdiv
   515  0140  0871               	movf	?___awdiv+1,w
   516  0141  1283               	bcf	3,5	;RP0=0, select bank0
   517  0142  1303               	bcf	3,6	;RP1=0, select bank0
   518  0143  01C5               	clrf	ISR@decimal_number+1
   519  0144  07C5               	addwf	ISR@decimal_number+1,f
   520  0145  0870               	movf	?___awdiv,w
   521  0146  01C4               	clrf	ISR@decimal_number
   522  0147  07C4               	addwf	ISR@decimal_number,f
   523                           
   524                           ;LE5-2.c: 77: int whole_number = resultOfConversion % 10;
   525  0148  300A               	movlw	10
   526  0149  00F0               	movwf	___awmod@divisor
   527  014A  3000               	movlw	0
   528  014B  00F1               	movwf	___awmod@divisor+1
   529  014C  084D               	movf	ISR@resultOfConversion+1,w
   530  014D  01F3               	clrf	___awmod@dividend+1
   531  014E  07F3               	addwf	___awmod@dividend+1,f
   532  014F  084C               	movf	ISR@resultOfConversion,w
   533  0150  01F2               	clrf	___awmod@dividend
   534  0151  07F2               	addwf	___awmod@dividend,f
   535  0152  120A  118A  22DD  120A  118A  	fcall	___awmod
   536  0157  0871               	movf	?___awmod+1,w
   537  0158  1283               	bcf	3,5	;RP0=0, select bank0
   538  0159  1303               	bcf	3,6	;RP1=0, select bank0
   539  015A  01C7               	clrf	ISR@whole_number+1
   540  015B  07C7               	addwf	ISR@whole_number+1,f
   541  015C  0870               	movf	?___awmod,w
   542  015D  01C6               	clrf	ISR@whole_number
   543  015E  07C6               	addwf	ISR@whole_number,f
   544                           
   545                           ;LE5-2.c: 78: int result = (whole_number << 4) | decimal_number;
   546  015F  0847               	movf	ISR@whole_number+1,w
   547  0160  00BF               	movwf	??_ISR+1
   548  0161  0846               	movf	ISR@whole_number,w
   549  0162  00BE               	movwf	??_ISR
   550  0163  0EBE               	swapf	??_ISR,f
   551  0164  0EBF               	swapf	??_ISR+1,f
   552  0165  30F0               	movlw	240
   553  0166  05BF               	andwf	??_ISR+1,f
   554  0167  083E               	movf	??_ISR,w
   555  0168  390F               	andlw	15
   556  0169  04BF               	iorwf	??_ISR+1,f
   557  016A  30F0               	movlw	240
   558  016B  05BE               	andwf	??_ISR,f
   559  016C  0844               	movf	ISR@decimal_number,w
   560  016D  043E               	iorwf	??_ISR,w
   561  016E  00C8               	movwf	ISR@result
   562  016F  0845               	movf	ISR@decimal_number+1,w
   563  0170  043F               	iorwf	??_ISR+1,w
   564  0171  00C9               	movwf	ISR@result+1
   565                           
   566                           ;LE5-2.c: 80: PORTB = result;
   567  0172  0848               	movf	ISR@result,w
   568  0173  0086               	movwf	6	;volatile
   569  0174                     i1l1027:	
   570                           
   571                           ;LE5-2.c: 81: }
   572                           ;LE5-2.c: 82: delay(1000);
   573  0174  30E8               	movlw	232
   574  0175  00F0               	movwf	delay@delayIn
   575  0176  3003               	movlw	3
   576  0177  00F1               	movwf	delay@delayIn+1
   577  0178  120A  118A  238B  120A  118A  	fcall	_delay
   578                           
   579                           ;LE5-2.c: 83: GO = 1;
   580  017D  1283               	bcf	3,5	;RP0=0, select bank0
   581  017E  1303               	bcf	3,6	;RP1=0, select bank0
   582  017F  151F               	bsf	31,2	;volatile
   583                           
   584                           ;LE5-2.c: 84: GIE = 1;
   585  0180  178B               	bsf	11,7	;volatile
   586  0181  0843               	movf	??_ISR+5,w
   587  0182  00FF               	movwf	127
   588  0183  0842               	movf	??_ISR+4,w
   589  0184  008A               	movwf	10
   590  0185  0841               	movf	??_ISR+3,w
   591  0186  0084               	movwf	4
   592  0187  0E40               	swapf	(??_ISR+2)^0,w
   593  0188  0083               	movwf	3
   594  0189  0EFE               	swapf	126,f
   595  018A  0E7E               	swapf	126,w
   596  018B  0009               	retfie
   597  018C                     __end_of_ISR:	
   598                           
   599                           	psect	intentry
   600  0004                     __pintentry:	
   601                           ;incstack = 0
   602                           ; Regs used in _ISR: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   603                           
   604  0004                     interrupt_function:	
   605  007E                     saved_w	set	btemp
   606  0004  00FE               	movwf	btemp
   607  0005  0E03               	swapf	3,w
   608  0006  1283               	bcf	3,5	;RP0=0, select bank0
   609  0007  1303               	bcf	3,6	;RP1=0, select bank0
   610  0008  00C0               	movwf	??_ISR+2
   611  0009  0804               	movf	4,w
   612  000A  00C1               	movwf	??_ISR+3
   613  000B  080A               	movf	10,w
   614  000C  00C2               	movwf	??_ISR+4
   615  000D  087F               	movf	btemp+1,w
   616  000E  00C3               	movwf	??_ISR+5
   617  000F  120A  118A  28EC   	ljmp	_ISR
   618                           
   619                           	psect	text2
   620  032A                     __ptext2:	
   621 ;; *************** function _readADC *****************
   622 ;; Defined at:
   623 ;;		line 120 in file "C:\Users\notjo\OneDrive\Desktop\USC\USC-Year3-Sem2\3201-EmbeddedSystems\Labs\LE_05\LE5-2\LE5-2.c"
   624 ;; Parameters:    Size  Location     Type
   625 ;;		None
   626 ;; Auto vars:     Size  Location     Type
   627 ;;  temp            2    4[COMMON] int 
   628 ;; Return value:  Size  Location     Type
   629 ;;                  2    0[COMMON] int 
   630 ;; Registers used:
   631 ;;		wreg, status,2, status,0, btemp+1
   632 ;; Tracked objects:
   633 ;;		On entry : 0/0
   634 ;;		On exit  : 0/0
   635 ;;		Unchanged: 0/0
   636 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   637 ;;      Params:         2       0       0       0       0
   638 ;;      Locals:         2       0       0       0       0
   639 ;;      Temps:          2       0       0       0       0
   640 ;;      Totals:         6       0       0       0       0
   641 ;;Total ram usage:        6 bytes
   642 ;; Hardware stack levels used:    1
   643 ;; This function calls:
   644 ;;		Nothing
   645 ;; This function is called by:
   646 ;;		_ISR
   647 ;; This function uses a non-reentrant model
   648 ;;
   649                           
   650                           
   651                           ;psect for function _readADC
   652  032A                     _readADC:	
   653                           
   654                           ;LE5-2.c: 122: int temp = 0;
   655                           
   656                           ;incstack = 0
   657                           ; Regs used in _readADC: [wreg+status,2+status,0+btemp+1]
   658  032A  01F4               	clrf	readADC@temp
   659  032B  01F5               	clrf	readADC@temp+1
   660                           
   661                           ;LE5-2.c: 123: temp = ADRESH;
   662  032C  1283               	bcf	3,5	;RP0=0, select bank0
   663  032D  1303               	bcf	3,6	;RP1=0, select bank0
   664  032E  081E               	movf	30,w	;volatile
   665  032F  00F2               	movwf	??_readADC
   666  0330  01F3               	clrf	??_readADC+1
   667  0331  0872               	movf	??_readADC,w
   668  0332  00F4               	movwf	readADC@temp
   669  0333  0873               	movf	??_readADC+1,w
   670  0334  00F5               	movwf	readADC@temp+1
   671                           
   672                           ;LE5-2.c: 124: temp = temp << 8;
   673  0335  0875               	movf	readADC@temp+1,w
   674  0336  00F3               	movwf	??_readADC+1
   675  0337  0874               	movf	readADC@temp,w
   676  0338  00F2               	movwf	??_readADC
   677  0339  0872               	movf	??_readADC,w
   678  033A  00F3               	movwf	??_readADC+1
   679  033B  01F2               	clrf	??_readADC
   680  033C  0872               	movf	??_readADC,w
   681  033D  00F4               	movwf	readADC@temp
   682  033E  0873               	movf	??_readADC+1,w
   683  033F  00F5               	movwf	readADC@temp+1
   684                           
   685                           ;LE5-2.c: 125: temp = temp | ADRESL;
   686  0340  0874               	movf	readADC@temp,w
   687  0341  1683               	bsf	3,5	;RP0=1, select bank1
   688  0342  1303               	bcf	3,6	;RP1=0, select bank1
   689  0343  041E               	iorwf	30,w	;volatile
   690  0344  00F2               	movwf	??_readADC
   691  0345  0875               	movf	readADC@temp+1,w
   692  0346  00F3               	movwf	??_readADC+1
   693  0347  0872               	movf	??_readADC,w
   694  0348  00F4               	movwf	readADC@temp
   695  0349  0873               	movf	??_readADC+1,w
   696  034A  00F5               	movwf	readADC@temp+1
   697                           
   698                           ;LE5-2.c: 126: return temp;
   699  034B  0875               	movf	readADC@temp+1,w
   700  034C  01F1               	clrf	?_readADC+1
   701  034D  07F1               	addwf	?_readADC+1,f
   702  034E  0874               	movf	readADC@temp,w
   703  034F  01F0               	clrf	?_readADC
   704  0350  07F0               	addwf	?_readADC,f
   705  0351  0008               	return
   706  0352                     __end_of_readADC:	
   707                           
   708                           	psect	text3
   709  038B                     __ptext3:	
   710 ;; *************** function _delay *****************
   711 ;; Defined at:
   712 ;;		line 135 in file "C:\Users\notjo\OneDrive\Desktop\USC\USC-Year3-Sem2\3201-EmbeddedSystems\Labs\LE_05\LE5-2\LE5-2.c"
   713 ;; Parameters:    Size  Location     Type
   714 ;;  delayIn         2    0[COMMON] int 
   715 ;; Auto vars:     Size  Location     Type
   716 ;;  i               2    3[COMMON] int 
   717 ;; Return value:  Size  Location     Type
   718 ;;		None               void
   719 ;; Registers used:
   720 ;;		wreg, status,2
   721 ;; Tracked objects:
   722 ;;		On entry : 0/0
   723 ;;		On exit  : 0/0
   724 ;;		Unchanged: 0/0
   725 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   726 ;;      Params:         2       0       0       0       0
   727 ;;      Locals:         2       0       0       0       0
   728 ;;      Temps:          1       0       0       0       0
   729 ;;      Totals:         5       0       0       0       0
   730 ;;Total ram usage:        5 bytes
   731 ;; Hardware stack levels used:    1
   732 ;; This function calls:
   733 ;;		Nothing
   734 ;; This function is called by:
   735 ;;		_ISR
   736 ;; This function uses a non-reentrant model
   737 ;;
   738                           
   739                           
   740                           ;psect for function _delay
   741  038B                     _delay:	
   742                           
   743                           ;LE5-2.c: 137: for(int i = 0; i < delayIn; i++);
   744                           
   745                           ;incstack = 0
   746                           ; Regs used in _delay: [wreg+status,2]
   747  038B  01F3               	clrf	delay@i
   748  038C  01F4               	clrf	delay@i+1
   749  038D                     i1l41:	
   750  038D  0874               	movf	delay@i+1,w
   751  038E  3A80               	xorlw	128
   752  038F  00F2               	movwf	??_delay
   753  0390  0871               	movf	delay@delayIn+1,w
   754  0391  3A80               	xorlw	128
   755  0392  0272               	subwf	??_delay,w
   756  0393  1D03               	skipz
   757  0394  2B97               	goto	u69_25
   758  0395  0870               	movf	delay@delayIn,w
   759  0396  0273               	subwf	delay@i,w
   760  0397                     u69_25:	
   761  0397  1803               	btfsc	3,0
   762  0398  0008               	return
   763  0399  3001               	movlw	1
   764  039A  07F3               	addwf	delay@i,f
   765  039B  1803               	skipnc
   766  039C  0AF4               	incf	delay@i+1,f
   767  039D  3000               	movlw	0
   768  039E  07F4               	addwf	delay@i+1,f
   769  039F  2B8D               	goto	i1l41
   770  03A0                     __end_of_delay:	
   771                           
   772                           	psect	text4
   773  018C                     __ptext4:	
   774 ;; *************** function ___fttol *****************
   775 ;; Defined at:
   776 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\fttol.c"
   777 ;; Parameters:    Size  Location     Type
   778 ;;  f1              3   16[BANK0 ] float 
   779 ;; Auto vars:     Size  Location     Type
   780 ;;  lval            4   25[BANK0 ] unsigned long 
   781 ;;  exp1            1   29[BANK0 ] unsigned char 
   782 ;;  sign1           1   24[BANK0 ] unsigned char 
   783 ;; Return value:  Size  Location     Type
   784 ;;                  4   16[BANK0 ] long 
   785 ;; Registers used:
   786 ;;		wreg, status,2, status,0
   787 ;; Tracked objects:
   788 ;;		On entry : 0/0
   789 ;;		On exit  : 0/0
   790 ;;		Unchanged: 0/0
   791 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   792 ;;      Params:         0       4       0       0       0
   793 ;;      Locals:         0       6       0       0       0
   794 ;;      Temps:          0       4       0       0       0
   795 ;;      Totals:         0      14       0       0       0
   796 ;;Total ram usage:       14 bytes
   797 ;; Hardware stack levels used:    1
   798 ;; This function calls:
   799 ;;		Nothing
   800 ;; This function is called by:
   801 ;;		_ISR
   802 ;; This function uses a non-reentrant model
   803 ;;
   804                           
   805                           
   806                           ;psect for function ___fttol
   807  018C                     ___fttol:	
   808                           
   809                           ;incstack = 0
   810                           ; Regs used in ___fttol: [wreg+status,2+status,0]
   811  018C  1283               	bcf	3,5	;RP0=0, select bank0
   812  018D  1303               	bcf	3,6	;RP1=0, select bank0
   813  018E  0830               	movf	___fttol@f1,w
   814  018F  00B4               	movwf	??___fttol
   815  0190  0831               	movf	___fttol@f1+1,w
   816  0191  00B5               	movwf	??___fttol+1
   817  0192  0832               	movf	___fttol@f1+2,w
   818  0193  00B6               	movwf	??___fttol+2
   819  0194  1003               	clrc
   820  0195  0D35               	rlf	??___fttol+1,w
   821  0196  0D36               	rlf	??___fttol+2,w
   822  0197  00B7               	movwf	??___fttol+3
   823  0198  0837               	movf	??___fttol+3,w
   824  0199  00BD               	movwf	___fttol@exp1
   825  019A  08BD               	movf	___fttol@exp1,f
   826  019B  1D03               	skipz
   827  019C  29A6               	goto	i1l971
   828  019D  3000               	movlw	0
   829  019E  00B3               	movwf	?___fttol+3
   830  019F  3000               	movlw	0
   831  01A0  00B2               	movwf	?___fttol+2
   832  01A1  3000               	movlw	0
   833  01A2  00B1               	movwf	?___fttol+1
   834  01A3  3000               	movlw	0
   835  01A4  00B0               	movwf	?___fttol
   836  01A5  0008               	return
   837  01A6                     i1l971:	
   838  01A6  0830               	movf	___fttol@f1,w
   839  01A7  00B4               	movwf	??___fttol
   840  01A8  0831               	movf	___fttol@f1+1,w
   841  01A9  00B5               	movwf	??___fttol+1
   842  01AA  0832               	movf	___fttol@f1+2,w
   843  01AB  00B6               	movwf	??___fttol+2
   844  01AC  3017               	movlw	23
   845  01AD                     u105_25:	
   846  01AD  1003               	clrc
   847  01AE  0CB6               	rrf	??___fttol+2,f
   848  01AF  0CB5               	rrf	??___fttol+1,f
   849  01B0  0CB4               	rrf	??___fttol,f
   850  01B1  3EFF               	addlw	-1
   851  01B2  1D03               	skipz
   852  01B3  29AD               	goto	u105_25
   853  01B4  0834               	movf	??___fttol,w
   854  01B5  00B7               	movwf	??___fttol+3
   855  01B6  0837               	movf	??___fttol+3,w
   856  01B7  00B8               	movwf	___fttol@sign1
   857  01B8  17B1               	bsf	___fttol@f1+1,7
   858  01B9  30FF               	movlw	255
   859  01BA  05B0               	andwf	___fttol@f1,f
   860  01BB  30FF               	movlw	255
   861  01BC  05B1               	andwf	___fttol@f1+1,f
   862  01BD  3000               	movlw	0
   863  01BE  05B2               	andwf	___fttol@f1+2,f
   864  01BF  0830               	movf	___fttol@f1,w
   865  01C0  00B9               	movwf	___fttol@lval
   866  01C1  0831               	movf	___fttol@f1+1,w
   867  01C2  00BA               	movwf	___fttol@lval+1
   868  01C3  0832               	movf	___fttol@f1+2,w
   869  01C4  00BB               	movwf	___fttol@lval+2
   870  01C5  01BC               	clrf	___fttol@lval+3
   871  01C6  308E               	movlw	142
   872  01C7  02BD               	subwf	___fttol@exp1,f
   873  01C8  1FBD               	btfss	___fttol@exp1,7
   874  01C9  29E8               	goto	i1l991
   875  01CA  083D               	movf	___fttol@exp1,w
   876  01CB  3A80               	xorlw	128
   877  01CC  3E8F               	addlw	143
   878  01CD  1803               	skipnc
   879  01CE  29D8               	goto	i1l989
   880  01CF  3000               	movlw	0
   881  01D0  00B3               	movwf	?___fttol+3
   882  01D1  3000               	movlw	0
   883  01D2  00B2               	movwf	?___fttol+2
   884  01D3  3000               	movlw	0
   885  01D4  00B1               	movwf	?___fttol+1
   886  01D5  3000               	movlw	0
   887  01D6  00B0               	movwf	?___fttol
   888  01D7  0008               	return
   889  01D8                     i1l989:	
   890  01D8  3001               	movlw	1
   891  01D9                     u108_25:	
   892  01D9  1003               	clrc
   893  01DA  0CBC               	rrf	___fttol@lval+3,f
   894  01DB  0CBB               	rrf	___fttol@lval+2,f
   895  01DC  0CBA               	rrf	___fttol@lval+1,f
   896  01DD  0CB9               	rrf	___fttol@lval,f
   897  01DE  3EFF               	addlw	-1
   898  01DF  1D03               	skipz
   899  01E0  29D9               	goto	u108_25
   900  01E1  3001               	movlw	1
   901  01E2  00B4               	movwf	??___fttol
   902  01E3  0834               	movf	??___fttol,w
   903  01E4  07BD               	addwf	___fttol@exp1,f
   904  01E5  1903               	btfsc	3,2
   905  01E6  2A03               	goto	i1l1001
   906  01E7  29D8               	goto	i1l989
   907  01E8                     i1l991:	
   908  01E8  3018               	movlw	24
   909  01E9  023D               	subwf	___fttol@exp1,w
   910  01EA  1C03               	skipc
   911  01EB  2A00               	goto	i1l999
   912  01EC  3000               	movlw	0
   913  01ED  00B3               	movwf	?___fttol+3
   914  01EE  3000               	movlw	0
   915  01EF  00B2               	movwf	?___fttol+2
   916  01F0  3000               	movlw	0
   917  01F1  00B1               	movwf	?___fttol+1
   918  01F2  3000               	movlw	0
   919  01F3  00B0               	movwf	?___fttol
   920  01F4  0008               	return
   921  01F5                     i1l997:	
   922  01F5  3001               	movlw	1
   923  01F6  00B4               	movwf	??___fttol
   924  01F7                     u111_25:	
   925  01F7  1003               	clrc
   926  01F8  0DB9               	rlf	___fttol@lval,f
   927  01F9  0DBA               	rlf	___fttol@lval+1,f
   928  01FA  0DBB               	rlf	___fttol@lval+2,f
   929  01FB  0DBC               	rlf	___fttol@lval+3,f
   930  01FC  0BB4               	decfsz	??___fttol,f
   931  01FD  29F7               	goto	u111_25
   932  01FE  3001               	movlw	1
   933  01FF  02BD               	subwf	___fttol@exp1,f
   934  0200                     i1l999:	
   935  0200  08BD               	movf	___fttol@exp1,f
   936  0201  1D03               	skipz
   937  0202  29F5               	goto	i1l997
   938  0203                     i1l1001:	
   939  0203  0838               	movf	___fttol@sign1,w
   940  0204  1903               	btfsc	3,2
   941  0205  2A11               	goto	i1l1005
   942  0206  09B9               	comf	___fttol@lval,f
   943  0207  09BA               	comf	___fttol@lval+1,f
   944  0208  09BB               	comf	___fttol@lval+2,f
   945  0209  09BC               	comf	___fttol@lval+3,f
   946  020A  0AB9               	incf	___fttol@lval,f
   947  020B  1903               	skipnz
   948  020C  0ABA               	incf	___fttol@lval+1,f
   949  020D  1903               	skipnz
   950  020E  0ABB               	incf	___fttol@lval+2,f
   951  020F  1903               	skipnz
   952  0210  0ABC               	incf	___fttol@lval+3,f
   953  0211                     i1l1005:	
   954  0211  083C               	movf	___fttol@lval+3,w
   955  0212  00B3               	movwf	?___fttol+3
   956  0213  083B               	movf	___fttol@lval+2,w
   957  0214  00B2               	movwf	?___fttol+2
   958  0215  083A               	movf	___fttol@lval+1,w
   959  0216  00B1               	movwf	?___fttol+1
   960  0217  0839               	movf	___fttol@lval,w
   961  0218  00B0               	movwf	?___fttol
   962  0219  0008               	return
   963  021A                     __end_of___fttol:	
   964                           
   965                           	psect	text5
   966  0019                     __ptext5:	
   967 ;; *************** function ___ftmul *****************
   968 ;; Defined at:
   969 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\ftmul.c"
   970 ;; Parameters:    Size  Location     Type
   971 ;;  f1              3    0[BANK0 ] float 
   972 ;;  f2              3    3[BANK0 ] float 
   973 ;; Auto vars:     Size  Location     Type
   974 ;;  f3_as_produc    3   11[BANK0 ] unsigned um
   975 ;;  sign            1   15[BANK0 ] unsigned char 
   976 ;;  cntr            1   14[BANK0 ] unsigned char 
   977 ;;  exp             1   10[BANK0 ] unsigned char 
   978 ;; Return value:  Size  Location     Type
   979 ;;                  3    0[BANK0 ] float 
   980 ;; Registers used:
   981 ;;		wreg, status,2, status,0, pclath, cstack
   982 ;; Tracked objects:
   983 ;;		On entry : 0/0
   984 ;;		On exit  : 0/0
   985 ;;		Unchanged: 0/0
   986 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   987 ;;      Params:         0       6       0       0       0
   988 ;;      Locals:         0       6       0       0       0
   989 ;;      Temps:          0       4       0       0       0
   990 ;;      Totals:         0      16       0       0       0
   991 ;;Total ram usage:       16 bytes
   992 ;; Hardware stack levels used:    1
   993 ;; Hardware stack levels required when called:    1
   994 ;; This function calls:
   995 ;;		___ftpack
   996 ;; This function is called by:
   997 ;;		_ISR
   998 ;; This function uses a non-reentrant model
   999 ;;
  1000                           
  1001                           
  1002                           ;psect for function ___ftmul
  1003  0019                     ___ftmul:	
  1004                           
  1005                           ;incstack = 0
  1006                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  1007  0019  1283               	bcf	3,5	;RP0=0, select bank0
  1008  001A  1303               	bcf	3,6	;RP1=0, select bank0
  1009  001B  0820               	movf	___ftmul@f1,w
  1010  001C  00A6               	movwf	??___ftmul
  1011  001D  0821               	movf	___ftmul@f1+1,w
  1012  001E  00A7               	movwf	??___ftmul+1
  1013  001F  0822               	movf	___ftmul@f1+2,w
  1014  0020  00A8               	movwf	??___ftmul+2
  1015  0021  1003               	clrc
  1016  0022  0D27               	rlf	??___ftmul+1,w
  1017  0023  0D28               	rlf	??___ftmul+2,w
  1018  0024  00A9               	movwf	??___ftmul+3
  1019  0025  0829               	movf	??___ftmul+3,w
  1020  0026  00AA               	movwf	___ftmul@exp
  1021  0027  08AA               	movf	___ftmul@exp,f
  1022  0028  1D03               	skipz
  1023  0029  2831               	goto	i1l921
  1024  002A  3000               	movlw	0
  1025  002B  00A0               	movwf	?___ftmul
  1026  002C  3000               	movlw	0
  1027  002D  00A1               	movwf	?___ftmul+1
  1028  002E  3000               	movlw	0
  1029  002F  00A2               	movwf	?___ftmul+2
  1030  0030  0008               	return
  1031  0031                     i1l921:	
  1032  0031  0823               	movf	___ftmul@f2,w
  1033  0032  00A6               	movwf	??___ftmul
  1034  0033  0824               	movf	___ftmul@f2+1,w
  1035  0034  00A7               	movwf	??___ftmul+1
  1036  0035  0825               	movf	___ftmul@f2+2,w
  1037  0036  00A8               	movwf	??___ftmul+2
  1038  0037  1003               	clrc
  1039  0038  0D27               	rlf	??___ftmul+1,w
  1040  0039  0D28               	rlf	??___ftmul+2,w
  1041  003A  00A9               	movwf	??___ftmul+3
  1042  003B  0829               	movf	??___ftmul+3,w
  1043  003C  00AF               	movwf	___ftmul@sign
  1044  003D  08AF               	movf	___ftmul@sign,f
  1045  003E  1D03               	skipz
  1046  003F  2847               	goto	i1l927
  1047  0040  3000               	movlw	0
  1048  0041  00A0               	movwf	?___ftmul
  1049  0042  3000               	movlw	0
  1050  0043  00A1               	movwf	?___ftmul+1
  1051  0044  3000               	movlw	0
  1052  0045  00A2               	movwf	?___ftmul+2
  1053  0046  0008               	return
  1054  0047                     i1l927:	
  1055  0047  082F               	movf	___ftmul@sign,w
  1056  0048  3E7B               	addlw	123
  1057  0049  00A6               	movwf	??___ftmul
  1058  004A  0826               	movf	??___ftmul,w
  1059  004B  07AA               	addwf	___ftmul@exp,f
  1060  004C  0820               	movf	___ftmul@f1,w
  1061  004D  00A6               	movwf	??___ftmul
  1062  004E  0821               	movf	___ftmul@f1+1,w
  1063  004F  00A7               	movwf	??___ftmul+1
  1064  0050  0822               	movf	___ftmul@f1+2,w
  1065  0051  00A8               	movwf	??___ftmul+2
  1066  0052  3010               	movlw	16
  1067  0053                     u92_25:	
  1068  0053  1003               	clrc
  1069  0054  0CA8               	rrf	??___ftmul+2,f
  1070  0055  0CA7               	rrf	??___ftmul+1,f
  1071  0056  0CA6               	rrf	??___ftmul,f
  1072  0057  3EFF               	addlw	-1
  1073  0058  1D03               	skipz
  1074  0059  2853               	goto	u92_25
  1075  005A  0826               	movf	??___ftmul,w
  1076  005B  00A9               	movwf	??___ftmul+3
  1077  005C  0829               	movf	??___ftmul+3,w
  1078  005D  00AF               	movwf	___ftmul@sign
  1079  005E  0823               	movf	___ftmul@f2,w
  1080  005F  00A6               	movwf	??___ftmul
  1081  0060  0824               	movf	___ftmul@f2+1,w
  1082  0061  00A7               	movwf	??___ftmul+1
  1083  0062  0825               	movf	___ftmul@f2+2,w
  1084  0063  00A8               	movwf	??___ftmul+2
  1085  0064  3010               	movlw	16
  1086  0065                     u93_25:	
  1087  0065  1003               	clrc
  1088  0066  0CA8               	rrf	??___ftmul+2,f
  1089  0067  0CA7               	rrf	??___ftmul+1,f
  1090  0068  0CA6               	rrf	??___ftmul,f
  1091  0069  3EFF               	addlw	-1
  1092  006A  1D03               	skipz
  1093  006B  2865               	goto	u93_25
  1094  006C  0826               	movf	??___ftmul,w
  1095  006D  00A9               	movwf	??___ftmul+3
  1096  006E  0829               	movf	??___ftmul+3,w
  1097  006F  06AF               	xorwf	___ftmul@sign,f
  1098  0070  3080               	movlw	128
  1099  0071  00A6               	movwf	??___ftmul
  1100  0072  0826               	movf	??___ftmul,w
  1101  0073  05AF               	andwf	___ftmul@sign,f
  1102  0074  17A1               	bsf	___ftmul@f1+1,7
  1103  0075  17A4               	bsf	___ftmul@f2+1,7
  1104  0076  30FF               	movlw	255
  1105  0077  05A3               	andwf	___ftmul@f2,f
  1106  0078  30FF               	movlw	255
  1107  0079  05A4               	andwf	___ftmul@f2+1,f
  1108  007A  3000               	movlw	0
  1109  007B  05A5               	andwf	___ftmul@f2+2,f
  1110  007C  3000               	movlw	0
  1111  007D  00AB               	movwf	___ftmul@f3_as_product
  1112  007E  3000               	movlw	0
  1113  007F  00AC               	movwf	___ftmul@f3_as_product+1
  1114  0080  3000               	movlw	0
  1115  0081  00AD               	movwf	___ftmul@f3_as_product+2
  1116  0082  3007               	movlw	7
  1117  0083  00A6               	movwf	??___ftmul
  1118  0084  0826               	movf	??___ftmul,w
  1119  0085  00AE               	movwf	___ftmul@cntr
  1120  0086                     i1l939:	
  1121  0086  1C20               	btfss	___ftmul@f1,0
  1122  0087  2896               	goto	i1l943
  1123  0088  0823               	movf	___ftmul@f2,w
  1124  0089  07AB               	addwf	___ftmul@f3_as_product,f
  1125  008A  0824               	movf	___ftmul@f2+1,w
  1126  008B  1103               	clrz
  1127  008C  1803               	skipnc
  1128  008D  0A24               	incf	___ftmul@f2+1,w
  1129  008E  1D03               	btfss	3,2
  1130  008F  07AC               	addwf	___ftmul@f3_as_product+1,f
  1131  0090  0825               	movf	___ftmul@f2+2,w
  1132  0091  1103               	clrz
  1133  0092  1803               	skipnc
  1134  0093  0A25               	incf	___ftmul@f2+2,w
  1135  0094  1D03               	btfss	3,2
  1136  0095  07AD               	addwf	___ftmul@f3_as_product+2,f
  1137  0096                     i1l943:	
  1138  0096  3001               	movlw	1
  1139  0097                     u96_25:	
  1140  0097  1003               	clrc
  1141  0098  0CA2               	rrf	___ftmul@f1+2,f
  1142  0099  0CA1               	rrf	___ftmul@f1+1,f
  1143  009A  0CA0               	rrf	___ftmul@f1,f
  1144  009B  3EFF               	addlw	-1
  1145  009C  1D03               	skipz
  1146  009D  2897               	goto	u96_25
  1147  009E  3001               	movlw	1
  1148  009F                     u97_25:	
  1149  009F  1003               	clrc
  1150  00A0  0DA3               	rlf	___ftmul@f2,f
  1151  00A1  0DA4               	rlf	___ftmul@f2+1,f
  1152  00A2  0DA5               	rlf	___ftmul@f2+2,f
  1153  00A3  3EFF               	addlw	-1
  1154  00A4  1D03               	skipz
  1155  00A5  289F               	goto	u97_25
  1156  00A6  3001               	movlw	1
  1157  00A7  02AE               	subwf	___ftmul@cntr,f
  1158  00A8  1D03               	btfss	3,2
  1159  00A9  2886               	goto	i1l939
  1160  00AA  3009               	movlw	9
  1161  00AB  00A6               	movwf	??___ftmul
  1162  00AC  0826               	movf	??___ftmul,w
  1163  00AD  00AE               	movwf	___ftmul@cntr
  1164  00AE                     i1l951:	
  1165  00AE  1C20               	btfss	___ftmul@f1,0
  1166  00AF  28BE               	goto	i1l955
  1167  00B0  0823               	movf	___ftmul@f2,w
  1168  00B1  07AB               	addwf	___ftmul@f3_as_product,f
  1169  00B2  0824               	movf	___ftmul@f2+1,w
  1170  00B3  1103               	clrz
  1171  00B4  1803               	skipnc
  1172  00B5  0A24               	incf	___ftmul@f2+1,w
  1173  00B6  1D03               	btfss	3,2
  1174  00B7  07AC               	addwf	___ftmul@f3_as_product+1,f
  1175  00B8  0825               	movf	___ftmul@f2+2,w
  1176  00B9  1103               	clrz
  1177  00BA  1803               	skipnc
  1178  00BB  0A25               	incf	___ftmul@f2+2,w
  1179  00BC  1D03               	btfss	3,2
  1180  00BD  07AD               	addwf	___ftmul@f3_as_product+2,f
  1181  00BE                     i1l955:	
  1182  00BE  3001               	movlw	1
  1183  00BF                     u101_25:	
  1184  00BF  1003               	clrc
  1185  00C0  0CA2               	rrf	___ftmul@f1+2,f
  1186  00C1  0CA1               	rrf	___ftmul@f1+1,f
  1187  00C2  0CA0               	rrf	___ftmul@f1,f
  1188  00C3  3EFF               	addlw	-1
  1189  00C4  1D03               	skipz
  1190  00C5  28BF               	goto	u101_25
  1191  00C6  3001               	movlw	1
  1192  00C7                     u102_25:	
  1193  00C7  1003               	clrc
  1194  00C8  0CAD               	rrf	___ftmul@f3_as_product+2,f
  1195  00C9  0CAC               	rrf	___ftmul@f3_as_product+1,f
  1196  00CA  0CAB               	rrf	___ftmul@f3_as_product,f
  1197  00CB  3EFF               	addlw	-1
  1198  00CC  1D03               	skipz
  1199  00CD  28C7               	goto	u102_25
  1200  00CE  3001               	movlw	1
  1201  00CF  02AE               	subwf	___ftmul@cntr,f
  1202  00D0  1D03               	btfss	3,2
  1203  00D1  28AE               	goto	i1l951
  1204  00D2  082B               	movf	___ftmul@f3_as_product,w
  1205  00D3  00F0               	movwf	___ftpack@arg
  1206  00D4  082C               	movf	___ftmul@f3_as_product+1,w
  1207  00D5  00F1               	movwf	___ftpack@arg+1
  1208  00D6  082D               	movf	___ftmul@f3_as_product+2,w
  1209  00D7  00F2               	movwf	___ftpack@arg+2
  1210  00D8  082A               	movf	___ftmul@exp,w
  1211  00D9  00A6               	movwf	??___ftmul
  1212  00DA  0826               	movf	??___ftmul,w
  1213  00DB  00F3               	movwf	___ftpack@exp
  1214  00DC  082F               	movf	___ftmul@sign,w
  1215  00DD  00A7               	movwf	??___ftmul+1
  1216  00DE  0827               	movf	??___ftmul+1,w
  1217  00DF  00F4               	movwf	___ftpack@sign
  1218  00E0  120A  118A  221A   	fcall	___ftpack
  1219  00E3  0870               	movf	?___ftpack,w
  1220  00E4  1283               	bcf	3,5	;RP0=0, select bank0
  1221  00E5  1303               	bcf	3,6	;RP1=0, select bank0
  1222  00E6  00A0               	movwf	?___ftmul
  1223  00E7  0871               	movf	?___ftpack+1,w
  1224  00E8  00A1               	movwf	?___ftmul+1
  1225  00E9  0872               	movf	?___ftpack+2,w
  1226  00EA  00A2               	movwf	?___ftmul+2
  1227  00EB  0008               	return
  1228  00EC                     __end_of___ftmul:	
  1229                           
  1230                           	psect	text6
  1231  0352                     __ptext6:	
  1232 ;; *************** function ___awtoft *****************
  1233 ;; Defined at:
  1234 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\awtoft.c"
  1235 ;; Parameters:    Size  Location     Type
  1236 ;;  c               2    8[COMMON] int 
  1237 ;; Auto vars:     Size  Location     Type
  1238 ;;  sign            1   13[COMMON] unsigned char 
  1239 ;; Return value:  Size  Location     Type
  1240 ;;                  3    8[COMMON] float 
  1241 ;; Registers used:
  1242 ;;		wreg, status,2, status,0, pclath, cstack
  1243 ;; Tracked objects:
  1244 ;;		On entry : 0/0
  1245 ;;		On exit  : 0/0
  1246 ;;		Unchanged: 0/0
  1247 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1248 ;;      Params:         3       0       0       0       0
  1249 ;;      Locals:         1       0       0       0       0
  1250 ;;      Temps:          2       0       0       0       0
  1251 ;;      Totals:         6       0       0       0       0
  1252 ;;Total ram usage:        6 bytes
  1253 ;; Hardware stack levels used:    1
  1254 ;; Hardware stack levels required when called:    1
  1255 ;; This function calls:
  1256 ;;		___ftpack
  1257 ;; This function is called by:
  1258 ;;		_ISR
  1259 ;; This function uses a non-reentrant model
  1260 ;;
  1261                           
  1262                           
  1263                           ;psect for function ___awtoft
  1264  0352                     ___awtoft:	
  1265                           
  1266                           ;incstack = 0
  1267                           ; Regs used in ___awtoft: [wreg+status,2+status,0+pclath+cstack]
  1268  0352  01FD               	clrf	___awtoft@sign
  1269  0353  1FF9               	btfss	___awtoft@c+1,7
  1270  0354  2B5C               	goto	i1l911
  1271  0355  09F8               	comf	___awtoft@c,f
  1272  0356  09F9               	comf	___awtoft@c+1,f
  1273  0357  0AF8               	incf	___awtoft@c,f
  1274  0358  1903               	skipnz
  1275  0359  0AF9               	incf	___awtoft@c+1,f
  1276  035A  01FD               	clrf	___awtoft@sign
  1277  035B  0AFD               	incf	___awtoft@sign,f
  1278  035C                     i1l911:	
  1279  035C  0878               	movf	___awtoft@c,w
  1280  035D  00F0               	movwf	___ftpack@arg
  1281  035E  0879               	movf	___awtoft@c+1,w
  1282  035F  00F1               	movwf	___ftpack@arg+1
  1283  0360  01F2               	clrf	___ftpack@arg+2
  1284  0361  308E               	movlw	142
  1285  0362  00FB               	movwf	??___awtoft
  1286  0363  087B               	movf	??___awtoft,w
  1287  0364  00F3               	movwf	___ftpack@exp
  1288  0365  087D               	movf	___awtoft@sign,w
  1289  0366  00FC               	movwf	??___awtoft+1
  1290  0367  087C               	movf	??___awtoft+1,w
  1291  0368  00F4               	movwf	___ftpack@sign
  1292  0369  120A  118A  221A   	fcall	___ftpack
  1293  036C  0870               	movf	?___ftpack,w
  1294  036D  00F8               	movwf	?___awtoft
  1295  036E  0871               	movf	?___ftpack+1,w
  1296  036F  00F9               	movwf	?___awtoft+1
  1297  0370  0872               	movf	?___ftpack+2,w
  1298  0371  00FA               	movwf	?___awtoft+2
  1299  0372  0008               	return
  1300  0373                     __end_of___awtoft:	
  1301                           
  1302                           	psect	text7
  1303  021A                     __ptext7:	
  1304 ;; *************** function ___ftpack *****************
  1305 ;; Defined at:
  1306 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\float.c"
  1307 ;; Parameters:    Size  Location     Type
  1308 ;;  arg             3    0[COMMON] unsigned um
  1309 ;;  exp             1    3[COMMON] unsigned char 
  1310 ;;  sign            1    4[COMMON] unsigned char 
  1311 ;; Auto vars:     Size  Location     Type
  1312 ;;		None
  1313 ;; Return value:  Size  Location     Type
  1314 ;;                  3    0[COMMON] float 
  1315 ;; Registers used:
  1316 ;;		wreg, status,2, status,0
  1317 ;; Tracked objects:
  1318 ;;		On entry : 0/0
  1319 ;;		On exit  : 0/0
  1320 ;;		Unchanged: 0/0
  1321 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1322 ;;      Params:         5       0       0       0       0
  1323 ;;      Locals:         0       0       0       0       0
  1324 ;;      Temps:          3       0       0       0       0
  1325 ;;      Totals:         8       0       0       0       0
  1326 ;;Total ram usage:        8 bytes
  1327 ;; Hardware stack levels used:    1
  1328 ;; This function calls:
  1329 ;;		Nothing
  1330 ;; This function is called by:
  1331 ;;		___awtoft
  1332 ;;		___ftmul
  1333 ;; This function uses a non-reentrant model
  1334 ;;
  1335                           
  1336                           
  1337                           ;psect for function ___ftpack
  1338  021A                     ___ftpack:	
  1339                           
  1340                           ;incstack = 0
  1341                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  1342  021A  0873               	movf	___ftpack@exp,w
  1343  021B  1903               	btfsc	3,2
  1344  021C  2A22               	goto	i1l779
  1345  021D  0872               	movf	___ftpack@arg+2,w
  1346  021E  0471               	iorwf	___ftpack@arg+1,w
  1347  021F  0470               	iorwf	___ftpack@arg,w
  1348  0220  1D03               	skipz
  1349  0221  2A35               	goto	i1l785
  1350  0222                     i1l779:	
  1351  0222  3000               	movlw	0
  1352  0223  00F0               	movwf	?___ftpack
  1353  0224  3000               	movlw	0
  1354  0225  00F1               	movwf	?___ftpack+1
  1355  0226  3000               	movlw	0
  1356  0227  00F2               	movwf	?___ftpack+2
  1357  0228  0008               	return
  1358  0229                     i1l783:	
  1359  0229  3001               	movlw	1
  1360  022A  00F5               	movwf	??___ftpack
  1361  022B  0875               	movf	??___ftpack,w
  1362  022C  07F3               	addwf	___ftpack@exp,f
  1363  022D  3001               	movlw	1
  1364  022E                     u60_25:	
  1365  022E  1003               	clrc
  1366  022F  0CF2               	rrf	___ftpack@arg+2,f
  1367  0230  0CF1               	rrf	___ftpack@arg+1,f
  1368  0231  0CF0               	rrf	___ftpack@arg,f
  1369  0232  3EFF               	addlw	-1
  1370  0233  1D03               	skipz
  1371  0234  2A2E               	goto	u60_25
  1372  0235                     i1l785:	
  1373  0235  30FE               	movlw	254
  1374  0236  0572               	andwf	___ftpack@arg+2,w
  1375  0237  1903               	btfsc	3,2
  1376  0238  2A50               	goto	i1l289
  1377  0239  2A29               	goto	i1l783
  1378  023A                     i1l787:	
  1379  023A  3001               	movlw	1
  1380  023B  00F5               	movwf	??___ftpack
  1381  023C  0875               	movf	??___ftpack,w
  1382  023D  07F3               	addwf	___ftpack@exp,f
  1383  023E  3001               	movlw	1
  1384  023F  07F0               	addwf	___ftpack@arg,f
  1385  0240  3000               	movlw	0
  1386  0241  1803               	skipnc
  1387  0242  3001               	movlw	1
  1388  0243  07F1               	addwf	___ftpack@arg+1,f
  1389  0244  3000               	movlw	0
  1390  0245  1803               	skipnc
  1391  0246  3001               	movlw	1
  1392  0247  07F2               	addwf	___ftpack@arg+2,f
  1393  0248  3001               	movlw	1
  1394  0249                     u62_25:	
  1395  0249  1003               	clrc
  1396  024A  0CF2               	rrf	___ftpack@arg+2,f
  1397  024B  0CF1               	rrf	___ftpack@arg+1,f
  1398  024C  0CF0               	rrf	___ftpack@arg,f
  1399  024D  3EFF               	addlw	-1
  1400  024E  1D03               	skipz
  1401  024F  2A49               	goto	u62_25
  1402  0250                     i1l289:	
  1403  0250  30FF               	movlw	255
  1404  0251  0572               	andwf	___ftpack@arg+2,w
  1405  0252  1903               	btfsc	3,2
  1406  0253  2A5F               	goto	i1l795
  1407  0254  2A3A               	goto	i1l787
  1408  0255                     i1l793:	
  1409  0255  3001               	movlw	1
  1410  0256  02F3               	subwf	___ftpack@exp,f
  1411  0257  3001               	movlw	1
  1412  0258                     u64_25:	
  1413  0258  1003               	clrc
  1414  0259  0DF0               	rlf	___ftpack@arg,f
  1415  025A  0DF1               	rlf	___ftpack@arg+1,f
  1416  025B  0DF2               	rlf	___ftpack@arg+2,f
  1417  025C  3EFF               	addlw	-1
  1418  025D  1D03               	skipz
  1419  025E  2A58               	goto	u64_25
  1420  025F                     i1l795:	
  1421  025F  1FF1               	btfss	___ftpack@arg+1,7
  1422  0260  2A55               	goto	i1l793
  1423  0261  1873               	btfsc	___ftpack@exp,0
  1424  0262  2A69               	goto	i1l295
  1425  0263  30FF               	movlw	255
  1426  0264  05F0               	andwf	___ftpack@arg,f
  1427  0265  307F               	movlw	127
  1428  0266  05F1               	andwf	___ftpack@arg+1,f
  1429  0267  30FF               	movlw	255
  1430  0268  05F2               	andwf	___ftpack@arg+2,f
  1431  0269                     i1l295:	
  1432  0269  1003               	clrc
  1433  026A  0CF3               	rrf	___ftpack@exp,f
  1434  026B  0873               	movf	___ftpack@exp,w
  1435  026C  00F5               	movwf	??___ftpack
  1436  026D  01F6               	clrf	??___ftpack+1
  1437  026E  01F7               	clrf	??___ftpack+2
  1438  026F  3010               	movlw	16
  1439  0270                     u67_25:	
  1440  0270  1003               	clrc
  1441  0271  0DF5               	rlf	??___ftpack,f
  1442  0272  0DF6               	rlf	??___ftpack+1,f
  1443  0273  0DF7               	rlf	??___ftpack+2,f
  1444  0274  3EFF               	addlw	-1
  1445  0275  1D03               	skipz
  1446  0276  2A70               	goto	u67_25
  1447  0277  0875               	movf	??___ftpack,w
  1448  0278  04F0               	iorwf	___ftpack@arg,f
  1449  0279  0876               	movf	??___ftpack+1,w
  1450  027A  04F1               	iorwf	___ftpack@arg+1,f
  1451  027B  0877               	movf	??___ftpack+2,w
  1452  027C  04F2               	iorwf	___ftpack@arg+2,f
  1453  027D  0874               	movf	___ftpack@sign,w
  1454  027E  1903               	btfsc	3,2
  1455  027F  0008               	return
  1456  0280  17F2               	bsf	___ftpack@arg+2,7
  1457  0281  0008               	return
  1458  0282                     __end_of___ftpack:	
  1459                           
  1460                           	psect	text8
  1461  02DD                     __ptext8:	
  1462 ;; *************** function ___awmod *****************
  1463 ;; Defined at:
  1464 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\awmod.c"
  1465 ;; Parameters:    Size  Location     Type
  1466 ;;  divisor         2    0[COMMON] int 
  1467 ;;  dividend        2    2[COMMON] int 
  1468 ;; Auto vars:     Size  Location     Type
  1469 ;;  sign            1    6[COMMON] unsigned char 
  1470 ;;  counter         1    5[COMMON] unsigned char 
  1471 ;; Return value:  Size  Location     Type
  1472 ;;                  2    0[COMMON] int 
  1473 ;; Registers used:
  1474 ;;		wreg, status,2, status,0
  1475 ;; Tracked objects:
  1476 ;;		On entry : 0/0
  1477 ;;		On exit  : 0/0
  1478 ;;		Unchanged: 0/0
  1479 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1480 ;;      Params:         4       0       0       0       0
  1481 ;;      Locals:         2       0       0       0       0
  1482 ;;      Temps:          1       0       0       0       0
  1483 ;;      Totals:         7       0       0       0       0
  1484 ;;Total ram usage:        7 bytes
  1485 ;; Hardware stack levels used:    1
  1486 ;; This function calls:
  1487 ;;		Nothing
  1488 ;; This function is called by:
  1489 ;;		_ISR
  1490 ;; This function uses a non-reentrant model
  1491 ;;
  1492                           
  1493                           
  1494                           ;psect for function ___awmod
  1495  02DD                     ___awmod:	
  1496                           
  1497                           ;incstack = 0
  1498                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  1499  02DD  01F6               	clrf	___awmod@sign
  1500  02DE  1FF3               	btfss	___awmod@dividend+1,7
  1501  02DF  2AE7               	goto	i1l873
  1502  02E0  09F2               	comf	___awmod@dividend,f
  1503  02E1  09F3               	comf	___awmod@dividend+1,f
  1504  02E2  0AF2               	incf	___awmod@dividend,f
  1505  02E3  1903               	skipnz
  1506  02E4  0AF3               	incf	___awmod@dividend+1,f
  1507  02E5  01F6               	clrf	___awmod@sign
  1508  02E6  0AF6               	incf	___awmod@sign,f
  1509  02E7                     i1l873:	
  1510  02E7  1FF1               	btfss	___awmod@divisor+1,7
  1511  02E8  2AEE               	goto	i1l877
  1512  02E9  09F0               	comf	___awmod@divisor,f
  1513  02EA  09F1               	comf	___awmod@divisor+1,f
  1514  02EB  0AF0               	incf	___awmod@divisor,f
  1515  02EC  1903               	skipnz
  1516  02ED  0AF1               	incf	___awmod@divisor+1,f
  1517  02EE                     i1l877:	
  1518  02EE  0871               	movf	___awmod@divisor+1,w
  1519  02EF  0470               	iorwf	___awmod@divisor,w
  1520  02F0  1903               	skipnz
  1521  02F1  2B1B               	goto	i1l895
  1522  02F2  01F5               	clrf	___awmod@counter
  1523  02F3  0AF5               	incf	___awmod@counter,f
  1524  02F4                     i1l885:	
  1525  02F4  1BF1               	btfsc	___awmod@divisor+1,7
  1526  02F5  2B02               	goto	i1l887
  1527  02F6  3001               	movlw	1
  1528  02F7                     u83_25:	
  1529  02F7  1003               	clrc
  1530  02F8  0DF0               	rlf	___awmod@divisor,f
  1531  02F9  0DF1               	rlf	___awmod@divisor+1,f
  1532  02FA  3EFF               	addlw	-1
  1533  02FB  1D03               	skipz
  1534  02FC  2AF7               	goto	u83_25
  1535  02FD  3001               	movlw	1
  1536  02FE  00F4               	movwf	??___awmod
  1537  02FF  0874               	movf	??___awmod,w
  1538  0300  07F5               	addwf	___awmod@counter,f
  1539  0301  2AF4               	goto	i1l885
  1540  0302                     i1l887:	
  1541  0302  0871               	movf	___awmod@divisor+1,w
  1542  0303  0273               	subwf	___awmod@dividend+1,w
  1543  0304  1D03               	skipz
  1544  0305  2B08               	goto	u85_25
  1545  0306  0870               	movf	___awmod@divisor,w
  1546  0307  0272               	subwf	___awmod@dividend,w
  1547  0308                     u85_25:	
  1548  0308  1C03               	skipc
  1549  0309  2B10               	goto	i1l891
  1550  030A  0870               	movf	___awmod@divisor,w
  1551  030B  02F2               	subwf	___awmod@dividend,f
  1552  030C  0871               	movf	___awmod@divisor+1,w
  1553  030D  1C03               	skipc
  1554  030E  03F3               	decf	___awmod@dividend+1,f
  1555  030F  02F3               	subwf	___awmod@dividend+1,f
  1556  0310                     i1l891:	
  1557  0310  3001               	movlw	1
  1558  0311                     u86_25:	
  1559  0311  1003               	clrc
  1560  0312  0CF1               	rrf	___awmod@divisor+1,f
  1561  0313  0CF0               	rrf	___awmod@divisor,f
  1562  0314  3EFF               	addlw	-1
  1563  0315  1D03               	skipz
  1564  0316  2B11               	goto	u86_25
  1565  0317  3001               	movlw	1
  1566  0318  02F5               	subwf	___awmod@counter,f
  1567  0319  1D03               	btfss	3,2
  1568  031A  2B02               	goto	i1l887
  1569  031B                     i1l895:	
  1570  031B  0876               	movf	___awmod@sign,w
  1571  031C  1903               	btfsc	3,2
  1572  031D  2B23               	goto	i1l899
  1573  031E  09F2               	comf	___awmod@dividend,f
  1574  031F  09F3               	comf	___awmod@dividend+1,f
  1575  0320  0AF2               	incf	___awmod@dividend,f
  1576  0321  1903               	skipnz
  1577  0322  0AF3               	incf	___awmod@dividend+1,f
  1578  0323                     i1l899:	
  1579  0323  0873               	movf	___awmod@dividend+1,w
  1580  0324  01F1               	clrf	?___awmod+1
  1581  0325  07F1               	addwf	?___awmod+1,f
  1582  0326  0872               	movf	___awmod@dividend,w
  1583  0327  01F0               	clrf	?___awmod
  1584  0328  07F0               	addwf	?___awmod,f
  1585  0329  0008               	return
  1586  032A                     __end_of___awmod:	
  1587                           
  1588                           	psect	text9
  1589  0282                     __ptext9:	
  1590 ;; *************** function ___awdiv *****************
  1591 ;; Defined at:
  1592 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\awdiv.c"
  1593 ;; Parameters:    Size  Location     Type
  1594 ;;  divisor         2    0[COMMON] int 
  1595 ;;  dividend        2    2[COMMON] int 
  1596 ;; Auto vars:     Size  Location     Type
  1597 ;;  quotient        2    7[COMMON] int 
  1598 ;;  sign            1    6[COMMON] unsigned char 
  1599 ;;  counter         1    5[COMMON] unsigned char 
  1600 ;; Return value:  Size  Location     Type
  1601 ;;                  2    0[COMMON] int 
  1602 ;; Registers used:
  1603 ;;		wreg, status,2, status,0
  1604 ;; Tracked objects:
  1605 ;;		On entry : 0/0
  1606 ;;		On exit  : 0/0
  1607 ;;		Unchanged: 0/0
  1608 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1609 ;;      Params:         4       0       0       0       0
  1610 ;;      Locals:         4       0       0       0       0
  1611 ;;      Temps:          1       0       0       0       0
  1612 ;;      Totals:         9       0       0       0       0
  1613 ;;Total ram usage:        9 bytes
  1614 ;; Hardware stack levels used:    1
  1615 ;; This function calls:
  1616 ;;		Nothing
  1617 ;; This function is called by:
  1618 ;;		_ISR
  1619 ;; This function uses a non-reentrant model
  1620 ;;
  1621                           
  1622                           
  1623                           ;psect for function ___awdiv
  1624  0282                     ___awdiv:	
  1625                           
  1626                           ;incstack = 0
  1627                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  1628  0282  01F6               	clrf	___awdiv@sign
  1629  0283  1FF1               	btfss	___awdiv@divisor+1,7
  1630  0284  2A8C               	goto	i1l829
  1631  0285  09F0               	comf	___awdiv@divisor,f
  1632  0286  09F1               	comf	___awdiv@divisor+1,f
  1633  0287  0AF0               	incf	___awdiv@divisor,f
  1634  0288  1903               	skipnz
  1635  0289  0AF1               	incf	___awdiv@divisor+1,f
  1636  028A  01F6               	clrf	___awdiv@sign
  1637  028B  0AF6               	incf	___awdiv@sign,f
  1638  028C                     i1l829:	
  1639  028C  1FF3               	btfss	___awdiv@dividend+1,7
  1640  028D  2A97               	goto	i1l835
  1641  028E  09F2               	comf	___awdiv@dividend,f
  1642  028F  09F3               	comf	___awdiv@dividend+1,f
  1643  0290  0AF2               	incf	___awdiv@dividend,f
  1644  0291  1903               	skipnz
  1645  0292  0AF3               	incf	___awdiv@dividend+1,f
  1646  0293  3001               	movlw	1
  1647  0294  00F4               	movwf	??___awdiv
  1648  0295  0874               	movf	??___awdiv,w
  1649  0296  06F6               	xorwf	___awdiv@sign,f
  1650  0297                     i1l835:	
  1651  0297  01F7               	clrf	___awdiv@quotient
  1652  0298  01F8               	clrf	___awdiv@quotient+1
  1653  0299  0871               	movf	___awdiv@divisor+1,w
  1654  029A  0470               	iorwf	___awdiv@divisor,w
  1655  029B  1903               	skipnz
  1656  029C  2ACE               	goto	i1l857
  1657  029D  01F5               	clrf	___awdiv@counter
  1658  029E  0AF5               	incf	___awdiv@counter,f
  1659  029F                     i1l845:	
  1660  029F  1BF1               	btfsc	___awdiv@divisor+1,7
  1661  02A0  2AAD               	goto	i1l847
  1662  02A1  3001               	movlw	1
  1663  02A2                     u73_25:	
  1664  02A2  1003               	clrc
  1665  02A3  0DF0               	rlf	___awdiv@divisor,f
  1666  02A4  0DF1               	rlf	___awdiv@divisor+1,f
  1667  02A5  3EFF               	addlw	-1
  1668  02A6  1D03               	skipz
  1669  02A7  2AA2               	goto	u73_25
  1670  02A8  3001               	movlw	1
  1671  02A9  00F4               	movwf	??___awdiv
  1672  02AA  0874               	movf	??___awdiv,w
  1673  02AB  07F5               	addwf	___awdiv@counter,f
  1674  02AC  2A9F               	goto	i1l845
  1675  02AD                     i1l847:	
  1676  02AD  3001               	movlw	1
  1677  02AE                     u75_25:	
  1678  02AE  1003               	clrc
  1679  02AF  0DF7               	rlf	___awdiv@quotient,f
  1680  02B0  0DF8               	rlf	___awdiv@quotient+1,f
  1681  02B1  3EFF               	addlw	-1
  1682  02B2  1D03               	skipz
  1683  02B3  2AAE               	goto	u75_25
  1684  02B4  0871               	movf	___awdiv@divisor+1,w
  1685  02B5  0273               	subwf	___awdiv@dividend+1,w
  1686  02B6  1D03               	skipz
  1687  02B7  2ABA               	goto	u76_25
  1688  02B8  0870               	movf	___awdiv@divisor,w
  1689  02B9  0272               	subwf	___awdiv@dividend,w
  1690  02BA                     u76_25:	
  1691  02BA  1C03               	skipc
  1692  02BB  2AC3               	goto	i1l853
  1693  02BC  0870               	movf	___awdiv@divisor,w
  1694  02BD  02F2               	subwf	___awdiv@dividend,f
  1695  02BE  0871               	movf	___awdiv@divisor+1,w
  1696  02BF  1C03               	skipc
  1697  02C0  03F3               	decf	___awdiv@dividend+1,f
  1698  02C1  02F3               	subwf	___awdiv@dividend+1,f
  1699  02C2  1477               	bsf	___awdiv@quotient,0
  1700  02C3                     i1l853:	
  1701  02C3  3001               	movlw	1
  1702  02C4                     u77_25:	
  1703  02C4  1003               	clrc
  1704  02C5  0CF1               	rrf	___awdiv@divisor+1,f
  1705  02C6  0CF0               	rrf	___awdiv@divisor,f
  1706  02C7  3EFF               	addlw	-1
  1707  02C8  1D03               	skipz
  1708  02C9  2AC4               	goto	u77_25
  1709  02CA  3001               	movlw	1
  1710  02CB  02F5               	subwf	___awdiv@counter,f
  1711  02CC  1D03               	btfss	3,2
  1712  02CD  2AAD               	goto	i1l847
  1713  02CE                     i1l857:	
  1714  02CE  0876               	movf	___awdiv@sign,w
  1715  02CF  1903               	btfsc	3,2
  1716  02D0  2AD6               	goto	i1l861
  1717  02D1  09F7               	comf	___awdiv@quotient,f
  1718  02D2  09F8               	comf	___awdiv@quotient+1,f
  1719  02D3  0AF7               	incf	___awdiv@quotient,f
  1720  02D4  1903               	skipnz
  1721  02D5  0AF8               	incf	___awdiv@quotient+1,f
  1722  02D6                     i1l861:	
  1723  02D6  0878               	movf	___awdiv@quotient+1,w
  1724  02D7  01F1               	clrf	?___awdiv+1
  1725  02D8  07F1               	addwf	?___awdiv+1,f
  1726  02D9  0877               	movf	___awdiv@quotient,w
  1727  02DA  01F0               	clrf	?___awdiv
  1728  02DB  07F0               	addwf	?___awdiv,f
  1729  02DC  0008               	return
  1730  02DD                     __end_of___awdiv:	
  1731  007E                     btemp	set	126	;btemp
  1732  007E                     wtemp	set	126
  1733  007E                     wtemp0	set	126
  1734  0080                     wtemp1	set	128
  1735  0082                     wtemp2	set	130
  1736  0084                     wtemp3	set	132
  1737  0086                     wtemp4	set	134
  1738  0088                     wtemp5	set	136
  1739  007F                     wtemp6	set	127
  1740  007E                     ttemp	set	126
  1741  007E                     ttemp0	set	126
  1742  0081                     ttemp1	set	129
  1743  0084                     ttemp2	set	132
  1744  0087                     ttemp3	set	135
  1745  007F                     ttemp4	set	127
  1746  007E                     ltemp	set	126
  1747  007E                     ltemp0	set	126
  1748  0082                     ltemp1	set	130
  1749  0086                     ltemp2	set	134
  1750  0080                     ltemp3	set	128


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     46      46
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    _ISR->___awtoft
    ___fttol->___awtoft
    ___ftmul->___awtoft
    ___awtoft->___ftpack

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    _ISR->___fttol
    ___fttol->___ftmul

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (1) _ISR                                                 16    16      0    5210
                                             30 BANK0     16    16      0
                            ___awdiv
                            ___awmod
                           ___awtoft
                            ___ftmul
                            ___fttol
                              _delay
                            _readADC
 ---------------------------------------------------------------------------------
 (2) _readADC                                              6     4      2      70
                                              0 COMMON     6     4      2
 ---------------------------------------------------------------------------------
 (2) _delay                                                5     3      2      99
                                              0 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 (2) ___fttol                                             14    10      4     305
                                             16 BANK0     14    10      4
                           ___awtoft (ARG)
                            ___ftmul (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftmul                                             16    10      6    2039
                                              0 BANK0     16    10      6
                           ___awtoft (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___awtoft                                             6     3      3    1751
                                              8 COMMON     6     3      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___ftpack                                             8     3      5    1607
                                              0 COMMON     8     3      5
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              7     3      4     402
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     406
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)

 _ISR (ROOT)
   ___awdiv
   ___awmod
   ___awtoft
     ___ftpack
   ___ftmul
     ___awtoft (ARG)
       ___ftpack
     ___ftpack (ARG)
   ___fttol
     ___awtoft (ARG)
       ___ftpack
     ___ftmul (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___ftpack (ARG)
   _delay
   _readADC

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     2E      2E       5       57.5%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V1.33 build 59893 
Symbol Table                                                                                   Tue Apr 02 17:57:45 2024

            __CFG_CP$OFF 0000                       l33 038A                       _GO 00FA  
           ___awdiv@sign 0076                      _GIE 005F             __CFG_CPD$OFF 0000  
                    _ISR 00EC                      fsr0 0004             ___awmod@sign 0076  
           __CFG_FOSC$XT 0000             __CFG_LVP$OFF 0000                     ?_ISR 0070  
                   _ADIE 0466                     _ADIF 0066                     _PEIE 005E  
                   i1l41 038D             __CFG_WRT$OFF 0000                     _main 0373  
           ___ftpack@arg 0070             ___ftpack@exp 0073                     btemp 007E  
          __CFG_BOREN$ON 0000                     ltemp 007E                     start 0012  
                   ttemp 007E                     wtemp 007E             ___ftmul@cntr 002E  
           ___ftmul@sign 002F                    ??_ISR 003E             ___fttol@exp1 003D  
           ___fttol@lval 0039          ISR@whole_number 0046                    ?_main 0070  
        __end_of___awdiv 02DD            __CFG_WDTE$OFF 0000          __end_of___awmod 032A  
        __end_of___ftmul 00EC          ___awdiv@divisor 0070          __end_of___fttol 021A  
                  i1l295 0269                    i1l289 0250                    i1l911 035C  
                  i1l921 0031                    i1l835 0297                    i1l861 02D6  
                  i1l853 02C3                    i1l845 029F                    i1l829 028C  
                  i1l847 02AD                    i1l783 0229                    i1l951 00AE  
                  i1l943 0096                    i1l927 0047                    i1l857 02CE  
                  i1l873 02E7                    i1l793 0255                    i1l785 0235  
                  i1l891 0310                    i1l795 025F                    i1l787 023A  
                  i1l779 0222                    i1l955 00BE                    i1l939 0086  
                  i1l971 01A6                    i1l885 02F4                    i1l877 02EE  
                  i1l887 0302                    i1l895 031B                    i1l991 01E8  
                  i1l899 0323                    i1l997 01F5                    i1l989 01D8  
                  i1l999 0200          ___awdiv@counter 0075                    _PORTB 0006  
                  u60_25 022E                    u62_25 0249                    u64_25 0258  
                  _TRISB 0086                    u73_25 02A2                    u75_25 02AE  
                  u83_25 02F7                    u67_25 0270                    u76_25 02BA  
                  u92_25 0053                    u77_25 02C4                    u85_25 0308  
                  u93_25 0065                    u69_25 0397                    u86_25 0311  
                  u96_25 0097                    u97_25 009F            __CFG_PWRTE$ON 0000  
        __end_of_readADC 0352            ___awtoft@sign 007D                    _delay 038B  
            readADC@temp 0074            ___ftpack@sign 0074                    pclath 000A  
                  ltemp0 007E                    ltemp1 0082                    ltemp2 0086  
                  ltemp3 0080                    ttemp0 007E                    ttemp1 0081  
                  ttemp2 0084                    ttemp3 0087                    ttemp4 007F  
                  status 0003                    wtemp0 007E                    wtemp1 0080  
                  wtemp2 0082                    wtemp3 0084                    wtemp4 0086  
                  wtemp5 0088                    wtemp6 007F        ISR@decimal_number 0044  
        __initialization 0015             __end_of_main 038B                   ??_main 0000  
          ___fttol@sign1 0038                   ?_delay 0070                   _ADCON0 001F  
                 _ADCON1 009F                   _ADRESH 001E                   _ADRESL 009E  
       ___awdiv@dividend 0072         __end_of___awtoft 0373         __end_of___ftpack 0282  
                 i1l1001 0203                   u101_25 00BF                   i1l1005 0211  
                 i1l1027 0174                   u102_25 00C7                   u111_25 01F7  
                 u105_25 01AD                   u108_25 01D9                ??___awdiv 0074  
              ??___awmod 0074                ??___ftmul 0026                ??___fttol 0034  
                 delay@i 0073         ___awdiv@quotient 0077          ___awmod@divisor 0070  
        ___awmod@counter 0075    ___ftmul@f3_as_product 002B                ??_readADC 0072  
                 saved_w 007E  __end_of__initialization 0015               ___awtoft@c 0078  
             ___ftmul@f1 0020               ___ftmul@f2 0023               ___fttol@f1 0030  
         __pcstackCOMMON 0070            __end_of_delay 03A0    ISR@resultOfConversion 004C  
                ??_delay 0072                ISR@result 0048               __pmaintext 0373  
             __pintentry 0004                ?___awtoft 0078                ?___ftpack 0070  
                ___awdiv 0282                  ___awmod 02DD                  ___ftmul 0019  
                ___fttol 018C               ??___awtoft 007B               ??___ftpack 0075  
                __ptext0 0000                  __ptext1 00EC                  __ptext2 032A  
                __ptext3 038B                  __ptext4 018C                  __ptext5 0019  
                __ptext6 0352                  __ptext7 021A                  __ptext8 02DD  
                __ptext9 0282                  _readADC 032A             __size_of_ISR 00A0  
       ___awmod@dividend 0072     end_of_initialization 0015              ___ftmul@exp 002A  
    start_initialization 0015              __end_of_ISR 018C        __size_of___awtoft 0021  
      __size_of___ftpack 0068                ___latbits 0002            __pcstackBANK0 0020  
          __pcstackBANK1 0000               ISR@d_value 004A                 ?___awdiv 0070  
               ?___awmod 0070                 ?___ftmul 0020                 ?___fttol 0030  
               ?_readADC 0070             delay@delayIn 0070           __size_of_delay 0015  
      interrupt_function 0004         __size_of___awdiv 005B         __size_of___awmod 004D  
       __size_of___ftmul 00D3         __size_of___fttol 008E                 ___awtoft 0352  
               ___ftpack 021A         __size_of_readADC 0028            __size_of_main 0018  
               intlevel1 0000  

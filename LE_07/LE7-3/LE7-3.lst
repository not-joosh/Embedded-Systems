

Microchip Technology PIC LITE Macro Assembler V1.33 build 59893 
                                                                                               Sat Apr 27 11:13:46 2024

Microchip Technology Omniscient Code Generator (Lite mode) build 59893
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	strings,global,class=STRING,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
     7                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2
    16                           	psect	text6,local,class=CODE,merge=1,delta=2
    17                           	psect	text7,local,class=CODE,merge=1,delta=2
    18                           	psect	text8,local,class=CODE,merge=1,delta=2
    19                           	psect	text9,local,class=CODE,merge=1,delta=2
    20                           	psect	text10,local,class=CODE,merge=1,delta=2
    21                           	psect	text11,local,class=CODE,merge=1,delta=2
    22                           	psect	text12,local,class=CODE,merge=1,delta=2
    23                           	psect	text13,local,class=CODE,merge=1,delta=2
    24                           	psect	text14,local,class=CODE,merge=1,delta=2
    25                           	psect	text15,local,class=CODE,merge=1,delta=2
    26                           	psect	text16,local,class=CODE,merge=1,delta=2
    27                           	psect	text17,local,class=CODE,merge=1,delta=2
    28                           	psect	text18,local,class=CODE,merge=1,delta=2
    29                           	psect	text19,local,class=CODE,merge=1,delta=2
    30                           	psect	text20,local,class=CODE,merge=1,delta=2
    31                           	psect	text21,local,class=CODE,merge=1,delta=2
    32                           	psect	text22,local,class=CODE,merge=1,delta=2
    33                           	psect	text23,local,class=CODE,merge=1,delta=2
    34                           	psect	text24,local,class=CODE,merge=1,delta=2
    35                           	psect	text25,local,class=CODE,merge=1,delta=2
    36                           	psect	text26,local,class=CODE,merge=1,delta=2
    37                           	psect	text27,local,class=CODE,merge=1,delta=2
    38                           	psect	text28,local,class=CODE,merge=1,delta=2
    39                           	psect	text29,local,class=CODE,merge=1,delta=2
    40                           	psect	text30,local,class=CODE,merge=1,delta=2
    41                           	psect	text31,local,class=CODE,merge=1,delta=2
    42                           	psect	text32,local,class=CODE,merge=1,delta=2
    43                           	psect	text33,local,class=CODE,merge=1,delta=2
    44                           	psect	text34,local,class=CODE,merge=1,delta=2
    45                           	dabs	1,0x7E,2
    46  0000                     	;# 
    47  0001                     	;# 
    48  0002                     	;# 
    49  0003                     	;# 
    50  0004                     	;# 
    51  0005                     	;# 
    52  0006                     	;# 
    53  0007                     	;# 
    54  0008                     	;# 
    55  0009                     	;# 
    56  000A                     	;# 
    57  000B                     	;# 
    58  000C                     	;# 
    59  000D                     	;# 
    60  000E                     	;# 
    61  000E                     	;# 
    62  000F                     	;# 
    63  0010                     	;# 
    64  0011                     	;# 
    65  0012                     	;# 
    66  0013                     	;# 
    67  0014                     	;# 
    68  0015                     	;# 
    69  0015                     	;# 
    70  0016                     	;# 
    71  0017                     	;# 
    72  0018                     	;# 
    73  0019                     	;# 
    74  001A                     	;# 
    75  001B                     	;# 
    76  001B                     	;# 
    77  001C                     	;# 
    78  001D                     	;# 
    79  001E                     	;# 
    80  001F                     	;# 
    81  0081                     	;# 
    82  0085                     	;# 
    83  0086                     	;# 
    84  0087                     	;# 
    85  0088                     	;# 
    86  0089                     	;# 
    87  008C                     	;# 
    88  008D                     	;# 
    89  008E                     	;# 
    90  0091                     	;# 
    91  0092                     	;# 
    92  0093                     	;# 
    93  0094                     	;# 
    94  0098                     	;# 
    95  0099                     	;# 
    96  009C                     	;# 
    97  009D                     	;# 
    98  009E                     	;# 
    99  009F                     	;# 
   100  010C                     	;# 
   101  010D                     	;# 
   102  010E                     	;# 
   103  010F                     	;# 
   104  018C                     	;# 
   105  018D                     	;# 
   106                           
   107                           	psect	strings
   108  0800                     __pstrings:	
   109  0800                     stringtab:	
   110  0800                     __stringtab:	
   111                           
   112                           ;	String table - string pointers are 1 byte each
   113  0800  1BFF               	btfsc	btemp+1,7
   114  0801  280A               	ljmp	stringcode
   115  0802  1383               	bcf	3,7
   116  0803  187F               	btfsc	btemp+1,0
   117  0804  1783               	bsf	3,7
   118  0805  0800               	movf	0,w
   119  0806  0A84               	incf	4,f
   120  0807  1903               	skipnz
   121  0808  0AFF               	incf	btemp+1,f
   122  0809  0008               	return
   123  080A                     stringcode:	
   124  080A                     stringdir:	
   125  080A  3008               	movlw	high stringdir
   126  080B  008A               	movwf	10
   127  080C  0804               	movf	4,w
   128  080D  0A84               	incf	4,f
   129  080E  0782               	addwf	2,f
   130  080F                     __stringbase:	
   131  080F  3400               	retlw	0
   132  0810                     __end_of__stringtab:	
   133  0810                     _dpowers:	
   134  0810  3401               	retlw	1
   135  0811  3400               	retlw	0
   136  0812  340A               	retlw	10
   137  0813  3400               	retlw	0
   138  0814  3464               	retlw	100
   139  0815  3400               	retlw	0
   140  0816  34E8               	retlw	232
   141  0817  3403               	retlw	3
   142  0818  3410               	retlw	16
   143  0819  3427               	retlw	39
   144  081A                     __end_of_dpowers:	
   145  081A                     exp@coeff:	
   146  081A  3400               	retlw	0
   147  081B  3480               	retlw	128
   148  081C  343F               	retlw	63
   149  081D  3472               	retlw	114
   150  081E  3431               	retlw	49
   151  081F  343F               	retlw	63
   152  0820  34FE               	retlw	254
   153  0821  3475               	retlw	117
   154  0822  343E               	retlw	62
   155  0823  3458               	retlw	88
   156  0824  3463               	retlw	99
   157  0825  343D               	retlw	61
   158  0826  3495               	retlw	149
   159  0827  341D               	retlw	29
   160  0828  343C               	retlw	60
   161  0829  34C5               	retlw	197
   162  082A  34AE               	retlw	174
   163  082B  343A               	retlw	58
   164  082C  3479               	retlw	121
   165  082D  3421               	retlw	33
   166  082E  3439               	retlw	57
   167  082F  3494               	retlw	148
   168  0830  3480               	retlw	128
   169  0831  3437               	retlw	55
   170  0832  3493               	retlw	147
   171  0833  34A7               	retlw	167
   172  0834  3435               	retlw	53
   173  0835  3456               	retlw	86
   174  0836  3415               	retlw	21
   175  0837  3434               	retlw	52
   176  0838                     __end_ofexp@coeff:	
   177  0838                     log@coeff:	
   178  0838  3400               	retlw	0
   179  0839  3400               	retlw	0
   180  083A  3400               	retlw	0
   181  083B  3400               	retlw	0
   182  083C  3480               	retlw	128
   183  083D  343F               	retlw	63
   184  083E  34F0               	retlw	240
   185  083F  34FF               	retlw	255
   186  0840  34BE               	retlw	190
   187  0841  34E2               	retlw	226
   188  0842  34A9               	retlw	169
   189  0843  343E               	retlw	62
   190  0844  3483               	retlw	131
   191  0845  3476               	retlw	118
   192  0846  34BE               	retlw	190
   193  0847  34AE               	retlw	174
   194  0848  342B               	retlw	43
   195  0849  343E               	retlw	62
   196  084A  343C               	retlw	60
   197  084B  34C3               	retlw	195
   198  084C  34BD               	retlw	189
   199  084D  34D2               	retlw	210
   200  084E  3413               	retlw	19
   201  084F  343D               	retlw	61
   202  0850  3478               	retlw	120
   203  0851  34D3               	retlw	211
   204  0852  34BB               	retlw	187
   205  0853                     __end_oflog@coeff:	
   206  0006                     _PORTB	set	6
   207  0008                     _PORTD	set	8
   208  0013                     _SSPBUF	set	19
   209  0014                     _SSPCON	set	20
   210  0040                     _RD0	set	64
   211  0042                     _RD2	set	66
   212  0093                     _SSPADD	set	147
   213  0091                     _SSPCON2	set	145
   214  0094                     _SSPSTAT	set	148
   215  0086                     _TRISB	set	134
   216  0088                     _TRISD	set	136
   217  048D                     _ACKDT	set	1165
   218  048C                     _ACKEN	set	1164
   219  048A                     _PEN	set	1162
   220  048B                     _RCEN	set	1163
   221  0489                     _RSEN	set	1161
   222  0488                     _SEN	set	1160
   223  043B                     _TRISC3	set	1083
   224  043C                     _TRISC4	set	1084
   225  0853                     __stringdata:	
   226  0853                     STR_5:	
   227  0853  3454               	retlw	84	;'T'
   228  0854  3465               	retlw	101	;'e'
   229  0855  346D               	retlw	109	;'m'
   230  0856  3470               	retlw	112	;'p'
   231  0857  3465               	retlw	101	;'e'
   232  0858  3472               	retlw	114	;'r'
   233  0859  3461               	retlw	97	;'a'
   234  085A  3474               	retlw	116	;'t'
   235  085B  3475               	retlw	117	;'u'
   236  085C  3472               	retlw	114	;'r'
   237  085D  3465               	retlw	101	;'e'
   238  085E  343A               	retlw	58	;':'
   239  085F  3420               	retlw	32	;' '
   240  0860  3400               	retlw	0
   241  0861                     STR_3:	
   242  0861  3448               	retlw	72	;'H'
   243  0862  3475               	retlw	117	;'u'
   244  0863  346D               	retlw	109	;'m'
   245  0864  3469               	retlw	105	;'i'
   246  0865  3464               	retlw	100	;'d'
   247  0866  3469               	retlw	105	;'i'
   248  0867  3474               	retlw	116	;'t'
   249  0868  3479               	retlw	121	;'y'
   250  0869  343A               	retlw	58	;':'
   251  086A  3420               	retlw	32	;' '
   252  086B  3400               	retlw	0
   253  086C                     STR_1:	
   254  086C  3420               	retlw	32	;' '
   255  086D  3420               	retlw	32	;' '
   256  086E  3420               	retlw	32	;' '
   257  086F  3420               	retlw	32	;' '
   258  0870  3400               	retlw	0
   259  0871                     STR_4:	
   260  0871  3425               	retlw	37	;'%'
   261  0872  3464               	retlw	100	;'d'
   262  0873  3400               	retlw	0
   263  0874                     __end_of__stringdata:	
   264                           
   265                           ; #config settings
   266  0000                     
   267                           	psect	cinit
   268  07F4                     start_initialization:	
   269  07F4                     __initialization:	
   270                           
   271                           ; Clear objects allocated to BANK1
   272  07F4  1683               	bsf	3,5	;RP0=1, select bank1
   273  07F5  1303               	bcf	3,6	;RP1=0, select bank1
   274  07F6  01CD               	clrf	__pbssBANK1& (0+127)
   275  07F7  01CE               	clrf	(__pbssBANK1+1)& (0+127)
   276  07F8  01CF               	clrf	(__pbssBANK1+2)& (0+127)
   277  07F9  01D0               	clrf	(__pbssBANK1+3)& (0+127)
   278  07FA  01D1               	clrf	(__pbssBANK1+4)& (0+127)
   279  07FB  01D2               	clrf	(__pbssBANK1+5)& (0+127)
   280  07FC                     end_of_initialization:	
   281                           ;End of C runtime variable initialization code
   282                           
   283  07FC                     __end_of__initialization:	
   284  07FC  0183               	clrf	3
   285  07FD  120A  118A  2DB2   	ljmp	_main	;jump to C main() function
   286                           
   287                           	psect	bssBANK1
   288  00CD                     __pbssBANK1:	
   289  00CD                     _errno:	
   290  00CD                     	ds	2
   291  00CF                     _relative_humidity:	
   292  00CF                     	ds	2
   293  00D1                     _temperature:	
   294  00D1                     	ds	2
   295                           
   296                           	psect	cstackBANK1
   297  00A0                     __pcstackBANK1:	
   298  00A0                     _exp$653:	
   299                           
   300                           ; 3 bytes @ 0x0
   301  00A0                     	ds	3
   302  00A3                     _exp$446:	
   303                           
   304                           ; 3 bytes @ 0x3
   305  00A3                     	ds	3
   306  00A6                     exp@exponent:	
   307                           
   308                           ; 2 bytes @ 0x6
   309  00A6                     	ds	2
   310  00A8                     exp@sign:	
   311                           
   312                           ; 1 bytes @ 0x8
   313  00A8                     	ds	1
   314  00A9                     ?_pow:	
   315  00A9                     pow@x:	
   316                           ; 3 bytes @ 0x9
   317                           
   318                           
   319                           ; 3 bytes @ 0x9
   320  00A9                     	ds	3
   321  00AC                     pow@y:	
   322                           
   323                           ; 3 bytes @ 0xC
   324  00AC                     	ds	3
   325  00AF                     ??_pow:	
   326                           
   327                           ; 0 bytes @ 0xF
   328  00AF                     	ds	1
   329  00B0                     _pow$651:	
   330                           
   331                           ; 3 bytes @ 0x10
   332  00B0                     	ds	3
   333  00B3                     _pow$652:	
   334                           
   335                           ; 3 bytes @ 0x13
   336  00B3                     	ds	3
   337  00B6                     pow@sign:	
   338                           
   339                           ; 1 bytes @ 0x16
   340  00B6                     	ds	1
   341  00B7                     pow@yi:	
   342                           
   343                           ; 4 bytes @ 0x17
   344  00B7                     	ds	4
   345  00BB                     ??_main:	
   346                           
   347                           ; 0 bytes @ 0x1B
   348  00BB                     	ds	3
   349  00BE                     _main$650:	
   350                           
   351                           ; 3 bytes @ 0x1E
   352  00BE                     	ds	3
   353  00C1                     main@temp_humidity:	
   354                           
   355                           ; 2 bytes @ 0x21
   356  00C1                     	ds	2
   357  00C3                     main@temp_temperature:	
   358                           
   359                           ; 2 bytes @ 0x23
   360  00C3                     	ds	2
   361  00C5                     main@resolution:	
   362                           
   363                           ; 2 bytes @ 0x25
   364  00C5                     	ds	2
   365  00C7                     main@i:	
   366                           
   367                           ; 2 bytes @ 0x27
   368  00C7                     	ds	2
   369  00C9                     main@MSB:	
   370                           
   371                           ; 2 bytes @ 0x29
   372  00C9                     	ds	2
   373  00CB                     main@LSB:	
   374                           
   375                           ; 2 bytes @ 0x2B
   376  00CB                     	ds	2
   377                           
   378                           	psect	cstackCOMMON
   379  0070                     __pcstackCOMMON:	
   380  0070                     ?_init_I2C_Master:	
   381  0070                     ??_init_I2C_Master:	
   382                           ; 0 bytes @ 0x0
   383                           
   384  0070                     ?_initLCD:	
   385                           ; 0 bytes @ 0x0
   386                           
   387  0070                     ?_I2C_Start:	
   388                           ; 0 bytes @ 0x0
   389                           
   390  0070                     ??_I2C_Start:	
   391                           ; 0 bytes @ 0x0
   392                           
   393  0070                     ?_I2C_Send:	
   394                           ; 0 bytes @ 0x0
   395                           
   396  0070                     ??_I2C_Send:	
   397                           ; 0 bytes @ 0x0
   398                           
   399  0070                     ?_I2C_RepeatedStart:	
   400                           ; 0 bytes @ 0x0
   401                           
   402  0070                     ??_I2C_RepeatedStart:	
   403                           ; 0 bytes @ 0x0
   404                           
   405  0070                     ??_I2C_Receive:	
   406                           ; 0 bytes @ 0x0
   407                           
   408  0070                     ?_I2C_Stop:	
   409                           ; 0 bytes @ 0x0
   410                           
   411  0070                     ??_I2C_Stop:	
   412                           ; 0 bytes @ 0x0
   413                           
   414  0070                     ?_updateDisplay:	
   415                           ; 0 bytes @ 0x0
   416                           
   417  0070                     ?_instCtrl:	
   418                           ; 0 bytes @ 0x0
   419                           
   420  0070                     ??_instCtrl:	
   421                           ; 0 bytes @ 0x0
   422                           
   423  0070                     ?_dataCtrl:	
   424                           ; 0 bytes @ 0x0
   425                           
   426  0070                     ??_dataCtrl:	
   427                           ; 0 bytes @ 0x0
   428                           
   429  0070                     ?_main:	
   430                           ; 0 bytes @ 0x0
   431                           
   432  0070                     ?_I2C_Wait:	
   433                           ; 0 bytes @ 0x0
   434                           
   435  0070                     ??_I2C_Wait:	
   436                           ; 0 bytes @ 0x0
   437                           
   438  0070                     ?___ftge:	
   439                           ; 0 bytes @ 0x0
   440                           
   441  0070                     ?_I2C_Receive:	
   442                           ; 1 bit 
   443                           
   444  0070                     ?___bmul:	
   445                           ; 1 bytes @ 0x0
   446                           
   447  0070                     ?___lwdiv:	
   448                           ; 1 bytes @ 0x0
   449                           
   450  0070                     ?___ftpack:	
   451                           ; 2 bytes @ 0x0
   452                           
   453  0070                     ?_frexp:	
   454                           ; 3 bytes @ 0x0
   455                           
   456  0070                     ?___ftneg:	
   457                           ; 3 bytes @ 0x0
   458                           
   459  0070                     dataCtrl@data:	
   460                           ; 3 bytes @ 0x0
   461                           
   462  0070                     instCtrl@inst:	
   463                           ; 1 bytes @ 0x0
   464                           
   465  0070                     I2C_Send@data:	
   466                           ; 1 bytes @ 0x0
   467                           
   468  0070                     ___bmul@multiplicand:	
   469                           ; 1 bytes @ 0x0
   470                           
   471  0070                     ___lwdiv@divisor:	
   472                           ; 1 bytes @ 0x0
   473                           
   474  0070                     ___ftpack@arg:	
   475                           ; 2 bytes @ 0x0
   476                           
   477  0070                     ___ftge@ff1:	
   478                           ; 3 bytes @ 0x0
   479                           
   480  0070                     ___ftneg@f1:	
   481                           ; 3 bytes @ 0x0
   482                           
   483  0070                     frexp@value:	
   484                           ; 3 bytes @ 0x0
   485                           
   486                           
   487                           ; 3 bytes @ 0x0
   488  0070                     	ds	1
   489  0071                     ??___bmul:	
   490  0071                     I2C_Receive@ack:	
   491                           ; 0 bytes @ 0x1
   492                           
   493  0071                     dataCtrl@i:	
   494                           ; 1 bytes @ 0x1
   495                           
   496  0071                     instCtrl@i:	
   497                           ; 2 bytes @ 0x1
   498                           
   499                           
   500                           ; 2 bytes @ 0x1
   501  0071                     	ds	1
   502  0072                     I2C_Receive@temp:	
   503  0072                     ___bmul@product:	
   504                           ; 1 bytes @ 0x2
   505                           
   506  0072                     ___lwdiv@dividend:	
   507                           ; 1 bytes @ 0x2
   508                           
   509                           
   510                           ; 2 bytes @ 0x2
   511  0072                     	ds	1
   512  0073                     ??_initLCD:	
   513  0073                     ?_printString:	
   514                           ; 0 bytes @ 0x3
   515                           
   516  0073                     ??___ftneg:	
   517                           ; 0 bytes @ 0x3
   518                           
   519  0073                     ___bmul@multiplier:	
   520                           ; 0 bytes @ 0x3
   521                           
   522  0073                     ___ftpack@exp:	
   523                           ; 1 bytes @ 0x3
   524                           
   525  0073                     frexp@eptr:	
   526                           ; 1 bytes @ 0x3
   527                           
   528  0073                     printString@string:	
   529                           ; 1 bytes @ 0x3
   530                           
   531  0073                     ___ftge@ff2:	
   532                           ; 2 bytes @ 0x3
   533                           
   534                           
   535                           ; 3 bytes @ 0x3
   536  0073                     	ds	1
   537  0074                     ??_frexp:	
   538  0074                     ??___lwdiv:	
   539                           ; 0 bytes @ 0x4
   540                           
   541  0074                     ___ftpack@sign:	
   542                           ; 0 bytes @ 0x4
   543                           
   544                           
   545                           ; 1 bytes @ 0x4
   546  0074                     	ds	1
   547  0075                     ??_printString:	
   548  0075                     ??___ftpack:	
   549                           ; 0 bytes @ 0x5
   550                           
   551  0075                     ___lwdiv@quotient:	
   552                           ; 0 bytes @ 0x5
   553                           
   554                           
   555                           ; 2 bytes @ 0x5
   556  0075                     	ds	1
   557  0076                     ??___ftge:	
   558                           
   559                           ; 0 bytes @ 0x6
   560  0076                     	ds	1
   561  0077                     ___lwdiv@counter:	
   562                           
   563                           ; 1 bytes @ 0x7
   564  0077                     	ds	1
   565  0078                     ?___lwmod:	
   566  0078                     ?___awtoft:	
   567                           ; 2 bytes @ 0x8
   568                           
   569  0078                     ?___lltoft:	
   570                           ; 3 bytes @ 0x8
   571                           
   572  0078                     ___awtoft@c:	
   573                           ; 3 bytes @ 0x8
   574                           
   575  0078                     ___lwmod@divisor:	
   576                           ; 2 bytes @ 0x8
   577                           
   578  0078                     ___lltoft@c:	
   579                           ; 2 bytes @ 0x8
   580                           
   581                           
   582                           ; 4 bytes @ 0x8
   583  0078                     	ds	2
   584  007A                     ___lwmod@dividend:	
   585                           
   586                           ; 2 bytes @ 0xA
   587  007A                     	ds	1
   588  007B                     ??___awtoft:	
   589                           
   590                           ; 0 bytes @ 0xB
   591  007B                     	ds	1
   592  007C                     ??___lltoft:	
   593  007C                     ??___lwmod:	
   594                           ; 0 bytes @ 0xC
   595                           
   596                           
   597                           ; 0 bytes @ 0xC
   598  007C                     	ds	1
   599  007D                     ___awtoft@sign:	
   600  007D                     ___lltoft@exp:	
   601                           ; 1 bytes @ 0xD
   602                           
   603  007D                     ___lwmod@counter:	
   604                           ; 1 bytes @ 0xD
   605                           
   606                           
   607                           ; 1 bytes @ 0xD
   608  007D                     	ds	1
   609  007E                     ??___ftsub:	
   610                           
   611                           	psect	cstackBANK0
   612  0020                     __pcstackBANK0:	
   613                           ; 0 bytes @ 0xE
   614                           
   615  0020                     ?_sprintf:	
   616  0020                     ?___ftdiv:	
   617                           ; 2 bytes @ 0x0
   618                           
   619  0020                     sprintf@f:	
   620                           ; 3 bytes @ 0x0
   621                           
   622  0020                     ___ftdiv@f2:	
   623                           ; 1 bytes @ 0x0
   624                           
   625                           
   626                           ; 3 bytes @ 0x0
   627  0020                     	ds	3
   628  0023                     ??_sprintf:	
   629  0023                     ___ftdiv@f1:	
   630                           ; 0 bytes @ 0x3
   631                           
   632                           
   633                           ; 3 bytes @ 0x3
   634  0023                     	ds	3
   635  0026                     ??___ftdiv:	
   636  0026                     sprintf@ap:	
   637                           ; 0 bytes @ 0x6
   638                           
   639                           
   640                           ; 1 bytes @ 0x6
   641  0026                     	ds	1
   642  0027                     sprintf@flag:	
   643                           
   644                           ; 1 bytes @ 0x7
   645  0027                     	ds	1
   646  0028                     sprintf@prec:	
   647                           
   648                           ; 1 bytes @ 0x8
   649  0028                     	ds	1
   650  0029                     sprintf@_val:	
   651                           
   652                           ; 4 bytes @ 0x9
   653  0029                     	ds	1
   654  002A                     ___ftdiv@cntr:	
   655                           
   656                           ; 1 bytes @ 0xA
   657  002A                     	ds	1
   658  002B                     ___ftdiv@f3:	
   659                           
   660                           ; 3 bytes @ 0xB
   661  002B                     	ds	2
   662  002D                     sprintf@sp:	
   663                           
   664                           ; 1 bytes @ 0xD
   665  002D                     	ds	1
   666  002E                     sprintf@c:	
   667  002E                     ___ftdiv@exp:	
   668                           ; 1 bytes @ 0xE
   669                           
   670                           
   671                           ; 1 bytes @ 0xE
   672  002E                     	ds	1
   673  002F                     ??_updateDisplay:	
   674  002F                     ___ftdiv@sign:	
   675                           ; 0 bytes @ 0xF
   676                           
   677                           
   678                           ; 1 bytes @ 0xF
   679  002F                     	ds	1
   680  0030                     ?___ftmul:	
   681  0030                     ___ftmul@f1:	
   682                           ; 3 bytes @ 0x10
   683                           
   684  0030                     updateDisplay@humidity:	
   685                           ; 3 bytes @ 0x10
   686                           
   687                           
   688                           ; 10 bytes @ 0x10
   689  0030                     	ds	3
   690  0033                     ___ftmul@f2:	
   691                           
   692                           ; 3 bytes @ 0x13
   693  0033                     	ds	3
   694  0036                     ??___ftmul:	
   695                           
   696                           ; 0 bytes @ 0x16
   697  0036                     	ds	4
   698  003A                     ___ftmul@exp:	
   699  003A                     updateDisplay@temp:	
   700                           ; 1 bytes @ 0x1A
   701                           
   702                           
   703                           ; 10 bytes @ 0x1A
   704  003A                     	ds	1
   705  003B                     ___ftmul@f3_as_product:	
   706                           
   707                           ; 3 bytes @ 0x1B
   708  003B                     	ds	3
   709  003E                     ___ftmul@cntr:	
   710                           
   711                           ; 1 bytes @ 0x1E
   712  003E                     	ds	1
   713  003F                     ___ftmul@sign:	
   714                           
   715                           ; 1 bytes @ 0x1F
   716  003F                     	ds	1
   717  0040                     ?___ftadd:	
   718  0040                     ___ftadd@f1:	
   719                           ; 3 bytes @ 0x20
   720                           
   721                           
   722                           ; 3 bytes @ 0x20
   723  0040                     	ds	3
   724  0043                     ___ftadd@f2:	
   725                           
   726                           ; 3 bytes @ 0x23
   727  0043                     	ds	1
   728  0044                     updateDisplay@i:	
   729                           
   730                           ; 2 bytes @ 0x24
   731  0044                     	ds	2
   732  0046                     ??___ftadd:	
   733                           
   734                           ; 0 bytes @ 0x26
   735  0046                     	ds	4
   736  004A                     ___ftadd@sign:	
   737                           
   738                           ; 1 bytes @ 0x2A
   739  004A                     	ds	1
   740  004B                     ___ftadd@exp2:	
   741                           
   742                           ; 1 bytes @ 0x2B
   743  004B                     	ds	1
   744  004C                     ___ftadd@exp1:	
   745                           
   746                           ; 1 bytes @ 0x2C
   747  004C                     	ds	1
   748  004D                     ?_eval_poly:	
   749  004D                     ?___ftsub:	
   750                           ; 3 bytes @ 0x2D
   751                           
   752  004D                     ?___fttol:	
   753                           ; 3 bytes @ 0x2D
   754                           
   755  004D                     ___ftsub@f2:	
   756                           ; 4 bytes @ 0x2D
   757                           
   758  004D                     ___fttol@f1:	
   759                           ; 3 bytes @ 0x2D
   760                           
   761  004D                     eval_poly@x:	
   762                           ; 3 bytes @ 0x2D
   763                           
   764                           
   765                           ; 3 bytes @ 0x2D
   766  004D                     	ds	3
   767  0050                     eval_poly@d:	
   768  0050                     ___ftsub@f1:	
   769                           ; 1 bytes @ 0x30
   770                           
   771                           
   772                           ; 3 bytes @ 0x30
   773  0050                     	ds	1
   774  0051                     ??___fttol:	
   775  0051                     eval_poly@n:	
   776                           ; 0 bytes @ 0x31
   777                           
   778                           
   779                           ; 2 bytes @ 0x31
   780  0051                     	ds	2
   781  0053                     ??_eval_poly:	
   782                           
   783                           ; 0 bytes @ 0x33
   784  0053                     	ds	1
   785  0054                     eval_poly@res:	
   786                           
   787                           ; 3 bytes @ 0x34
   788  0054                     	ds	1
   789  0055                     ___fttol@sign1:	
   790                           
   791                           ; 1 bytes @ 0x35
   792  0055                     	ds	1
   793  0056                     ___fttol@lval:	
   794                           
   795                           ; 4 bytes @ 0x36
   796  0056                     	ds	1
   797  0057                     ?_log:	
   798  0057                     ?_ldexp:	
   799                           ; 3 bytes @ 0x37
   800                           
   801  0057                     ldexp@value:	
   802                           ; 3 bytes @ 0x37
   803                           
   804  0057                     log@x:	
   805                           ; 3 bytes @ 0x37
   806                           
   807                           
   808                           ; 3 bytes @ 0x37
   809  0057                     	ds	3
   810  005A                     ??_log:	
   811  005A                     ___fttol@exp1:	
   812                           ; 0 bytes @ 0x3A
   813                           
   814  005A                     ldexp@newexp:	
   815                           ; 1 bytes @ 0x3A
   816                           
   817                           
   818                           ; 2 bytes @ 0x3A
   819  005A                     	ds	1
   820  005B                     ?___altoft:	
   821  005B                     log@exponent:	
   822                           ; 3 bytes @ 0x3B
   823                           
   824  005B                     ___altoft@c:	
   825                           ; 2 bytes @ 0x3B
   826                           
   827                           
   828                           ; 4 bytes @ 0x3B
   829  005B                     	ds	1
   830  005C                     ??_ldexp:	
   831                           
   832                           ; 0 bytes @ 0x3C
   833  005C                     	ds	2
   834  005E                     _ldexp$483:	
   835                           
   836                           ; 3 bytes @ 0x3E
   837  005E                     	ds	1
   838  005F                     ??___altoft:	
   839                           
   840                           ; 0 bytes @ 0x3F
   841  005F                     	ds	2
   842  0061                     ___altoft@exp:	
   843                           
   844                           ; 1 bytes @ 0x41
   845  0061                     	ds	1
   846  0062                     ___altoft@sign:	
   847                           
   848                           ; 1 bytes @ 0x42
   849  0062                     	ds	1
   850  0063                     ?_floor:	
   851  0063                     floor@x:	
   852                           ; 3 bytes @ 0x43
   853                           
   854                           
   855                           ; 3 bytes @ 0x43
   856  0063                     	ds	3
   857  0066                     ??_floor:	
   858                           
   859                           ; 0 bytes @ 0x46
   860  0066                     	ds	1
   861  0067                     floor@i:	
   862                           
   863                           ; 3 bytes @ 0x47
   864  0067                     	ds	3
   865  006A                     floor@expon:	
   866                           
   867                           ; 2 bytes @ 0x4A
   868  006A                     	ds	2
   869  006C                     ?_exp:	
   870  006C                     exp@x:	
   871                           ; 3 bytes @ 0x4C
   872                           
   873                           
   874                           ; 3 bytes @ 0x4C
   875  006C                     	ds	3
   876  006F                     ??_exp:	
   877                           
   878                           ; 0 bytes @ 0x4F
   879  006F                     	ds	1
   880                           
   881                           	psect	maintext
   882  05B2                     __pmaintext:	
   883 ;;
   884 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   885 ;;
   886 ;; *************** function _main *****************
   887 ;; Defined at:
   888 ;;		line 73 in file "C:\Users\notjo\OneDrive\Desktop\USC\USC-Year3-Sem2\3201-EmbeddedSystems\Labs\LE_07\LE7-3\LE7-3.c"
   889 ;; Parameters:    Size  Location     Type
   890 ;;		None
   891 ;; Auto vars:     Size  Location     Type
   892 ;;  i               2   39[BANK1 ] int 
   893 ;;  temp_tempera    2   35[BANK1 ] int 
   894 ;;  temp_humidit    2   33[BANK1 ] int 
   895 ;;  LSB             2   43[BANK1 ] int 
   896 ;;  MSB             2   41[BANK1 ] int 
   897 ;;  resolution      2   37[BANK1 ] int 
   898 ;; Return value:  Size  Location     Type
   899 ;;		None               void
   900 ;; Registers used:
   901 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   902 ;; Tracked objects:
   903 ;;		On entry : 17F/0
   904 ;;		On exit  : 0/0
   905 ;;		Unchanged: 0/0
   906 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   907 ;;      Params:         0       0       0       0       0
   908 ;;      Locals:         0       0      15       0       0
   909 ;;      Temps:          0       0       3       0       0
   910 ;;      Totals:         0       0      18       0       0
   911 ;;Total ram usage:       18 bytes
   912 ;; Hardware stack levels required when called:    5
   913 ;; This function calls:
   914 ;;		_I2C_Receive
   915 ;;		_I2C_RepeatedStart
   916 ;;		_I2C_Send
   917 ;;		_I2C_Start
   918 ;;		_I2C_Stop
   919 ;;		___awtoft
   920 ;;		___ftadd
   921 ;;		___ftdiv
   922 ;;		___ftmul
   923 ;;		___fttol
   924 ;;		_initLCD
   925 ;;		_init_I2C_Master
   926 ;;		_pow
   927 ;;		_updateDisplay
   928 ;; This function is called by:
   929 ;;		Startup code after reset
   930 ;; This function uses a non-reentrant model
   931 ;;
   932                           
   933                           
   934                           ;psect for function _main
   935  05B2                     _main:	
   936                           
   937                           ;LE7-3.c: 78: int resolution = pow(2, 14);
   938                           
   939                           ;incstack = 0
   940                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   941  05B2  3000               	movlw	0
   942  05B3  1683               	bsf	3,5	;RP0=1, select bank1
   943  05B4  1303               	bcf	3,6	;RP1=0, select bank1
   944  05B5  00AC               	movwf	pow@y^(0+128)
   945  05B6  3060               	movlw	96
   946  05B7  00AD               	movwf	(pow@y+1)^(0+128)
   947  05B8  3041               	movlw	65
   948  05B9  00AE               	movwf	(pow@y+2)^(0+128)
   949  05BA  3000               	movlw	0
   950  05BB  00A9               	movwf	pow@x^(0+128)
   951  05BC  3000               	movlw	0
   952  05BD  00AA               	movwf	(pow@x+1)^(0+128)
   953  05BE  3040               	movlw	64
   954  05BF  00AB               	movwf	(pow@x+2)^(0+128)
   955  05C0  120A  118A  22D9  120A  118A  	fcall	_pow
   956  05C5  1683               	bsf	3,5	;RP0=1, select bank1
   957  05C6  1303               	bcf	3,6	;RP1=0, select bank1
   958  05C7  0829               	movf	?_pow^(0+128),w
   959  05C8  00BE               	movwf	_main$650^(0+128)
   960  05C9  082A               	movf	(?_pow+1)^(0+128),w
   961  05CA  00BF               	movwf	(_main$650+1)^(0+128)
   962  05CB  082B               	movf	(?_pow+2)^(0+128),w
   963  05CC  00C0               	movwf	(_main$650+2)^(0+128)
   964                           
   965                           ;LE7-3.c: 78: int resolution = pow(2, 14);
   966  05CD  083E               	movf	_main$650^(0+128),w
   967  05CE  1283               	bcf	3,5	;RP0=0, select bank0
   968  05CF  1303               	bcf	3,6	;RP1=0, select bank0
   969  05D0  00CD               	movwf	___fttol@f1
   970  05D1  1683               	bsf	3,5	;RP0=1, select bank1
   971  05D2  1303               	bcf	3,6	;RP1=0, select bank1
   972  05D3  083F               	movf	(_main$650+1)^(0+128),w
   973  05D4  1283               	bcf	3,5	;RP0=0, select bank0
   974  05D5  1303               	bcf	3,6	;RP1=0, select bank0
   975  05D6  00CE               	movwf	___fttol@f1+1
   976  05D7  1683               	bsf	3,5	;RP0=1, select bank1
   977  05D8  1303               	bcf	3,6	;RP1=0, select bank1
   978  05D9  0840               	movf	(_main$650+2)^(0+128),w
   979  05DA  1283               	bcf	3,5	;RP0=0, select bank0
   980  05DB  1303               	bcf	3,6	;RP1=0, select bank0
   981  05DC  00CF               	movwf	___fttol@f1+2
   982  05DD  120A  158A  2412  120A  118A  	fcall	___fttol
   983  05E2  1283               	bcf	3,5	;RP0=0, select bank0
   984  05E3  1303               	bcf	3,6	;RP1=0, select bank0
   985  05E4  084E               	movf	?___fttol+1,w
   986  05E5  1683               	bsf	3,5	;RP0=1, select bank1
   987  05E6  1303               	bcf	3,6	;RP1=0, select bank1
   988  05E7  01C6               	clrf	(main@resolution+1)^(0+128)
   989  05E8  07C6               	addwf	(main@resolution+1)^(0+128),f
   990  05E9  1283               	bcf	3,5	;RP0=0, select bank0
   991  05EA  1303               	bcf	3,6	;RP1=0, select bank0
   992  05EB  084D               	movf	?___fttol,w
   993  05EC  1683               	bsf	3,5	;RP0=1, select bank1
   994  05ED  1303               	bcf	3,6	;RP1=0, select bank1
   995  05EE  01C5               	clrf	main@resolution^(0+128)
   996  05EF  07C5               	addwf	main@resolution^(0+128),f
   997                           
   998                           ;LE7-3.c: 79: int MSB = 0x00; int LSB = 0x00;
   999  05F0  01C9               	clrf	main@MSB^(0+128)
  1000  05F1  01CA               	clrf	(main@MSB+1)^(0+128)
  1001  05F2  01CB               	clrf	main@LSB^(0+128)
  1002  05F3  01CC               	clrf	(main@LSB+1)^(0+128)
  1003                           
  1004                           ;LE7-3.c: 82: TRISD = 0x00;
  1005  05F4  0188               	clrf	8	;volatile
  1006                           
  1007                           ;LE7-3.c: 83: PORTD = 0x00;
  1008  05F5  1283               	bcf	3,5	;RP0=0, select bank0
  1009  05F6  1303               	bcf	3,6	;RP1=0, select bank0
  1010  05F7  0188               	clrf	8	;volatile
  1011                           
  1012                           ;LE7-3.c: 84: TRISB = 0x00;
  1013  05F8  1683               	bsf	3,5	;RP0=1, select bank1
  1014  05F9  1303               	bcf	3,6	;RP1=0, select bank1
  1015  05FA  0186               	clrf	6	;volatile
  1016                           
  1017                           ;LE7-3.c: 85: PORTB = 0x00;
  1018  05FB  1283               	bcf	3,5	;RP0=0, select bank0
  1019  05FC  1303               	bcf	3,6	;RP1=0, select bank0
  1020  05FD  0186               	clrf	6	;volatile
  1021                           
  1022                           ;LE7-3.c: 87: init_I2C_Master();
  1023  05FE  120A  158A  20C1  120A  118A  	fcall	_init_I2C_Master
  1024                           
  1025                           ;LE7-3.c: 88: initLCD();
  1026  0603  120A  158A  20FD  120A  118A  	fcall	_initLCD
  1027  0608                     l2375:	
  1028                           ;LE7-3.c: 89: for(;;)
  1029                           
  1030                           
  1031                           ;LE7-3.c: 90: {
  1032                           ;LE7-3.c: 92: I2C_Start();
  1033  0608  120A  158A  209A  120A  118A  	fcall	_I2C_Start
  1034                           
  1035                           ;LE7-3.c: 93: I2C_Send(0x80);
  1036  060D  3080               	movlw	128
  1037  060E  120A  158A  20B8  120A  118A  	fcall	_I2C_Send
  1038                           
  1039                           ;LE7-3.c: 94: I2C_Send(0xE5);
  1040  0613  30E5               	movlw	229
  1041  0614  120A  158A  20B8  120A  118A  	fcall	_I2C_Send
  1042                           
  1043                           ;LE7-3.c: 95: I2C_RepeatedStart();
  1044  0619  120A  158A  2093  120A  118A  	fcall	_I2C_RepeatedStart
  1045                           
  1046                           ;LE7-3.c: 96: I2C_Send(0x81);
  1047  061E  3081               	movlw	129
  1048  061F  120A  158A  20B8  120A  118A  	fcall	_I2C_Send
  1049                           
  1050                           ;LE7-3.c: 97: MSB = I2C_Receive(1);
  1051  0624  3001               	movlw	1
  1052  0625  120A  158A  213D  120A  118A  	fcall	_I2C_Receive
  1053  062A  1683               	bsf	3,5	;RP0=1, select bank1
  1054  062B  1303               	bcf	3,6	;RP1=0, select bank1
  1055  062C  00BB               	movwf	??_main^(0+128)
  1056  062D  01BC               	clrf	(??_main^(0+128)+1)
  1057  062E  083B               	movf	??_main^(0+128),w
  1058  062F  00C9               	movwf	main@MSB^(0+128)
  1059  0630  083C               	movf	(??_main+1)^(0+128),w
  1060  0631  00CA               	movwf	(main@MSB+1)^(0+128)
  1061                           
  1062                           ;LE7-3.c: 98: LSB = I2C_Receive(0);
  1063  0632  3000               	movlw	0
  1064  0633  120A  158A  213D  120A  118A  	fcall	_I2C_Receive
  1065  0638  1683               	bsf	3,5	;RP0=1, select bank1
  1066  0639  1303               	bcf	3,6	;RP1=0, select bank1
  1067  063A  00BB               	movwf	??_main^(0+128)
  1068  063B  01BC               	clrf	(??_main^(0+128)+1)
  1069  063C  083B               	movf	??_main^(0+128),w
  1070  063D  00CB               	movwf	main@LSB^(0+128)
  1071  063E  083C               	movf	(??_main+1)^(0+128),w
  1072  063F  00CC               	movwf	(main@LSB+1)^(0+128)
  1073                           
  1074                           ;LE7-3.c: 99: I2C_Stop();
  1075  0640  120A  158A  20A1  120A  118A  	fcall	_I2C_Stop
  1076                           
  1077                           ;LE7-3.c: 100: _delay((unsigned long)((200)*(4000000/4000.0)));
  1078  0645  3002               	movlw	2
  1079  0646  1683               	bsf	3,5	;RP0=1, select bank1
  1080  0647  1303               	bcf	3,6	;RP1=0, select bank1
  1081  0648  00BD               	movwf	(??_main^(0+128)+2)
  1082  0649  3004               	movlw	4
  1083  064A  00BC               	movwf	(??_main^(0+128)+1)
  1084  064B  30BA               	movlw	186
  1085  064C  00BB               	movwf	??_main^(0+128)
  1086  064D                     u2837:	
  1087  064D  0BBB               	decfsz	??_main^(0+128),f
  1088  064E  2E4D               	goto	u2837
  1089  064F  0BBC               	decfsz	(??_main^(0+128)+1),f
  1090  0650  2E4D               	goto	u2837
  1091  0651  0BBD               	decfsz	(??_main^(0+128)+2),f
  1092  0652  2E4D               	goto	u2837
  1093  0653  0000               	nop
  1094                           
  1095                           ;LE7-3.c: 101: MSB = MSB << 6;
  1096  0654  1683               	bsf	3,5	;RP0=1, select bank1
  1097  0655  1303               	bcf	3,6	;RP1=0, select bank1
  1098  0656  084A               	movf	(main@MSB+1)^(0+128),w
  1099  0657  00BC               	movwf	(??_main^(0+128)+1)
  1100  0658  0849               	movf	main@MSB^(0+128),w
  1101  0659  00BB               	movwf	??_main^(0+128)
  1102  065A  3006               	movlw	6
  1103  065B  00FF               	movwf	127
  1104  065C                     u2795:	
  1105  065C  1003               	clrc
  1106  065D  0DBB               	rlf	??_main^(0+128),f
  1107  065E  0DBC               	rlf	(??_main^(0+128)+1),f
  1108  065F  0BFF               	decfsz	127,f
  1109  0660  2E5C               	goto	u2795
  1110  0661  083B               	movf	??_main^(0+128),w
  1111  0662  00C9               	movwf	main@MSB^(0+128)
  1112  0663  083C               	movf	(??_main+1)^(0+128),w
  1113  0664  00CA               	movwf	(main@MSB+1)^(0+128)
  1114                           
  1115                           ;LE7-3.c: 102: LSB = LSB >> 2;
  1116  0665  084C               	movf	(main@LSB+1)^(0+128),w
  1117  0666  00BC               	movwf	(??_main^(0+128)+1)
  1118  0667  084B               	movf	main@LSB^(0+128),w
  1119  0668  00BB               	movwf	??_main^(0+128)
  1120  0669  0D3C               	rlf	(??_main^(0+128)+1),w
  1121  066A  0CBC               	rrf	(??_main^(0+128)+1),f
  1122  066B  0CBB               	rrf	??_main^(0+128),f
  1123  066C  0D3C               	rlf	(??_main^(0+128)+1),w
  1124  066D  0CBC               	rrf	(??_main^(0+128)+1),f
  1125  066E  0CBB               	rrf	??_main^(0+128),f
  1126  066F  083B               	movf	??_main^(0+128),w
  1127  0670  00CB               	movwf	main@LSB^(0+128)
  1128  0671  083C               	movf	(??_main+1)^(0+128),w
  1129  0672  00CC               	movwf	(main@LSB+1)^(0+128)
  1130                           
  1131                           ;LE7-3.c: 103: int temp_humidity = MSB | LSB;
  1132  0673  084B               	movf	main@LSB^(0+128),w
  1133  0674  0449               	iorwf	main@MSB^(0+128),w
  1134  0675  00C1               	movwf	main@temp_humidity^(0+128)
  1135  0676  084C               	movf	(main@LSB+1)^(0+128),w
  1136  0677  044A               	iorwf	(main@MSB+1)^(0+128),w
  1137  0678  00C2               	movwf	(main@temp_humidity+1)^(0+128)
  1138                           
  1139                           ;LE7-3.c: 104: relative_humidity = (int)(-6 + (125 * ((float)temp_humidity / (float)reso
      +                          lution)));
  1140  0679  0842               	movf	(main@temp_humidity+1)^(0+128),w
  1141  067A  01F9               	clrf	___awtoft@c+1
  1142  067B  07F9               	addwf	___awtoft@c+1,f
  1143  067C  0841               	movf	main@temp_humidity^(0+128),w
  1144  067D  01F8               	clrf	___awtoft@c
  1145  067E  07F8               	addwf	___awtoft@c,f
  1146  067F  120A  118A  2003  120A  118A  	fcall	___awtoft
  1147  0684  0878               	movf	?___awtoft,w
  1148  0685  1283               	bcf	3,5	;RP0=0, select bank0
  1149  0686  1303               	bcf	3,6	;RP1=0, select bank0
  1150  0687  00A3               	movwf	___ftdiv@f1
  1151  0688  0879               	movf	?___awtoft+1,w
  1152  0689  00A4               	movwf	___ftdiv@f1+1
  1153  068A  087A               	movf	?___awtoft+2,w
  1154  068B  00A5               	movwf	___ftdiv@f1+2
  1155  068C  1683               	bsf	3,5	;RP0=1, select bank1
  1156  068D  1303               	bcf	3,6	;RP1=0, select bank1
  1157  068E  0846               	movf	(main@resolution+1)^(0+128),w
  1158  068F  01F9               	clrf	___awtoft@c+1
  1159  0690  07F9               	addwf	___awtoft@c+1,f
  1160  0691  0845               	movf	main@resolution^(0+128),w
  1161  0692  01F8               	clrf	___awtoft@c
  1162  0693  07F8               	addwf	___awtoft@c,f
  1163  0694  120A  118A  2003  120A  118A  	fcall	___awtoft
  1164  0699  0878               	movf	?___awtoft,w
  1165  069A  1283               	bcf	3,5	;RP0=0, select bank0
  1166  069B  1303               	bcf	3,6	;RP1=0, select bank0
  1167  069C  00A0               	movwf	___ftdiv@f2
  1168  069D  0879               	movf	?___awtoft+1,w
  1169  069E  00A1               	movwf	___ftdiv@f2+1
  1170  069F  087A               	movf	?___awtoft+2,w
  1171  06A0  00A2               	movwf	___ftdiv@f2+2
  1172  06A1  120A  158A  2678  120A  118A  	fcall	___ftdiv
  1173  06A6  1283               	bcf	3,5	;RP0=0, select bank0
  1174  06A7  1303               	bcf	3,6	;RP1=0, select bank0
  1175  06A8  0820               	movf	?___ftdiv,w
  1176  06A9  00B3               	movwf	___ftmul@f2
  1177  06AA  0821               	movf	?___ftdiv+1,w
  1178  06AB  00B4               	movwf	___ftmul@f2+1
  1179  06AC  0822               	movf	?___ftdiv+2,w
  1180  06AD  00B5               	movwf	___ftmul@f2+2
  1181  06AE  3000               	movlw	0
  1182  06AF  00B0               	movwf	___ftmul@f1
  1183  06B0  30FA               	movlw	250
  1184  06B1  00B1               	movwf	___ftmul@f1+1
  1185  06B2  3042               	movlw	66
  1186  06B3  00B2               	movwf	___ftmul@f1+2
  1187  06B4  120A  118A  2024  120A  118A  	fcall	___ftmul
  1188  06B9  1283               	bcf	3,5	;RP0=0, select bank0
  1189  06BA  1303               	bcf	3,6	;RP1=0, select bank0
  1190  06BB  0830               	movf	?___ftmul,w
  1191  06BC  00C3               	movwf	___ftadd@f2
  1192  06BD  0831               	movf	?___ftmul+1,w
  1193  06BE  00C4               	movwf	___ftadd@f2+1
  1194  06BF  0832               	movf	?___ftmul+2,w
  1195  06C0  00C5               	movwf	___ftadd@f2+2
  1196  06C1  3000               	movlw	0
  1197  06C2  00C0               	movwf	___ftadd@f1
  1198  06C3  30C0               	movlw	192
  1199  06C4  00C1               	movwf	___ftadd@f1+1
  1200  06C5  30C0               	movlw	192
  1201  06C6  00C2               	movwf	___ftadd@f1+2
  1202  06C7  120A  118A  21D0  120A  118A  	fcall	___ftadd
  1203  06CC  1283               	bcf	3,5	;RP0=0, select bank0
  1204  06CD  1303               	bcf	3,6	;RP1=0, select bank0
  1205  06CE  0840               	movf	?___ftadd,w
  1206  06CF  00CD               	movwf	___fttol@f1
  1207  06D0  0841               	movf	?___ftadd+1,w
  1208  06D1  00CE               	movwf	___fttol@f1+1
  1209  06D2  0842               	movf	?___ftadd+2,w
  1210  06D3  00CF               	movwf	___fttol@f1+2
  1211  06D4  120A  158A  2412  120A  118A  	fcall	___fttol
  1212  06D9  1283               	bcf	3,5	;RP0=0, select bank0
  1213  06DA  1303               	bcf	3,6	;RP1=0, select bank0
  1214  06DB  084E               	movf	?___fttol+1,w
  1215  06DC  1683               	bsf	3,5	;RP0=1, select bank1
  1216  06DD  1303               	bcf	3,6	;RP1=0, select bank1
  1217  06DE  01D0               	clrf	(_relative_humidity+1)^(0+128)
  1218  06DF  07D0               	addwf	(_relative_humidity+1)^(0+128),f
  1219  06E0  1283               	bcf	3,5	;RP0=0, select bank0
  1220  06E1  1303               	bcf	3,6	;RP1=0, select bank0
  1221  06E2  084D               	movf	?___fttol,w
  1222  06E3  1683               	bsf	3,5	;RP0=1, select bank1
  1223  06E4  1303               	bcf	3,6	;RP1=0, select bank1
  1224  06E5  01CF               	clrf	_relative_humidity^(0+128)
  1225  06E6  07CF               	addwf	_relative_humidity^(0+128),f
  1226                           
  1227                           ;LE7-3.c: 105: MSB = 0x00; LSB = 0x00;
  1228  06E7  01C9               	clrf	main@MSB^(0+128)
  1229  06E8  01CA               	clrf	(main@MSB+1)^(0+128)
  1230  06E9  01CB               	clrf	main@LSB^(0+128)
  1231  06EA  01CC               	clrf	(main@LSB+1)^(0+128)
  1232                           
  1233                           ;LE7-3.c: 106: _delay((unsigned long)((200)*(4000000/4000.0)));
  1234  06EB  3002               	movlw	2
  1235  06EC  00BD               	movwf	(??_main^(0+128)+2)
  1236  06ED  3004               	movlw	4
  1237  06EE  00BC               	movwf	(??_main^(0+128)+1)
  1238  06EF  30BA               	movlw	186
  1239  06F0  00BB               	movwf	??_main^(0+128)
  1240  06F1                     u2847:	
  1241  06F1  0BBB               	decfsz	??_main^(0+128),f
  1242  06F2  2EF1               	goto	u2847
  1243  06F3  0BBC               	decfsz	(??_main^(0+128)+1),f
  1244  06F4  2EF1               	goto	u2847
  1245  06F5  0BBD               	decfsz	(??_main^(0+128)+2),f
  1246  06F6  2EF1               	goto	u2847
  1247  06F7  0000               	nop
  1248                           
  1249                           ;LE7-3.c: 109: I2C_Start();
  1250  06F8  120A  158A  209A  120A  118A  	fcall	_I2C_Start
  1251                           
  1252                           ;LE7-3.c: 110: I2C_Send(0x80);
  1253  06FD  3080               	movlw	128
  1254  06FE  120A  158A  20B8  120A  118A  	fcall	_I2C_Send
  1255                           
  1256                           ;LE7-3.c: 111: I2C_Send(0xE3);
  1257  0703  30E3               	movlw	227
  1258  0704  120A  158A  20B8  120A  118A  	fcall	_I2C_Send
  1259                           
  1260                           ;LE7-3.c: 112: I2C_RepeatedStart();
  1261  0709  120A  158A  2093  120A  118A  	fcall	_I2C_RepeatedStart
  1262                           
  1263                           ;LE7-3.c: 113: I2C_Send(0x81);
  1264  070E  3081               	movlw	129
  1265  070F  120A  158A  20B8  120A  118A  	fcall	_I2C_Send
  1266                           
  1267                           ;LE7-3.c: 114: MSB = I2C_Receive(1);
  1268  0714  3001               	movlw	1
  1269  0715  120A  158A  213D  120A  118A  	fcall	_I2C_Receive
  1270  071A  1683               	bsf	3,5	;RP0=1, select bank1
  1271  071B  1303               	bcf	3,6	;RP1=0, select bank1
  1272  071C  00BB               	movwf	??_main^(0+128)
  1273  071D  01BC               	clrf	(??_main^(0+128)+1)
  1274  071E  083B               	movf	??_main^(0+128),w
  1275  071F  00C9               	movwf	main@MSB^(0+128)
  1276  0720  083C               	movf	(??_main+1)^(0+128),w
  1277  0721  00CA               	movwf	(main@MSB+1)^(0+128)
  1278                           
  1279                           ;LE7-3.c: 115: LSB = I2C_Receive(0);
  1280  0722  3000               	movlw	0
  1281  0723  120A  158A  213D  120A  118A  	fcall	_I2C_Receive
  1282  0728  1683               	bsf	3,5	;RP0=1, select bank1
  1283  0729  1303               	bcf	3,6	;RP1=0, select bank1
  1284  072A  00BB               	movwf	??_main^(0+128)
  1285  072B  01BC               	clrf	(??_main^(0+128)+1)
  1286  072C  083B               	movf	??_main^(0+128),w
  1287  072D  00CB               	movwf	main@LSB^(0+128)
  1288  072E  083C               	movf	(??_main+1)^(0+128),w
  1289  072F  00CC               	movwf	(main@LSB+1)^(0+128)
  1290                           
  1291                           ;LE7-3.c: 116: I2C_Stop();
  1292  0730  120A  158A  20A1  120A  118A  	fcall	_I2C_Stop
  1293                           
  1294                           ;LE7-3.c: 117: MSB = MSB << 6;
  1295  0735  1683               	bsf	3,5	;RP0=1, select bank1
  1296  0736  1303               	bcf	3,6	;RP1=0, select bank1
  1297  0737  084A               	movf	(main@MSB+1)^(0+128),w
  1298  0738  00BC               	movwf	(??_main^(0+128)+1)
  1299  0739  0849               	movf	main@MSB^(0+128),w
  1300  073A  00BB               	movwf	??_main^(0+128)
  1301  073B  3006               	movlw	6
  1302  073C  00FF               	movwf	127
  1303  073D                     u2805:	
  1304  073D  1003               	clrc
  1305  073E  0DBB               	rlf	??_main^(0+128),f
  1306  073F  0DBC               	rlf	(??_main^(0+128)+1),f
  1307  0740  0BFF               	decfsz	127,f
  1308  0741  2F3D               	goto	u2805
  1309  0742  083B               	movf	??_main^(0+128),w
  1310  0743  00C9               	movwf	main@MSB^(0+128)
  1311  0744  083C               	movf	(??_main+1)^(0+128),w
  1312  0745  00CA               	movwf	(main@MSB+1)^(0+128)
  1313                           
  1314                           ;LE7-3.c: 118: LSB = LSB >> 2;
  1315  0746  084C               	movf	(main@LSB+1)^(0+128),w
  1316  0747  00BC               	movwf	(??_main^(0+128)+1)
  1317  0748  084B               	movf	main@LSB^(0+128),w
  1318  0749  00BB               	movwf	??_main^(0+128)
  1319  074A  0D3C               	rlf	(??_main^(0+128)+1),w
  1320  074B  0CBC               	rrf	(??_main^(0+128)+1),f
  1321  074C  0CBB               	rrf	??_main^(0+128),f
  1322  074D  0D3C               	rlf	(??_main^(0+128)+1),w
  1323  074E  0CBC               	rrf	(??_main^(0+128)+1),f
  1324  074F  0CBB               	rrf	??_main^(0+128),f
  1325  0750  083B               	movf	??_main^(0+128),w
  1326  0751  00CB               	movwf	main@LSB^(0+128)
  1327  0752  083C               	movf	(??_main+1)^(0+128),w
  1328  0753  00CC               	movwf	(main@LSB+1)^(0+128)
  1329                           
  1330                           ;LE7-3.c: 119: int temp_temperature = MSB | LSB;
  1331  0754  084B               	movf	main@LSB^(0+128),w
  1332  0755  0449               	iorwf	main@MSB^(0+128),w
  1333  0756  00C3               	movwf	main@temp_temperature^(0+128)
  1334  0757  084C               	movf	(main@LSB+1)^(0+128),w
  1335  0758  044A               	iorwf	(main@MSB+1)^(0+128),w
  1336  0759  00C4               	movwf	(main@temp_temperature+1)^(0+128)
  1337                           
  1338                           ;LE7-3.c: 120: temperature = (int)(-46.85 + (175.72 * ((float)temp_temperature / (float)
      +                          resolution)));
  1339  075A  0844               	movf	(main@temp_temperature+1)^(0+128),w
  1340  075B  01F9               	clrf	___awtoft@c+1
  1341  075C  07F9               	addwf	___awtoft@c+1,f
  1342  075D  0843               	movf	main@temp_temperature^(0+128),w
  1343  075E  01F8               	clrf	___awtoft@c
  1344  075F  07F8               	addwf	___awtoft@c,f
  1345  0760  120A  118A  2003  120A  118A  	fcall	___awtoft
  1346  0765  0878               	movf	?___awtoft,w
  1347  0766  1283               	bcf	3,5	;RP0=0, select bank0
  1348  0767  1303               	bcf	3,6	;RP1=0, select bank0
  1349  0768  00A3               	movwf	___ftdiv@f1
  1350  0769  0879               	movf	?___awtoft+1,w
  1351  076A  00A4               	movwf	___ftdiv@f1+1
  1352  076B  087A               	movf	?___awtoft+2,w
  1353  076C  00A5               	movwf	___ftdiv@f1+2
  1354  076D  1683               	bsf	3,5	;RP0=1, select bank1
  1355  076E  1303               	bcf	3,6	;RP1=0, select bank1
  1356  076F  0846               	movf	(main@resolution+1)^(0+128),w
  1357  0770  01F9               	clrf	___awtoft@c+1
  1358  0771  07F9               	addwf	___awtoft@c+1,f
  1359  0772  0845               	movf	main@resolution^(0+128),w
  1360  0773  01F8               	clrf	___awtoft@c
  1361  0774  07F8               	addwf	___awtoft@c,f
  1362  0775  120A  118A  2003  120A  118A  	fcall	___awtoft
  1363  077A  0878               	movf	?___awtoft,w
  1364  077B  1283               	bcf	3,5	;RP0=0, select bank0
  1365  077C  1303               	bcf	3,6	;RP1=0, select bank0
  1366  077D  00A0               	movwf	___ftdiv@f2
  1367  077E  0879               	movf	?___awtoft+1,w
  1368  077F  00A1               	movwf	___ftdiv@f2+1
  1369  0780  087A               	movf	?___awtoft+2,w
  1370  0781  00A2               	movwf	___ftdiv@f2+2
  1371  0782  120A  158A  2678  120A  118A  	fcall	___ftdiv
  1372  0787  1283               	bcf	3,5	;RP0=0, select bank0
  1373  0788  1303               	bcf	3,6	;RP1=0, select bank0
  1374  0789  0820               	movf	?___ftdiv,w
  1375  078A  00B3               	movwf	___ftmul@f2
  1376  078B  0821               	movf	?___ftdiv+1,w
  1377  078C  00B4               	movwf	___ftmul@f2+1
  1378  078D  0822               	movf	?___ftdiv+2,w
  1379  078E  00B5               	movwf	___ftmul@f2+2
  1380  078F  30B8               	movlw	184
  1381  0790  00B0               	movwf	___ftmul@f1
  1382  0791  302F               	movlw	47
  1383  0792  00B1               	movwf	___ftmul@f1+1
  1384  0793  3043               	movlw	67
  1385  0794  00B2               	movwf	___ftmul@f1+2
  1386  0795  120A  118A  2024  120A  118A  	fcall	___ftmul
  1387  079A  1283               	bcf	3,5	;RP0=0, select bank0
  1388  079B  1303               	bcf	3,6	;RP1=0, select bank0
  1389  079C  0830               	movf	?___ftmul,w
  1390  079D  00C3               	movwf	___ftadd@f2
  1391  079E  0831               	movf	?___ftmul+1,w
  1392  079F  00C4               	movwf	___ftadd@f2+1
  1393  07A0  0832               	movf	?___ftmul+2,w
  1394  07A1  00C5               	movwf	___ftadd@f2+2
  1395  07A2  3066               	movlw	102
  1396  07A3  00C0               	movwf	___ftadd@f1
  1397  07A4  303B               	movlw	59
  1398  07A5  00C1               	movwf	___ftadd@f1+1
  1399  07A6  30C2               	movlw	194
  1400  07A7  00C2               	movwf	___ftadd@f1+2
  1401  07A8  120A  118A  21D0  120A  118A  	fcall	___ftadd
  1402  07AD  1283               	bcf	3,5	;RP0=0, select bank0
  1403  07AE  1303               	bcf	3,6	;RP1=0, select bank0
  1404  07AF  0840               	movf	?___ftadd,w
  1405  07B0  00CD               	movwf	___fttol@f1
  1406  07B1  0841               	movf	?___ftadd+1,w
  1407  07B2  00CE               	movwf	___fttol@f1+1
  1408  07B3  0842               	movf	?___ftadd+2,w
  1409  07B4  00CF               	movwf	___fttol@f1+2
  1410  07B5  120A  158A  2412  120A  118A  	fcall	___fttol
  1411  07BA  1283               	bcf	3,5	;RP0=0, select bank0
  1412  07BB  1303               	bcf	3,6	;RP1=0, select bank0
  1413  07BC  084E               	movf	?___fttol+1,w
  1414  07BD  1683               	bsf	3,5	;RP0=1, select bank1
  1415  07BE  1303               	bcf	3,6	;RP1=0, select bank1
  1416  07BF  01D2               	clrf	(_temperature+1)^(0+128)
  1417  07C0  07D2               	addwf	(_temperature+1)^(0+128),f
  1418  07C1  1283               	bcf	3,5	;RP0=0, select bank0
  1419  07C2  1303               	bcf	3,6	;RP1=0, select bank0
  1420  07C3  084D               	movf	?___fttol,w
  1421  07C4  1683               	bsf	3,5	;RP0=1, select bank1
  1422  07C5  1303               	bcf	3,6	;RP1=0, select bank1
  1423  07C6  01D1               	clrf	_temperature^(0+128)
  1424  07C7  07D1               	addwf	_temperature^(0+128),f
  1425                           
  1426                           ;LE7-3.c: 123: updateDisplay();
  1427  07C8  120A  158A  25D2  120A  118A  	fcall	_updateDisplay
  1428                           
  1429                           ;LE7-3.c: 124: _delay((unsigned long)((200)*(4000000/4000.0)));
  1430  07CD  3002               	movlw	2
  1431  07CE  1683               	bsf	3,5	;RP0=1, select bank1
  1432  07CF  1303               	bcf	3,6	;RP1=0, select bank1
  1433  07D0  00BD               	movwf	(??_main^(0+128)+2)
  1434  07D1  3004               	movlw	4
  1435  07D2  00BC               	movwf	(??_main^(0+128)+1)
  1436  07D3  30BA               	movlw	186
  1437  07D4  00BB               	movwf	??_main^(0+128)
  1438  07D5                     u2857:	
  1439  07D5  0BBB               	decfsz	??_main^(0+128),f
  1440  07D6  2FD5               	goto	u2857
  1441  07D7  0BBC               	decfsz	(??_main^(0+128)+1),f
  1442  07D8  2FD5               	goto	u2857
  1443  07D9  0BBD               	decfsz	(??_main^(0+128)+2),f
  1444  07DA  2FD5               	goto	u2857
  1445  07DB  0000               	nop
  1446                           
  1447                           ;LE7-3.c: 125: for(int i = 0; i < 1000; i++);
  1448  07DC  1683               	bsf	3,5	;RP0=1, select bank1
  1449  07DD  1303               	bcf	3,6	;RP1=0, select bank1
  1450  07DE  01C7               	clrf	main@i^(0+128)
  1451  07DF  01C8               	clrf	(main@i+1)^(0+128)
  1452  07E0                     L1:	
  1453  07E0  0848               	movf	(main@i+1)^(0+128),w
  1454  07E1  3A80               	xorlw	128
  1455  07E2  00FF               	movwf	127
  1456  07E3  3083               	movlw	131
  1457  07E4  027F               	subwf	127,w
  1458  07E5  1D03               	skipz
  1459  07E6  2FE9               	goto	u2815
  1460  07E7  30E8               	movlw	232
  1461  07E8  0247               	subwf	main@i^(0+128),w
  1462  07E9                     u2815:	
  1463  07E9  1803               	btfsc	3,0
  1464  07EA  2E08               	goto	l2375
  1465  07EB  3001               	movlw	1
  1466  07EC  1683               	bsf	3,5	;RP0=1, select bank1
  1467  07ED  1303               	bcf	3,6	;RP1=0, select bank1
  1468  07EE  07C7               	addwf	main@i^(0+128),f
  1469  07EF  1803               	skipnc
  1470  07F0  0AC8               	incf	(main@i+1)^(0+128),f
  1471  07F1  3000               	movlw	0
  1472  07F2  07C8               	addwf	(main@i+1)^(0+128),f
  1473  07F3  2FE0               	goto	L1
  1474  07F4                     __end_of_main:	
  1475                           ;LE7-3.c: 126: }
  1476                           
  1477                           
  1478                           	psect	text1
  1479  0DD2                     __ptext1:	
  1480 ;; *************** function _updateDisplay *****************
  1481 ;; Defined at:
  1482 ;;		line 138 in file "C:\Users\notjo\OneDrive\Desktop\USC\USC-Year3-Sem2\3201-EmbeddedSystems\Labs\LE_07\LE7-3\LE7-3.c"
  1483 ;; Parameters:    Size  Location     Type
  1484 ;;		None
  1485 ;; Auto vars:     Size  Location     Type
  1486 ;;  i               2   36[BANK0 ] int 
  1487 ;;  temp           10   26[BANK0 ] unsigned char [10]
  1488 ;;  humidity       10   16[BANK0 ] unsigned char [10]
  1489 ;; Return value:  Size  Location     Type
  1490 ;;		None               void
  1491 ;; Registers used:
  1492 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1493 ;; Tracked objects:
  1494 ;;		On entry : 0/0
  1495 ;;		On exit  : 0/0
  1496 ;;		Unchanged: 0/0
  1497 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1498 ;;      Params:         0       0       0       0       0
  1499 ;;      Locals:         0      22       0       0       0
  1500 ;;      Temps:          0       1       0       0       0
  1501 ;;      Totals:         0      23       0       0       0
  1502 ;;Total ram usage:       23 bytes
  1503 ;; Hardware stack levels used:    1
  1504 ;; Hardware stack levels required when called:    2
  1505 ;; This function calls:
  1506 ;;		_dataCtrl
  1507 ;;		_instCtrl
  1508 ;;		_printString
  1509 ;;		_sprintf
  1510 ;; This function is called by:
  1511 ;;		_main
  1512 ;; This function uses a non-reentrant model
  1513 ;;
  1514                           
  1515                           
  1516                           ;psect for function _updateDisplay
  1517  0DD2                     _updateDisplay:	
  1518                           
  1519                           ;LE7-3.c: 141: instCtrl(0x8A);
  1520                           
  1521                           ;incstack = 0
  1522                           ; Regs used in _updateDisplay: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1523  0DD2  308A               	movlw	138
  1524  0DD3  120A  158A  2163  120A  158A  	fcall	_instCtrl
  1525                           
  1526                           ;LE7-3.c: 142: printString("    ");
  1527  0DD8  305D               	movlw	low (STR_1-__stringbase)
  1528  0DD9  00F3               	movwf	printString@string
  1529  0DDA  3080               	movlw	128
  1530  0DDB  00F4               	movwf	printString@string+1
  1531  0DDC  120A  158A  211A  120A  158A  	fcall	_printString
  1532                           
  1533                           ;LE7-3.c: 143: instCtrl(0xCC);
  1534  0DE1  30CC               	movlw	204
  1535  0DE2  120A  158A  2163  120A  158A  	fcall	_instCtrl
  1536                           
  1537                           ;LE7-3.c: 144: printString("    ");
  1538  0DE7  305D               	movlw	low (STR_1-__stringbase)
  1539  0DE8  00F3               	movwf	printString@string
  1540  0DE9  3080               	movlw	128
  1541  0DEA  00F4               	movwf	printString@string+1
  1542  0DEB  120A  158A  211A  120A  158A  	fcall	_printString
  1543                           
  1544                           ;LE7-3.c: 147: instCtrl(0x80);
  1545  0DF0  3080               	movlw	128
  1546  0DF1  120A  158A  2163  120A  158A  	fcall	_instCtrl
  1547                           
  1548                           ;LE7-3.c: 148: printString("Humidity: ");
  1549  0DF6  3052               	movlw	low (STR_3-__stringbase)
  1550  0DF7  00F3               	movwf	printString@string
  1551  0DF8  3080               	movlw	128
  1552  0DF9  00F4               	movwf	printString@string+1
  1553  0DFA  120A  158A  211A  120A  158A  	fcall	_printString
  1554                           
  1555                           ;LE7-3.c: 149: char humidity[10];
  1556                           ;LE7-3.c: 150: sprintf(humidity, "%d", relative_humidity);
  1557  0DFF  3062               	movlw	(STR_4-__stringbase)& (0+255)
  1558  0E00  1283               	bcf	3,5	;RP0=0, select bank0
  1559  0E01  1303               	bcf	3,6	;RP1=0, select bank0
  1560  0E02  00AF               	movwf	??_updateDisplay
  1561  0E03  082F               	movf	??_updateDisplay,w
  1562  0E04  00A0               	movwf	sprintf@f
  1563  0E05  1683               	bsf	3,5	;RP0=1, select bank1
  1564  0E06  1303               	bcf	3,6	;RP1=0, select bank1
  1565  0E07  0850               	movf	(_relative_humidity+1)^(0+128),w
  1566  0E08  1283               	bcf	3,5	;RP0=0, select bank0
  1567  0E09  1303               	bcf	3,6	;RP1=0, select bank0
  1568  0E0A  01A2               	clrf	?_sprintf+2
  1569  0E0B  07A2               	addwf	?_sprintf+2,f
  1570  0E0C  1683               	bsf	3,5	;RP0=1, select bank1
  1571  0E0D  1303               	bcf	3,6	;RP1=0, select bank1
  1572  0E0E  084F               	movf	_relative_humidity^(0+128),w
  1573  0E0F  1283               	bcf	3,5	;RP0=0, select bank0
  1574  0E10  1303               	bcf	3,6	;RP1=0, select bank0
  1575  0E11  01A1               	clrf	?_sprintf+1
  1576  0E12  07A1               	addwf	?_sprintf+1,f
  1577  0E13  3030               	movlw	updateDisplay@humidity& (0+255)
  1578  0E14  120A  118A  20F7  120A  158A  	fcall	_sprintf
  1579                           
  1580                           ;LE7-3.c: 151: printString(humidity);
  1581  0E19  3030               	movlw	updateDisplay@humidity& (0+255)
  1582  0E1A  00F3               	movwf	printString@string
  1583  0E1B  3000               	movlw	0
  1584  0E1C  00F4               	movwf	printString@string+1
  1585  0E1D  120A  158A  211A  120A  158A  	fcall	_printString
  1586                           
  1587                           ;LE7-3.c: 152: dataCtrl('%');
  1588  0E22  3025               	movlw	37
  1589  0E23  120A  158A  218C  120A  158A  	fcall	_dataCtrl
  1590                           
  1591                           ;LE7-3.c: 155: instCtrl(0xC0);
  1592  0E28  30C0               	movlw	192
  1593  0E29  120A  158A  2163  120A  158A  	fcall	_instCtrl
  1594                           
  1595                           ;LE7-3.c: 156: printString("Temperature: ");
  1596  0E2E  3044               	movlw	low (STR_5-__stringbase)
  1597  0E2F  00F3               	movwf	printString@string
  1598  0E30  3080               	movlw	128
  1599  0E31  00F4               	movwf	printString@string+1
  1600  0E32  120A  158A  211A  120A  158A  	fcall	_printString
  1601                           
  1602                           ;LE7-3.c: 157: char temp[10];
  1603                           ;LE7-3.c: 158: sprintf(temp, "%d", temperature);
  1604  0E37  3062               	movlw	(STR_4-__stringbase)& (0+255)
  1605  0E38  1283               	bcf	3,5	;RP0=0, select bank0
  1606  0E39  1303               	bcf	3,6	;RP1=0, select bank0
  1607  0E3A  00AF               	movwf	??_updateDisplay
  1608  0E3B  082F               	movf	??_updateDisplay,w
  1609  0E3C  00A0               	movwf	sprintf@f
  1610  0E3D  1683               	bsf	3,5	;RP0=1, select bank1
  1611  0E3E  1303               	bcf	3,6	;RP1=0, select bank1
  1612  0E3F  0852               	movf	(_temperature+1)^(0+128),w
  1613  0E40  1283               	bcf	3,5	;RP0=0, select bank0
  1614  0E41  1303               	bcf	3,6	;RP1=0, select bank0
  1615  0E42  01A2               	clrf	?_sprintf+2
  1616  0E43  07A2               	addwf	?_sprintf+2,f
  1617  0E44  1683               	bsf	3,5	;RP0=1, select bank1
  1618  0E45  1303               	bcf	3,6	;RP1=0, select bank1
  1619  0E46  0851               	movf	_temperature^(0+128),w
  1620  0E47  1283               	bcf	3,5	;RP0=0, select bank0
  1621  0E48  1303               	bcf	3,6	;RP1=0, select bank0
  1622  0E49  01A1               	clrf	?_sprintf+1
  1623  0E4A  07A1               	addwf	?_sprintf+1,f
  1624  0E4B  303A               	movlw	updateDisplay@temp& (0+255)
  1625  0E4C  120A  118A  20F7  120A  158A  	fcall	_sprintf
  1626                           
  1627                           ;LE7-3.c: 159: printString(temp);
  1628  0E51  303A               	movlw	updateDisplay@temp& (0+255)
  1629  0E52  00F3               	movwf	printString@string
  1630  0E53  3000               	movlw	0
  1631  0E54  00F4               	movwf	printString@string+1
  1632  0E55  120A  158A  211A  120A  158A  	fcall	_printString
  1633                           
  1634                           ;LE7-3.c: 160: dataCtrl('C');
  1635  0E5A  3043               	movlw	67
  1636  0E5B  120A  158A  218C  120A  158A  	fcall	_dataCtrl
  1637                           
  1638                           ;LE7-3.c: 161: for(int i = 0; i < 1000; i++);
  1639  0E60  1283               	bcf	3,5	;RP0=0, select bank0
  1640  0E61  1303               	bcf	3,6	;RP1=0, select bank0
  1641  0E62  01C4               	clrf	updateDisplay@i
  1642  0E63  01C5               	clrf	updateDisplay@i+1
  1643  0E64                     L2:	
  1644  0E64  0845               	movf	updateDisplay@i+1,w
  1645  0E65  3A80               	xorlw	128
  1646  0E66  00FF               	movwf	127
  1647  0E67  3083               	movlw	131
  1648  0E68  027F               	subwf	127,w
  1649  0E69  1D03               	skipz
  1650  0E6A  2E6D               	goto	u2775
  1651  0E6B  30E8               	movlw	232
  1652  0E6C  0244               	subwf	updateDisplay@i,w
  1653  0E6D                     u2775:	
  1654  0E6D  1803               	btfsc	3,0
  1655  0E6E  0008               	return
  1656  0E6F  3001               	movlw	1
  1657  0E70  1283               	bcf	3,5	;RP0=0, select bank0
  1658  0E71  1303               	bcf	3,6	;RP1=0, select bank0
  1659  0E72  07C4               	addwf	updateDisplay@i,f
  1660  0E73  1803               	skipnc
  1661  0E74  0AC5               	incf	updateDisplay@i+1,f
  1662  0E75  3000               	movlw	0
  1663  0E76  07C5               	addwf	updateDisplay@i+1,f
  1664  0E77  2E64               	goto	L2
  1665  0E78                     __end_of_updateDisplay:	
  1666                           
  1667                           	psect	text2
  1668  00F7                     __ptext2:	
  1669 ;; *************** function _sprintf *****************
  1670 ;; Defined at:
  1671 ;;		line 492 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\doprnt.c"
  1672 ;; Parameters:    Size  Location     Type
  1673 ;;  sp              1    wreg     PTR unsigned char 
  1674 ;;		 -> updateDisplay@temp(10), updateDisplay@humidity(10), 
  1675 ;;  f               1    0[BANK0 ] PTR const unsigned char 
  1676 ;;		 -> STR_6(3), STR_4(3), 
  1677 ;; Auto vars:     Size  Location     Type
  1678 ;;  sp              1   13[BANK0 ] PTR unsigned char 
  1679 ;;		 -> updateDisplay@temp(10), updateDisplay@humidity(10), 
  1680 ;;  _val            4    9[BANK0 ] struct .
  1681 ;;  c               1   14[BANK0 ] char 
  1682 ;;  prec            1    8[BANK0 ] char 
  1683 ;;  flag            1    7[BANK0 ] unsigned char 
  1684 ;;  ap              1    6[BANK0 ] PTR void [1]
  1685 ;;		 -> ?_sprintf(2), 
  1686 ;; Return value:  Size  Location     Type
  1687 ;;                  2    0[BANK0 ] int 
  1688 ;; Registers used:
  1689 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1690 ;; Tracked objects:
  1691 ;;		On entry : 0/0
  1692 ;;		On exit  : 0/0
  1693 ;;		Unchanged: 0/0
  1694 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1695 ;;      Params:         0       3       0       0       0
  1696 ;;      Locals:         0       9       0       0       0
  1697 ;;      Temps:          0       3       0       0       0
  1698 ;;      Totals:         0      15       0       0       0
  1699 ;;Total ram usage:       15 bytes
  1700 ;; Hardware stack levels used:    1
  1701 ;; Hardware stack levels required when called:    1
  1702 ;; This function calls:
  1703 ;;		___lwdiv
  1704 ;;		___lwmod
  1705 ;; This function is called by:
  1706 ;;		_updateDisplay
  1707 ;; This function uses a non-reentrant model
  1708 ;;
  1709                           
  1710                           
  1711                           ;psect for function _sprintf
  1712  00F7                     _sprintf:	
  1713                           
  1714                           ;incstack = 0
  1715                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1716                           ;sprintf@sp stored from wreg
  1717  00F7  1283               	bcf	3,5	;RP0=0, select bank0
  1718  00F8  1303               	bcf	3,6	;RP1=0, select bank0
  1719  00F9  00AD               	movwf	sprintf@sp
  1720                           
  1721                           ;doprnt.c: 494: va_list ap;
  1722                           ;doprnt.c: 499: signed char c;
  1723                           ;doprnt.c: 506: signed char prec;
  1724                           ;doprnt.c: 508: unsigned char flag;
  1725                           ;doprnt.c: 527: union {
  1726                           ;doprnt.c: 528: unsigned int _val;
  1727                           ;doprnt.c: 529: struct {
  1728                           ;doprnt.c: 530: const char * _cp;
  1729                           ;doprnt.c: 531: unsigned _len;
  1730                           ;doprnt.c: 532: } _str;
  1731                           ;doprnt.c: 533: } _val;
  1732                           ;doprnt.c: 542: *ap = __va_start();
  1733  00FA  3021               	movlw	(?_sprintf+1)& (0+255)
  1734  00FB  00A3               	movwf	??_sprintf
  1735  00FC  0823               	movf	??_sprintf,w
  1736  00FD  00A6               	movwf	sprintf@ap
  1737  00FE                     l2145:	
  1738                           ;doprnt.c: 545: while(c = *f++) {
  1739                           
  1740  00FE  3001               	movlw	1
  1741  00FF  07A0               	addwf	sprintf@f,f
  1742  0100  30FF               	movlw	-1
  1743  0101  0720               	addwf	sprintf@f,w
  1744  0102  0084               	movwf	4
  1745  0103  120A  158A  200A  120A  118A  	fcall	stringdir
  1746  0108  00A3               	movwf	??_sprintf
  1747  0109  0823               	movf	??_sprintf,w
  1748  010A  00AE               	movwf	sprintf@c
  1749  010B  08AE               	movf	sprintf@c,f
  1750  010C  1903               	btfsc	3,2
  1751  010D  29CB               	goto	l2147
  1752                           
  1753                           ;doprnt.c: 547: if(c != '%')
  1754  010E  082E               	movf	sprintf@c,w
  1755  010F  3A25               	xorlw	37
  1756  0110  1903               	skipnz
  1757  0111  291E               	goto	l2101
  1758                           
  1759                           ;doprnt.c: 549: {
  1760                           ;doprnt.c: 550: ((*sp++ = (c)));
  1761  0112  082E               	movf	sprintf@c,w
  1762  0113  00A3               	movwf	??_sprintf
  1763  0114  082D               	movf	sprintf@sp,w
  1764  0115  0084               	movwf	4
  1765  0116  0823               	movf	??_sprintf,w
  1766  0117  1383               	bcf	3,7	;select IRP bank0
  1767  0118  0080               	movwf	0
  1768  0119  3001               	movlw	1
  1769  011A  00A3               	movwf	??_sprintf
  1770  011B  0823               	movf	??_sprintf,w
  1771  011C  07AD               	addwf	sprintf@sp,f
  1772                           
  1773                           ;doprnt.c: 551: continue;
  1774  011D  28FE               	goto	l2145
  1775  011E                     l2101:	
  1776                           
  1777                           ;doprnt.c: 552: }
  1778                           ;doprnt.c: 557: flag = 0;
  1779  011E  01A7               	clrf	sprintf@flag
  1780                           
  1781                           ;doprnt.c: 831: }
  1782                           
  1783                           ;doprnt.c: 822: continue;
  1784                           
  1785                           ;doprnt.c: 811: default:
  1786                           
  1787                           ;doprnt.c: 707: case 'i':
  1788                           ;doprnt.c: 708: break;
  1789                           
  1790                           ;doprnt.c: 706: case 'd':
  1791                           
  1792                           ;doprnt.c: 647: goto alldone;
  1793                           
  1794                           ;doprnt.c: 646: case 0:
  1795                           
  1796                           ;doprnt.c: 644: switch(c = *f++) {
  1797  011F  3001               	movlw	1
  1798  0120  07A0               	addwf	sprintf@f,f
  1799  0121  30FF               	movlw	-1
  1800  0122  0720               	addwf	sprintf@f,w
  1801  0123  0084               	movwf	4
  1802  0124  120A  158A  200A  120A  118A  	fcall	stringdir
  1803  0129  00AE               	movwf	sprintf@c
  1804                           
  1805                           ; Switch size 1, requested type "space"
  1806                           ; Number of cases is 3, Range of values is 0 to 105
  1807                           ; switch strategies available:
  1808                           ; Name         Instructions Cycles
  1809                           ; simple_byte           10     6 (average)
  1810                           ; jumptable            260     6 (fixed)
  1811                           ;	Chosen strategy is simple_byte
  1812  012A  3A00               	xorlw	0	; case 0
  1813  012B  1903               	skipnz
  1814  012C  29CB               	goto	l2147
  1815  012D  3A64               	xorlw	100	; case 100
  1816  012E  1903               	skipnz
  1817  012F  2934               	goto	l2107
  1818  0130  3A0D               	xorlw	13	; case 105
  1819  0131  1903               	skipnz
  1820  0132  2934               	goto	l2107
  1821  0133  28FE               	goto	l2145
  1822  0134                     l2107:	
  1823                           
  1824                           ;doprnt.c: 1262: {
  1825                           ;doprnt.c: 1268: _val._val = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
  1826  0134  0826               	movf	sprintf@ap,w
  1827  0135  0084               	movwf	4
  1828  0136  1383               	bcf	3,7	;select IRP bank0
  1829  0137  0800               	movf	0,w
  1830  0138  00A9               	movwf	sprintf@_val
  1831  0139  0A84               	incf	4,f
  1832  013A  0800               	movf	0,w
  1833  013B  00AA               	movwf	sprintf@_val+1
  1834  013C  3002               	movlw	2
  1835  013D  00A3               	movwf	??_sprintf
  1836  013E  0823               	movf	??_sprintf,w
  1837  013F  07A6               	addwf	sprintf@ap,f
  1838                           
  1839                           ;doprnt.c: 1270: if((int)_val._val < 0) {
  1840  0140  1FAA               	btfss	sprintf@_val+1,7
  1841  0141  294B               	goto	l2117
  1842                           
  1843                           ;doprnt.c: 1271: flag |= 0x03;
  1844  0142  3003               	movlw	3
  1845  0143  00A3               	movwf	??_sprintf
  1846  0144  0823               	movf	??_sprintf,w
  1847  0145  04A7               	iorwf	sprintf@flag,f
  1848                           
  1849                           ;doprnt.c: 1272: _val._val = -_val._val;
  1850  0146  09A9               	comf	sprintf@_val,f
  1851  0147  09AA               	comf	sprintf@_val+1,f
  1852  0148  0AA9               	incf	sprintf@_val,f
  1853  0149  1903               	skipnz
  1854  014A  0AAA               	incf	sprintf@_val+1,f
  1855  014B                     l2117:	
  1856                           
  1857                           ;doprnt.c: 1273: }
  1858                           ;doprnt.c: 1275: }
  1859                           ;doprnt.c: 1314: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  1860  014B  01AE               	clrf	sprintf@c
  1861  014C  0AAE               	incf	sprintf@c,f
  1862  014D  082E               	movf	sprintf@c,w
  1863  014E  3A05               	xorlw	5
  1864  014F  1903               	btfsc	3,2
  1865  0150  2972               	goto	l2129
  1866  0151                     l2121:	
  1867                           
  1868                           ;doprnt.c: 1315: if(_val._val < dpowers[c])
  1869  0151  082E               	movf	sprintf@c,w
  1870  0152  00A3               	movwf	??_sprintf
  1871  0153  0723               	addwf	??_sprintf,w
  1872  0154  3E01               	addlw	low (_dpowers-__stringbase)
  1873  0155  0084               	movwf	4
  1874  0156  120A  158A  200A  120A  118A  	fcall	stringdir
  1875  015B  00A4               	movwf	??_sprintf+1
  1876  015C  120A  158A  200A  120A  118A  	fcall	stringdir
  1877  0161  00A5               	movwf	??_sprintf+2
  1878  0162  0825               	movf	??_sprintf+2,w
  1879  0163  022A               	subwf	sprintf@_val+1,w
  1880  0164  1D03               	skipz
  1881  0165  2968               	goto	u2525
  1882  0166  0824               	movf	??_sprintf+1,w
  1883  0167  0229               	subwf	sprintf@_val,w
  1884  0168                     u2525:	
  1885  0168  1C03               	btfss	3,0
  1886  0169  2972               	goto	l2129
  1887                           
  1888                           ;doprnt.c: 1316: break;
  1889  016A  3001               	movlw	1
  1890  016B  00A3               	movwf	??_sprintf
  1891  016C  0823               	movf	??_sprintf,w
  1892  016D  07AE               	addwf	sprintf@c,f
  1893  016E  082E               	movf	sprintf@c,w
  1894  016F  3A05               	xorlw	5
  1895  0170  1D03               	skipz
  1896  0171  2951               	goto	l2121
  1897  0172                     l2129:	
  1898                           
  1899                           ;doprnt.c: 1431: {
  1900                           ;doprnt.c: 1447: if(flag & 0x03)
  1901  0172  0827               	movf	sprintf@flag,w
  1902  0173  3903               	andlw	3
  1903  0174  1903               	btfsc	3,2
  1904  0175  2981               	goto	l2135
  1905                           
  1906                           ;doprnt.c: 1448: ((*sp++ = ('-')));
  1907  0176  302D               	movlw	45
  1908  0177  00A3               	movwf	??_sprintf
  1909  0178  082D               	movf	sprintf@sp,w
  1910  0179  0084               	movwf	4
  1911  017A  0823               	movf	??_sprintf,w
  1912  017B  1383               	bcf	3,7	;select IRP bank0
  1913  017C  0080               	movwf	0
  1914  017D  3001               	movlw	1
  1915  017E  00A3               	movwf	??_sprintf
  1916  017F  0823               	movf	??_sprintf,w
  1917  0180  07AD               	addwf	sprintf@sp,f
  1918  0181                     l2135:	
  1919                           
  1920                           ;doprnt.c: 1478: }
  1921                           ;doprnt.c: 1481: prec = c;
  1922  0181  082E               	movf	sprintf@c,w
  1923  0182  00A3               	movwf	??_sprintf
  1924  0183  0823               	movf	??_sprintf,w
  1925  0184  00A8               	movwf	sprintf@prec
  1926  0185                     l2143:	
  1927                           ;doprnt.c: 1483: while(prec--) {
  1928                           
  1929  0185  30FF               	movlw	-1
  1930  0186  00A3               	movwf	??_sprintf
  1931  0187  0823               	movf	??_sprintf,w
  1932  0188  07A8               	addwf	sprintf@prec,f
  1933  0189  0828               	movf	sprintf@prec,w
  1934  018A  3AFF               	xorlw	-1
  1935  018B  1903               	btfsc	3,2
  1936  018C  28FE               	goto	l2145
  1937                           
  1938                           ;doprnt.c: 1487: {
  1939                           ;doprnt.c: 1498: c = (_val._val / dpowers[prec]) % 10 + '0';
  1940  018D  300A               	movlw	10
  1941  018E  00F8               	movwf	___lwmod@divisor
  1942  018F  3000               	movlw	0
  1943  0190  00F9               	movwf	___lwmod@divisor+1
  1944  0191  0828               	movf	sprintf@prec,w
  1945  0192  00A3               	movwf	??_sprintf
  1946  0193  0723               	addwf	??_sprintf,w
  1947  0194  3E01               	addlw	low (_dpowers-__stringbase)
  1948  0195  0084               	movwf	4
  1949  0196  120A  158A  200A  120A  118A  	fcall	stringdir
  1950  019B  00F0               	movwf	___lwdiv@divisor
  1951  019C  120A  158A  200A  120A  118A  	fcall	stringdir
  1952  01A1  00F1               	movwf	___lwdiv@divisor+1
  1953  01A2  082A               	movf	sprintf@_val+1,w
  1954  01A3  01F3               	clrf	___lwdiv@dividend+1
  1955  01A4  07F3               	addwf	___lwdiv@dividend+1,f
  1956  01A5  0829               	movf	sprintf@_val,w
  1957  01A6  01F2               	clrf	___lwdiv@dividend
  1958  01A7  07F2               	addwf	___lwdiv@dividend,f
  1959  01A8  120A  158A  2214  120A  118A  	fcall	___lwdiv
  1960  01AD  0871               	movf	?___lwdiv+1,w
  1961  01AE  01FB               	clrf	___lwmod@dividend+1
  1962  01AF  07FB               	addwf	___lwmod@dividend+1,f
  1963  01B0  0870               	movf	?___lwdiv,w
  1964  01B1  01FA               	clrf	___lwmod@dividend
  1965  01B2  07FA               	addwf	___lwmod@dividend,f
  1966  01B3  120A  158A  21E0  120A  118A  	fcall	___lwmod
  1967  01B8  0878               	movf	?___lwmod,w
  1968  01B9  3E30               	addlw	48
  1969  01BA  1283               	bcf	3,5	;RP0=0, select bank0
  1970  01BB  1303               	bcf	3,6	;RP1=0, select bank0
  1971  01BC  00A4               	movwf	??_sprintf+1
  1972  01BD  0824               	movf	??_sprintf+1,w
  1973  01BE  00AE               	movwf	sprintf@c
  1974                           
  1975                           ;doprnt.c: 1532: }
  1976                           ;doprnt.c: 1533: ((*sp++ = (c)));
  1977  01BF  082E               	movf	sprintf@c,w
  1978  01C0  00A3               	movwf	??_sprintf
  1979  01C1  082D               	movf	sprintf@sp,w
  1980  01C2  0084               	movwf	4
  1981  01C3  0823               	movf	??_sprintf,w
  1982  01C4  1383               	bcf	3,7	;select IRP bank0
  1983  01C5  0080               	movwf	0
  1984  01C6  3001               	movlw	1
  1985  01C7  00A3               	movwf	??_sprintf
  1986  01C8  0823               	movf	??_sprintf,w
  1987  01C9  07AD               	addwf	sprintf@sp,f
  1988  01CA  2985               	goto	l2143
  1989  01CB                     l2147:	
  1990                           ;doprnt.c: 1534: }
  1991                           ;doprnt.c: 1542: }
  1992                           ;doprnt.c: 1544: alldone:
  1993                           
  1994                           
  1995                           ;doprnt.c: 1547: *sp = 0;
  1996  01CB  082D               	movf	sprintf@sp,w
  1997  01CC  0084               	movwf	4
  1998  01CD  1383               	bcf	3,7	;select IRP bank0
  1999  01CE  0180               	clrf	0
  2000  01CF  0008               	return
  2001  01D0                     __end_of_sprintf:	
  2002                           ;doprnt.c: 1549: return 0;
  2003                           ;	Return value of _sprintf is never used
  2004                           
  2005                           
  2006                           	psect	text3
  2007  09E0                     __ptext3:	
  2008 ;; *************** function ___lwmod *****************
  2009 ;; Defined at:
  2010 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\lwmod.c"
  2011 ;; Parameters:    Size  Location     Type
  2012 ;;  divisor         2    8[COMMON] unsigned int 
  2013 ;;  dividend        2   10[COMMON] unsigned int 
  2014 ;; Auto vars:     Size  Location     Type
  2015 ;;  counter         1   13[COMMON] unsigned char 
  2016 ;; Return value:  Size  Location     Type
  2017 ;;                  2    8[COMMON] unsigned int 
  2018 ;; Registers used:
  2019 ;;		wreg, status,2, status,0
  2020 ;; Tracked objects:
  2021 ;;		On entry : 0/0
  2022 ;;		On exit  : 0/0
  2023 ;;		Unchanged: 0/0
  2024 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2025 ;;      Params:         4       0       0       0       0
  2026 ;;      Locals:         1       0       0       0       0
  2027 ;;      Temps:          1       0       0       0       0
  2028 ;;      Totals:         6       0       0       0       0
  2029 ;;Total ram usage:        6 bytes
  2030 ;; Hardware stack levels used:    1
  2031 ;; This function calls:
  2032 ;;		Nothing
  2033 ;; This function is called by:
  2034 ;;		_sprintf
  2035 ;; This function uses a non-reentrant model
  2036 ;;
  2037                           
  2038                           
  2039                           ;psect for function ___lwmod
  2040  09E0                     ___lwmod:	
  2041                           
  2042                           ;incstack = 0
  2043                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  2044  09E0  0879               	movf	___lwmod@divisor+1,w
  2045  09E1  0478               	iorwf	___lwmod@divisor,w
  2046  09E2  1903               	skipnz
  2047  09E3  2A0D               	goto	l1981
  2048  09E4  01FD               	clrf	___lwmod@counter
  2049  09E5  0AFD               	incf	___lwmod@counter,f
  2050  09E6                     l1971:	
  2051  09E6  1BF9               	btfsc	___lwmod@divisor+1,7
  2052  09E7  29F4               	goto	l1973
  2053  09E8  3001               	movlw	1
  2054  09E9                     u2325:	
  2055  09E9  1003               	clrc
  2056  09EA  0DF8               	rlf	___lwmod@divisor,f
  2057  09EB  0DF9               	rlf	___lwmod@divisor+1,f
  2058  09EC  3EFF               	addlw	-1
  2059  09ED  1D03               	skipz
  2060  09EE  29E9               	goto	u2325
  2061  09EF  3001               	movlw	1
  2062  09F0  00FC               	movwf	??___lwmod
  2063  09F1  087C               	movf	??___lwmod,w
  2064  09F2  07FD               	addwf	___lwmod@counter,f
  2065  09F3  29E6               	goto	l1971
  2066  09F4                     l1973:	
  2067  09F4  0879               	movf	___lwmod@divisor+1,w
  2068  09F5  027B               	subwf	___lwmod@dividend+1,w
  2069  09F6  1D03               	skipz
  2070  09F7  29FA               	goto	u2345
  2071  09F8  0878               	movf	___lwmod@divisor,w
  2072  09F9  027A               	subwf	___lwmod@dividend,w
  2073  09FA                     u2345:	
  2074  09FA  1C03               	skipc
  2075  09FB  2A02               	goto	l1977
  2076  09FC  0878               	movf	___lwmod@divisor,w
  2077  09FD  02FA               	subwf	___lwmod@dividend,f
  2078  09FE  0879               	movf	___lwmod@divisor+1,w
  2079  09FF  1C03               	skipc
  2080  0A00  03FB               	decf	___lwmod@dividend+1,f
  2081  0A01  02FB               	subwf	___lwmod@dividend+1,f
  2082  0A02                     l1977:	
  2083  0A02  3001               	movlw	1
  2084  0A03                     u2355:	
  2085  0A03  1003               	clrc
  2086  0A04  0CF9               	rrf	___lwmod@divisor+1,f
  2087  0A05  0CF8               	rrf	___lwmod@divisor,f
  2088  0A06  3EFF               	addlw	-1
  2089  0A07  1D03               	skipz
  2090  0A08  2A03               	goto	u2355
  2091  0A09  3001               	movlw	1
  2092  0A0A  02FD               	subwf	___lwmod@counter,f
  2093  0A0B  1D03               	btfss	3,2
  2094  0A0C  29F4               	goto	l1973
  2095  0A0D                     l1981:	
  2096  0A0D  087B               	movf	___lwmod@dividend+1,w
  2097  0A0E  01F9               	clrf	?___lwmod+1
  2098  0A0F  07F9               	addwf	?___lwmod+1,f
  2099  0A10  087A               	movf	___lwmod@dividend,w
  2100  0A11  01F8               	clrf	?___lwmod
  2101  0A12  07F8               	addwf	?___lwmod,f
  2102  0A13  0008               	return
  2103  0A14                     __end_of___lwmod:	
  2104                           
  2105                           	psect	text4
  2106  0A14                     __ptext4:	
  2107 ;; *************** function ___lwdiv *****************
  2108 ;; Defined at:
  2109 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\lwdiv.c"
  2110 ;; Parameters:    Size  Location     Type
  2111 ;;  divisor         2    0[COMMON] unsigned int 
  2112 ;;  dividend        2    2[COMMON] unsigned int 
  2113 ;; Auto vars:     Size  Location     Type
  2114 ;;  quotient        2    5[COMMON] unsigned int 
  2115 ;;  counter         1    7[COMMON] unsigned char 
  2116 ;; Return value:  Size  Location     Type
  2117 ;;                  2    0[COMMON] unsigned int 
  2118 ;; Registers used:
  2119 ;;		wreg, status,2, status,0
  2120 ;; Tracked objects:
  2121 ;;		On entry : 0/0
  2122 ;;		On exit  : 0/0
  2123 ;;		Unchanged: 0/0
  2124 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2125 ;;      Params:         4       0       0       0       0
  2126 ;;      Locals:         3       0       0       0       0
  2127 ;;      Temps:          1       0       0       0       0
  2128 ;;      Totals:         8       0       0       0       0
  2129 ;;Total ram usage:        8 bytes
  2130 ;; Hardware stack levels used:    1
  2131 ;; This function calls:
  2132 ;;		Nothing
  2133 ;; This function is called by:
  2134 ;;		_sprintf
  2135 ;; This function uses a non-reentrant model
  2136 ;;
  2137                           
  2138                           
  2139                           ;psect for function ___lwdiv
  2140  0A14                     ___lwdiv:	
  2141                           
  2142                           ;incstack = 0
  2143                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  2144  0A14  01F5               	clrf	___lwdiv@quotient
  2145  0A15  01F6               	clrf	___lwdiv@quotient+1
  2146  0A16  0871               	movf	___lwdiv@divisor+1,w
  2147  0A17  0470               	iorwf	___lwdiv@divisor,w
  2148  0A18  1903               	skipnz
  2149  0A19  2A4B               	goto	l1959
  2150  0A1A  01F7               	clrf	___lwdiv@counter
  2151  0A1B  0AF7               	incf	___lwdiv@counter,f
  2152  0A1C                     l1947:	
  2153  0A1C  1BF1               	btfsc	___lwdiv@divisor+1,7
  2154  0A1D  2A2A               	goto	l1949
  2155  0A1E  3001               	movlw	1
  2156  0A1F                     u2255:	
  2157  0A1F  1003               	clrc
  2158  0A20  0DF0               	rlf	___lwdiv@divisor,f
  2159  0A21  0DF1               	rlf	___lwdiv@divisor+1,f
  2160  0A22  3EFF               	addlw	-1
  2161  0A23  1D03               	skipz
  2162  0A24  2A1F               	goto	u2255
  2163  0A25  3001               	movlw	1
  2164  0A26  00F4               	movwf	??___lwdiv
  2165  0A27  0874               	movf	??___lwdiv,w
  2166  0A28  07F7               	addwf	___lwdiv@counter,f
  2167  0A29  2A1C               	goto	l1947
  2168  0A2A                     l1949:	
  2169  0A2A  3001               	movlw	1
  2170  0A2B                     u2275:	
  2171  0A2B  1003               	clrc
  2172  0A2C  0DF5               	rlf	___lwdiv@quotient,f
  2173  0A2D  0DF6               	rlf	___lwdiv@quotient+1,f
  2174  0A2E  3EFF               	addlw	-1
  2175  0A2F  1D03               	skipz
  2176  0A30  2A2B               	goto	u2275
  2177  0A31  0871               	movf	___lwdiv@divisor+1,w
  2178  0A32  0273               	subwf	___lwdiv@dividend+1,w
  2179  0A33  1D03               	skipz
  2180  0A34  2A37               	goto	u2285
  2181  0A35  0870               	movf	___lwdiv@divisor,w
  2182  0A36  0272               	subwf	___lwdiv@dividend,w
  2183  0A37                     u2285:	
  2184  0A37  1C03               	skipc
  2185  0A38  2A40               	goto	l1955
  2186  0A39  0870               	movf	___lwdiv@divisor,w
  2187  0A3A  02F2               	subwf	___lwdiv@dividend,f
  2188  0A3B  0871               	movf	___lwdiv@divisor+1,w
  2189  0A3C  1C03               	skipc
  2190  0A3D  03F3               	decf	___lwdiv@dividend+1,f
  2191  0A3E  02F3               	subwf	___lwdiv@dividend+1,f
  2192  0A3F  1475               	bsf	___lwdiv@quotient,0
  2193  0A40                     l1955:	
  2194  0A40  3001               	movlw	1
  2195  0A41                     u2295:	
  2196  0A41  1003               	clrc
  2197  0A42  0CF1               	rrf	___lwdiv@divisor+1,f
  2198  0A43  0CF0               	rrf	___lwdiv@divisor,f
  2199  0A44  3EFF               	addlw	-1
  2200  0A45  1D03               	skipz
  2201  0A46  2A41               	goto	u2295
  2202  0A47  3001               	movlw	1
  2203  0A48  02F7               	subwf	___lwdiv@counter,f
  2204  0A49  1D03               	btfss	3,2
  2205  0A4A  2A2A               	goto	l1949
  2206  0A4B                     l1959:	
  2207  0A4B  0876               	movf	___lwdiv@quotient+1,w
  2208  0A4C  01F1               	clrf	?___lwdiv+1
  2209  0A4D  07F1               	addwf	?___lwdiv+1,f
  2210  0A4E  0875               	movf	___lwdiv@quotient,w
  2211  0A4F  01F0               	clrf	?___lwdiv
  2212  0A50  07F0               	addwf	?___lwdiv,f
  2213  0A51  0008               	return
  2214  0A52                     __end_of___lwdiv:	
  2215                           
  2216                           	psect	text5
  2217  091A                     __ptext5:	
  2218 ;; *************** function _printString *****************
  2219 ;; Defined at:
  2220 ;;		line 218 in file "C:\Users\notjo\OneDrive\Desktop\USC\USC-Year3-Sem2\3201-EmbeddedSystems\Labs\LE_07\LE7-3\LE7-3.c"
  2221 ;; Parameters:    Size  Location     Type
  2222 ;;  string          2    3[COMMON] PTR unsigned char 
  2223 ;;		 -> updateDisplay@temp(10), STR_5(14), updateDisplay@humidity(10), STR_3(11), 
  2224 ;;		 -> STR_2(5), STR_1(5), 
  2225 ;; Auto vars:     Size  Location     Type
  2226 ;;		None
  2227 ;; Return value:  Size  Location     Type
  2228 ;;		None               void
  2229 ;; Registers used:
  2230 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2231 ;; Tracked objects:
  2232 ;;		On entry : 0/0
  2233 ;;		On exit  : 0/0
  2234 ;;		Unchanged: 0/0
  2235 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2236 ;;      Params:         2       0       0       0       0
  2237 ;;      Locals:         0       0       0       0       0
  2238 ;;      Temps:          0       0       0       0       0
  2239 ;;      Totals:         2       0       0       0       0
  2240 ;;Total ram usage:        2 bytes
  2241 ;; Hardware stack levels used:    1
  2242 ;; Hardware stack levels required when called:    1
  2243 ;; This function calls:
  2244 ;;		_dataCtrl
  2245 ;; This function is called by:
  2246 ;;		_updateDisplay
  2247 ;; This function uses a non-reentrant model
  2248 ;;
  2249                           
  2250                           
  2251                           ;psect for function _printString
  2252  091A                     _printString:	
  2253  091A                     l2091:	
  2254                           ;LE7-3.c: 220: while(*string)
  2255                           
  2256                           ;incstack = 0
  2257                           ; Regs used in _printString: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2258                           
  2259  091A  0874               	movf	printString@string+1,w
  2260  091B  1283               	bcf	3,5	;RP0=0, select bank0
  2261  091C  1303               	bcf	3,6	;RP1=0, select bank0
  2262  091D  00FF               	movwf	127
  2263  091E  0873               	movf	printString@string,w
  2264  091F  0084               	movwf	4
  2265  0920  120A  158A  2000  120A  158A  	fcall	stringtab
  2266  0925  3800               	iorlw	0
  2267  0926  1903               	btfsc	3,2
  2268  0927  0008               	return
  2269                           
  2270                           ;LE7-3.c: 221: {
  2271                           ;LE7-3.c: 222: dataCtrl(*string++);
  2272  0928  0874               	movf	printString@string+1,w
  2273  0929  1283               	bcf	3,5	;RP0=0, select bank0
  2274  092A  1303               	bcf	3,6	;RP1=0, select bank0
  2275  092B  00FF               	movwf	127
  2276  092C  0873               	movf	printString@string,w
  2277  092D  0084               	movwf	4
  2278  092E  120A  158A  2000  120A  158A  	fcall	stringtab
  2279  0933  120A  158A  218C  120A  158A  	fcall	_dataCtrl
  2280  0938  3001               	movlw	1
  2281  0939  07F3               	addwf	printString@string,f
  2282  093A  1803               	skipnc
  2283  093B  0AF4               	incf	printString@string+1,f
  2284  093C  291A               	goto	l2091
  2285  093D                     __end_of_printString:	
  2286                           
  2287                           	psect	text6
  2288  098C                     __ptext6:	
  2289 ;; *************** function _dataCtrl *****************
  2290 ;; Defined at:
  2291 ;;		line 188 in file "C:\Users\notjo\OneDrive\Desktop\USC\USC-Year3-Sem2\3201-EmbeddedSystems\Labs\LE_07\LE7-3\LE7-3.c"
  2292 ;; Parameters:    Size  Location     Type
  2293 ;;  data            1    wreg     unsigned char 
  2294 ;; Auto vars:     Size  Location     Type
  2295 ;;  data            1    0[COMMON] unsigned char 
  2296 ;;  i               2    1[COMMON] int 
  2297 ;; Return value:  Size  Location     Type
  2298 ;;		None               void
  2299 ;; Registers used:
  2300 ;;		wreg, status,2, btemp+1
  2301 ;; Tracked objects:
  2302 ;;		On entry : 0/0
  2303 ;;		On exit  : 0/0
  2304 ;;		Unchanged: 0/0
  2305 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2306 ;;      Params:         0       0       0       0       0
  2307 ;;      Locals:         3       0       0       0       0
  2308 ;;      Temps:          0       0       0       0       0
  2309 ;;      Totals:         3       0       0       0       0
  2310 ;;Total ram usage:        3 bytes
  2311 ;; Hardware stack levels used:    1
  2312 ;; This function calls:
  2313 ;;		Nothing
  2314 ;; This function is called by:
  2315 ;;		_updateDisplay
  2316 ;;		_printString
  2317 ;; This function uses a non-reentrant model
  2318 ;;
  2319                           
  2320                           
  2321                           ;psect for function _dataCtrl
  2322  098C                     _dataCtrl:	
  2323                           
  2324                           ;incstack = 0
  2325                           ; Regs used in _dataCtrl: [wreg+status,2+btemp+1]
  2326                           ;dataCtrl@data stored from wreg
  2327  098C  00F0               	movwf	dataCtrl@data
  2328                           
  2329                           ;LE7-3.c: 190: RD0 = 1;
  2330  098D  1283               	bcf	3,5	;RP0=0, select bank0
  2331  098E  1303               	bcf	3,6	;RP1=0, select bank0
  2332  098F  1408               	bsf	8,0	;volatile
  2333                           
  2334                           ;LE7-3.c: 191: PORTB = data;
  2335  0990  0870               	movf	dataCtrl@data,w
  2336  0991  0086               	movwf	6	;volatile
  2337                           
  2338                           ;LE7-3.c: 192: RD2 = 1;
  2339  0992  1508               	bsf	8,2	;volatile
  2340                           
  2341                           ;LE7-3.c: 193: for(int i = 0; i < 1000; i++);
  2342  0993  01F1               	clrf	dataCtrl@i
  2343  0994  01F2               	clrf	dataCtrl@i+1
  2344  0995  0872               	movf	dataCtrl@i+1,w
  2345  0996  3A80               	xorlw	128
  2346  0997  00FF               	movwf	127
  2347  0998  3083               	movlw	131
  2348  0999  027F               	subwf	127,w
  2349  099A  1D03               	skipz
  2350  099B  299E               	goto	u2135
  2351  099C  30E8               	movlw	232
  2352  099D  0271               	subwf	dataCtrl@i,w
  2353  099E                     u2135:	
  2354  099E  1803               	btfsc	3,0
  2355  099F  29B1               	goto	l89
  2356  09A0                     l1873:	
  2357  09A0  3001               	movlw	1
  2358  09A1  07F1               	addwf	dataCtrl@i,f
  2359  09A2  1803               	skipnc
  2360  09A3  0AF2               	incf	dataCtrl@i+1,f
  2361  09A4  3000               	movlw	0
  2362  09A5  07F2               	addwf	dataCtrl@i+1,f
  2363  09A6  0872               	movf	dataCtrl@i+1,w
  2364  09A7  3A80               	xorlw	128
  2365  09A8  00FF               	movwf	127
  2366  09A9  3083               	movlw	131
  2367  09AA  027F               	subwf	127,w
  2368  09AB  1D03               	skipz
  2369  09AC  29AF               	goto	u2145
  2370  09AD  30E8               	movlw	232
  2371  09AE  0271               	subwf	dataCtrl@i,w
  2372  09AF                     u2145:	
  2373  09AF  1C03               	skipc
  2374  09B0  29A0               	goto	l1873
  2375  09B1                     l89:	
  2376                           
  2377                           ;LE7-3.c: 194: RD2 = 0;
  2378  09B1  1283               	bcf	3,5	;RP0=0, select bank0
  2379  09B2  1303               	bcf	3,6	;RP1=0, select bank0
  2380  09B3  1108               	bcf	8,2	;volatile
  2381  09B4  0008               	return
  2382  09B5                     __end_of_dataCtrl:	
  2383                           
  2384                           	psect	text7
  2385  02D9                     __ptext7:	
  2386 ;; *************** function _pow *****************
  2387 ;; Defined at:
  2388 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\pow.c"
  2389 ;; Parameters:    Size  Location     Type
  2390 ;;  x               3    9[BANK1 ] int 
  2391 ;;  y               3   12[BANK1 ] int 
  2392 ;; Auto vars:     Size  Location     Type
  2393 ;;  yi              4   23[BANK1 ] unsigned long 
  2394 ;;  sign            1   22[BANK1 ] unsigned char 
  2395 ;; Return value:  Size  Location     Type
  2396 ;;                  3    9[BANK1 ] unsigned char 
  2397 ;; Registers used:
  2398 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2399 ;; Tracked objects:
  2400 ;;		On entry : 0/0
  2401 ;;		On exit  : 0/0
  2402 ;;		Unchanged: 0/0
  2403 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2404 ;;      Params:         0       0       6       0       0
  2405 ;;      Locals:         0       0      11       0       0
  2406 ;;      Temps:          0       0       1       0       0
  2407 ;;      Totals:         0       0      18       0       0
  2408 ;;Total ram usage:       18 bytes
  2409 ;; Hardware stack levels used:    1
  2410 ;; Hardware stack levels required when called:    4
  2411 ;; This function calls:
  2412 ;;		___ftge
  2413 ;;		___ftmul
  2414 ;;		___ftneg
  2415 ;;		___fttol
  2416 ;;		___lltoft
  2417 ;;		_exp
  2418 ;;		_log
  2419 ;; This function is called by:
  2420 ;;		_main
  2421 ;; This function uses a non-reentrant model
  2422 ;;
  2423                           
  2424                           
  2425                           ;psect for function _pow
  2426  02D9                     _pow:	
  2427                           
  2428                           ;incstack = 0
  2429                           ; Regs used in _pow: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2430  02D9  1683               	bsf	3,5	;RP0=1, select bank1
  2431  02DA  1303               	bcf	3,6	;RP1=0, select bank1
  2432  02DB  01B6               	clrf	pow@sign^(0+128)
  2433  02DC  082B               	movf	(pow@x+2)^(0+128),w
  2434  02DD  042A               	iorwf	(pow@x+1)^(0+128),w
  2435  02DE  0429               	iorwf	pow@x^(0+128),w
  2436  02DF  1D03               	skipz
  2437  02E0  2B03               	goto	l2253
  2438  02E1  3000               	movlw	0
  2439  02E2  00F0               	movwf	___ftge@ff1
  2440  02E3  3000               	movlw	0
  2441  02E4  00F1               	movwf	___ftge@ff1+1
  2442  02E5  3000               	movlw	0
  2443  02E6  00F2               	movwf	___ftge@ff1+2
  2444  02E7  082C               	movf	pow@y^(0+128),w
  2445  02E8  00F3               	movwf	___ftge@ff2
  2446  02E9  082D               	movf	(pow@y+1)^(0+128),w
  2447  02EA  00F4               	movwf	___ftge@ff2+1
  2448  02EB  082E               	movf	(pow@y+2)^(0+128),w
  2449  02EC  00F5               	movwf	___ftge@ff2+2
  2450  02ED  120A  158A  22D4  120A  118A  	fcall	___ftge
  2451  02F2  1C03               	btfss	3,0
  2452  02F3  2AFA               	goto	l598
  2453  02F4  3021               	movlw	33
  2454  02F5  1683               	bsf	3,5	;RP0=1, select bank1
  2455  02F6  1303               	bcf	3,6	;RP1=0, select bank1
  2456  02F7  00CD               	movwf	_errno^(0+128)
  2457  02F8  3000               	movlw	0
  2458  02F9  00CE               	movwf	(_errno^(0+128)+1)
  2459  02FA                     l598:	
  2460  02FA  3000               	movlw	0
  2461  02FB  1683               	bsf	3,5	;RP0=1, select bank1
  2462  02FC  1303               	bcf	3,6	;RP1=0, select bank1
  2463  02FD  00A9               	movwf	?_pow^(0+128)
  2464  02FE  3000               	movlw	0
  2465  02FF  00AA               	movwf	(?_pow+1)^(0+128)
  2466  0300  3000               	movlw	0
  2467  0301  00AB               	movwf	(?_pow+2)^(0+128)
  2468  0302  0008               	return
  2469  0303                     l2253:	
  2470  0303  082E               	movf	(pow@y+2)^(0+128),w
  2471  0304  042D               	iorwf	(pow@y+1)^(0+128),w
  2472  0305  042C               	iorwf	pow@y^(0+128),w
  2473  0306  1D03               	skipz
  2474  0307  2B0F               	goto	l2259
  2475  0308  3000               	movlw	0
  2476  0309  00A9               	movwf	?_pow^(0+128)
  2477  030A  3080               	movlw	128
  2478  030B  00AA               	movwf	(?_pow+1)^(0+128)
  2479  030C  303F               	movlw	63
  2480  030D  00AB               	movwf	(?_pow+2)^(0+128)
  2481  030E  0008               	return
  2482  030F                     l2259:	
  2483  030F  0829               	movf	pow@x^(0+128),w
  2484  0310  00F0               	movwf	___ftge@ff1
  2485  0311  082A               	movf	(pow@x+1)^(0+128),w
  2486  0312  00F1               	movwf	___ftge@ff1+1
  2487  0313  082B               	movf	(pow@x+2)^(0+128),w
  2488  0314  00F2               	movwf	___ftge@ff1+2
  2489  0315  3000               	movlw	0
  2490  0316  00F3               	movwf	___ftge@ff2
  2491  0317  3000               	movlw	0
  2492  0318  00F4               	movwf	___ftge@ff2+1
  2493  0319  3000               	movlw	0
  2494  031A  00F5               	movwf	___ftge@ff2+2
  2495  031B  120A  158A  22D4  120A  118A  	fcall	___ftge
  2496  0320  1803               	btfsc	3,0
  2497  0321  2B8F               	goto	l2271
  2498  0322  1683               	bsf	3,5	;RP0=1, select bank1
  2499  0323  1303               	bcf	3,6	;RP1=0, select bank1
  2500  0324  082C               	movf	pow@y^(0+128),w
  2501  0325  1283               	bcf	3,5	;RP0=0, select bank0
  2502  0326  1303               	bcf	3,6	;RP1=0, select bank0
  2503  0327  00CD               	movwf	___fttol@f1
  2504  0328  1683               	bsf	3,5	;RP0=1, select bank1
  2505  0329  1303               	bcf	3,6	;RP1=0, select bank1
  2506  032A  082D               	movf	(pow@y+1)^(0+128),w
  2507  032B  1283               	bcf	3,5	;RP0=0, select bank0
  2508  032C  1303               	bcf	3,6	;RP1=0, select bank0
  2509  032D  00CE               	movwf	___fttol@f1+1
  2510  032E  1683               	bsf	3,5	;RP0=1, select bank1
  2511  032F  1303               	bcf	3,6	;RP1=0, select bank1
  2512  0330  082E               	movf	(pow@y+2)^(0+128),w
  2513  0331  1283               	bcf	3,5	;RP0=0, select bank0
  2514  0332  1303               	bcf	3,6	;RP1=0, select bank0
  2515  0333  00CF               	movwf	___fttol@f1+2
  2516  0334  120A  158A  2412  120A  118A  	fcall	___fttol
  2517  0339  1283               	bcf	3,5	;RP0=0, select bank0
  2518  033A  1303               	bcf	3,6	;RP1=0, select bank0
  2519  033B  0850               	movf	?___fttol+3,w
  2520  033C  1683               	bsf	3,5	;RP0=1, select bank1
  2521  033D  1303               	bcf	3,6	;RP1=0, select bank1
  2522  033E  00BA               	movwf	(pow@yi+3)^(0+128)
  2523  033F  1283               	bcf	3,5	;RP0=0, select bank0
  2524  0340  1303               	bcf	3,6	;RP1=0, select bank0
  2525  0341  084F               	movf	?___fttol+2,w
  2526  0342  1683               	bsf	3,5	;RP0=1, select bank1
  2527  0343  1303               	bcf	3,6	;RP1=0, select bank1
  2528  0344  00B9               	movwf	(pow@yi+2)^(0+128)
  2529  0345  1283               	bcf	3,5	;RP0=0, select bank0
  2530  0346  1303               	bcf	3,6	;RP1=0, select bank0
  2531  0347  084E               	movf	?___fttol+1,w
  2532  0348  1683               	bsf	3,5	;RP0=1, select bank1
  2533  0349  1303               	bcf	3,6	;RP1=0, select bank1
  2534  034A  00B8               	movwf	(pow@yi+1)^(0+128)
  2535  034B  1283               	bcf	3,5	;RP0=0, select bank0
  2536  034C  1303               	bcf	3,6	;RP1=0, select bank0
  2537  034D  084D               	movf	?___fttol,w
  2538  034E  1683               	bsf	3,5	;RP0=1, select bank1
  2539  034F  1303               	bcf	3,6	;RP1=0, select bank1
  2540  0350  00B7               	movwf	pow@yi^(0+128)
  2541  0351  083A               	movf	(pow@yi+3)^(0+128),w
  2542  0352  00FB               	movwf	___lltoft@c+3
  2543  0353  0839               	movf	(pow@yi+2)^(0+128),w
  2544  0354  00FA               	movwf	___lltoft@c+2
  2545  0355  0838               	movf	(pow@yi+1)^(0+128),w
  2546  0356  00F9               	movwf	___lltoft@c+1
  2547  0357  0837               	movf	pow@yi^(0+128),w
  2548  0358  00F8               	movwf	___lltoft@c
  2549  0359  120A  158A  21B5  120A  118A  	fcall	___lltoft
  2550  035E  1683               	bsf	3,5	;RP0=1, select bank1
  2551  035F  1303               	bcf	3,6	;RP1=0, select bank1
  2552  0360  082E               	movf	(pow@y+2)^(0+128),w
  2553  0361  067A               	xorwf	?___lltoft+2,w
  2554  0362  1D03               	skipz
  2555  0363  2B6A               	goto	u2735
  2556  0364  082D               	movf	(pow@y+1)^(0+128),w
  2557  0365  0679               	xorwf	?___lltoft+1,w
  2558  0366  1D03               	skipz
  2559  0367  2B6A               	goto	u2735
  2560  0368  082C               	movf	pow@y^(0+128),w
  2561  0369  0678               	xorwf	?___lltoft,w
  2562  036A                     u2735:	
  2563  036A  1903               	skipnz
  2564  036B  2B77               	goto	l2267
  2565  036C  3021               	movlw	33
  2566  036D  00CD               	movwf	_errno^(0+128)
  2567  036E  3000               	movlw	0
  2568  036F  00CE               	movwf	(_errno^(0+128)+1)
  2569  0370  3000               	movlw	0
  2570  0371  00A9               	movwf	?_pow^(0+128)
  2571  0372  3000               	movlw	0
  2572  0373  00AA               	movwf	(?_pow+1)^(0+128)
  2573  0374  3000               	movlw	0
  2574  0375  00AB               	movwf	(?_pow+2)^(0+128)
  2575  0376  0008               	return
  2576  0377                     l2267:	
  2577  0377  0837               	movf	pow@yi^(0+128),w
  2578  0378  3901               	andlw	1
  2579  0379  00AF               	movwf	??_pow^(0+128)
  2580  037A  082F               	movf	??_pow^(0+128),w
  2581  037B  00B6               	movwf	pow@sign^(0+128)
  2582  037C  0829               	movf	pow@x^(0+128),w
  2583  037D  00F0               	movwf	___ftneg@f1
  2584  037E  082A               	movf	(pow@x+1)^(0+128),w
  2585  037F  00F1               	movwf	___ftneg@f1+1
  2586  0380  082B               	movf	(pow@x+2)^(0+128),w
  2587  0381  00F2               	movwf	___ftneg@f1+2
  2588  0382  120A  158A  20B0  120A  118A  	fcall	___ftneg
  2589  0387  0870               	movf	?___ftneg,w
  2590  0388  1683               	bsf	3,5	;RP0=1, select bank1
  2591  0389  1303               	bcf	3,6	;RP1=0, select bank1
  2592  038A  00A9               	movwf	pow@x^(0+128)
  2593  038B  0871               	movf	?___ftneg+1,w
  2594  038C  00AA               	movwf	(pow@x+1)^(0+128)
  2595  038D  0872               	movf	?___ftneg+2,w
  2596  038E  00AB               	movwf	(pow@x+2)^(0+128)
  2597  038F                     l2271:	
  2598  038F  1683               	bsf	3,5	;RP0=1, select bank1
  2599  0390  1303               	bcf	3,6	;RP1=0, select bank1
  2600  0391  0829               	movf	pow@x^(0+128),w
  2601  0392  1283               	bcf	3,5	;RP0=0, select bank0
  2602  0393  1303               	bcf	3,6	;RP1=0, select bank0
  2603  0394  00D7               	movwf	log@x
  2604  0395  1683               	bsf	3,5	;RP0=1, select bank1
  2605  0396  1303               	bcf	3,6	;RP1=0, select bank1
  2606  0397  082A               	movf	(pow@x+1)^(0+128),w
  2607  0398  1283               	bcf	3,5	;RP0=0, select bank0
  2608  0399  1303               	bcf	3,6	;RP1=0, select bank0
  2609  039A  00D8               	movwf	log@x+1
  2610  039B  1683               	bsf	3,5	;RP0=1, select bank1
  2611  039C  1303               	bcf	3,6	;RP1=0, select bank1
  2612  039D  082B               	movf	(pow@x+2)^(0+128),w
  2613  039E  1283               	bcf	3,5	;RP0=0, select bank0
  2614  039F  1303               	bcf	3,6	;RP1=0, select bank0
  2615  03A0  00D9               	movwf	log@x+2
  2616  03A1  120A  158A  2730  120A  118A  	fcall	_log
  2617  03A6  1283               	bcf	3,5	;RP0=0, select bank0
  2618  03A7  1303               	bcf	3,6	;RP1=0, select bank0
  2619  03A8  0857               	movf	?_log,w
  2620  03A9  1683               	bsf	3,5	;RP0=1, select bank1
  2621  03AA  1303               	bcf	3,6	;RP1=0, select bank1
  2622  03AB  00B0               	movwf	_pow$651^(0+128)
  2623  03AC  1283               	bcf	3,5	;RP0=0, select bank0
  2624  03AD  1303               	bcf	3,6	;RP1=0, select bank0
  2625  03AE  0858               	movf	?_log+1,w
  2626  03AF  1683               	bsf	3,5	;RP0=1, select bank1
  2627  03B0  1303               	bcf	3,6	;RP1=0, select bank1
  2628  03B1  00B1               	movwf	(_pow$651+1)^(0+128)
  2629  03B2  1283               	bcf	3,5	;RP0=0, select bank0
  2630  03B3  1303               	bcf	3,6	;RP1=0, select bank0
  2631  03B4  0859               	movf	?_log+2,w
  2632  03B5  1683               	bsf	3,5	;RP0=1, select bank1
  2633  03B6  1303               	bcf	3,6	;RP1=0, select bank1
  2634  03B7  00B2               	movwf	(_pow$651+2)^(0+128)
  2635  03B8  082C               	movf	pow@y^(0+128),w
  2636  03B9  1283               	bcf	3,5	;RP0=0, select bank0
  2637  03BA  1303               	bcf	3,6	;RP1=0, select bank0
  2638  03BB  00B0               	movwf	___ftmul@f1
  2639  03BC  1683               	bsf	3,5	;RP0=1, select bank1
  2640  03BD  1303               	bcf	3,6	;RP1=0, select bank1
  2641  03BE  082D               	movf	(pow@y+1)^(0+128),w
  2642  03BF  1283               	bcf	3,5	;RP0=0, select bank0
  2643  03C0  1303               	bcf	3,6	;RP1=0, select bank0
  2644  03C1  00B1               	movwf	___ftmul@f1+1
  2645  03C2  1683               	bsf	3,5	;RP0=1, select bank1
  2646  03C3  1303               	bcf	3,6	;RP1=0, select bank1
  2647  03C4  082E               	movf	(pow@y+2)^(0+128),w
  2648  03C5  1283               	bcf	3,5	;RP0=0, select bank0
  2649  03C6  1303               	bcf	3,6	;RP1=0, select bank0
  2650  03C7  00B2               	movwf	___ftmul@f1+2
  2651  03C8  1683               	bsf	3,5	;RP0=1, select bank1
  2652  03C9  1303               	bcf	3,6	;RP1=0, select bank1
  2653  03CA  0830               	movf	_pow$651^(0+128),w
  2654  03CB  1283               	bcf	3,5	;RP0=0, select bank0
  2655  03CC  1303               	bcf	3,6	;RP1=0, select bank0
  2656  03CD  00B3               	movwf	___ftmul@f2
  2657  03CE  1683               	bsf	3,5	;RP0=1, select bank1
  2658  03CF  1303               	bcf	3,6	;RP1=0, select bank1
  2659  03D0  0831               	movf	(_pow$651+1)^(0+128),w
  2660  03D1  1283               	bcf	3,5	;RP0=0, select bank0
  2661  03D2  1303               	bcf	3,6	;RP1=0, select bank0
  2662  03D3  00B4               	movwf	___ftmul@f2+1
  2663  03D4  1683               	bsf	3,5	;RP0=1, select bank1
  2664  03D5  1303               	bcf	3,6	;RP1=0, select bank1
  2665  03D6  0832               	movf	(_pow$651+2)^(0+128),w
  2666  03D7  1283               	bcf	3,5	;RP0=0, select bank0
  2667  03D8  1303               	bcf	3,6	;RP1=0, select bank0
  2668  03D9  00B5               	movwf	___ftmul@f2+2
  2669  03DA  120A  118A  2024  120A  118A  	fcall	___ftmul
  2670  03DF  1283               	bcf	3,5	;RP0=0, select bank0
  2671  03E0  1303               	bcf	3,6	;RP1=0, select bank0
  2672  03E1  0830               	movf	?___ftmul,w
  2673  03E2  1683               	bsf	3,5	;RP0=1, select bank1
  2674  03E3  1303               	bcf	3,6	;RP1=0, select bank1
  2675  03E4  00B3               	movwf	_pow$652^(0+128)
  2676  03E5  1283               	bcf	3,5	;RP0=0, select bank0
  2677  03E6  1303               	bcf	3,6	;RP1=0, select bank0
  2678  03E7  0831               	movf	?___ftmul+1,w
  2679  03E8  1683               	bsf	3,5	;RP0=1, select bank1
  2680  03E9  1303               	bcf	3,6	;RP1=0, select bank1
  2681  03EA  00B4               	movwf	(_pow$652+1)^(0+128)
  2682  03EB  1283               	bcf	3,5	;RP0=0, select bank0
  2683  03EC  1303               	bcf	3,6	;RP1=0, select bank0
  2684  03ED  0832               	movf	?___ftmul+2,w
  2685  03EE  1683               	bsf	3,5	;RP0=1, select bank1
  2686  03EF  1303               	bcf	3,6	;RP1=0, select bank1
  2687  03F0  00B5               	movwf	(_pow$652+2)^(0+128)
  2688  03F1  0833               	movf	_pow$652^(0+128),w
  2689  03F2  1283               	bcf	3,5	;RP0=0, select bank0
  2690  03F3  1303               	bcf	3,6	;RP1=0, select bank0
  2691  03F4  00EC               	movwf	exp@x
  2692  03F5  1683               	bsf	3,5	;RP0=1, select bank1
  2693  03F6  1303               	bcf	3,6	;RP1=0, select bank1
  2694  03F7  0834               	movf	(_pow$652+1)^(0+128),w
  2695  03F8  1283               	bcf	3,5	;RP0=0, select bank0
  2696  03F9  1303               	bcf	3,6	;RP1=0, select bank0
  2697  03FA  00ED               	movwf	exp@x+1
  2698  03FB  1683               	bsf	3,5	;RP0=1, select bank1
  2699  03FC  1303               	bcf	3,6	;RP1=0, select bank1
  2700  03FD  0835               	movf	(_pow$652+2)^(0+128),w
  2701  03FE  1283               	bcf	3,5	;RP0=0, select bank0
  2702  03FF  1303               	bcf	3,6	;RP1=0, select bank0
  2703  0400  00EE               	movwf	exp@x+2
  2704  0401  120A  118A  242D  120A  118A  	fcall	_exp
  2705  0406  1283               	bcf	3,5	;RP0=0, select bank0
  2706  0407  1303               	bcf	3,6	;RP1=0, select bank0
  2707  0408  086C               	movf	?_exp,w
  2708  0409  1683               	bsf	3,5	;RP0=1, select bank1
  2709  040A  1303               	bcf	3,6	;RP1=0, select bank1
  2710  040B  00A9               	movwf	pow@x^(0+128)
  2711  040C  1283               	bcf	3,5	;RP0=0, select bank0
  2712  040D  1303               	bcf	3,6	;RP1=0, select bank0
  2713  040E  086D               	movf	?_exp+1,w
  2714  040F  1683               	bsf	3,5	;RP0=1, select bank1
  2715  0410  1303               	bcf	3,6	;RP1=0, select bank1
  2716  0411  00AA               	movwf	(pow@x+1)^(0+128)
  2717  0412  1283               	bcf	3,5	;RP0=0, select bank0
  2718  0413  1303               	bcf	3,6	;RP1=0, select bank0
  2719  0414  086E               	movf	?_exp+2,w
  2720  0415  1683               	bsf	3,5	;RP0=1, select bank1
  2721  0416  1303               	bcf	3,6	;RP1=0, select bank1
  2722  0417  00AB               	movwf	(pow@x+2)^(0+128)
  2723  0418  0836               	movf	pow@sign^(0+128),w
  2724  0419  1903               	btfsc	3,2
  2725  041A  0008               	return
  2726  041B  0829               	movf	pow@x^(0+128),w
  2727  041C  00F0               	movwf	___ftneg@f1
  2728  041D  082A               	movf	(pow@x+1)^(0+128),w
  2729  041E  00F1               	movwf	___ftneg@f1+1
  2730  041F  082B               	movf	(pow@x+2)^(0+128),w
  2731  0420  00F2               	movwf	___ftneg@f1+2
  2732  0421  120A  158A  20B0   	fcall	___ftneg
  2733  0424  0870               	movf	?___ftneg,w
  2734  0425  1683               	bsf	3,5	;RP0=1, select bank1
  2735  0426  1303               	bcf	3,6	;RP1=0, select bank1
  2736  0427  00A9               	movwf	?_pow^(0+128)
  2737  0428  0871               	movf	?___ftneg+1,w
  2738  0429  00AA               	movwf	(?_pow+1)^(0+128)
  2739  042A  0872               	movf	?___ftneg+2,w
  2740  042B  00AB               	movwf	(?_pow+2)^(0+128)
  2741  042C  0008               	return
  2742  042D                     __end_of_pow:	
  2743                           
  2744                           	psect	text8
  2745  0F30                     __ptext8:	
  2746 ;; *************** function _log *****************
  2747 ;; Defined at:
  2748 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\log.c"
  2749 ;; Parameters:    Size  Location     Type
  2750 ;;  x               3   55[BANK0 ] unsigned char 
  2751 ;; Auto vars:     Size  Location     Type
  2752 ;;  exponent        2   59[BANK0 ] int 
  2753 ;; Return value:  Size  Location     Type
  2754 ;;                  3   55[BANK0 ] int 
  2755 ;; Registers used:
  2756 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2757 ;; Tracked objects:
  2758 ;;		On entry : 0/0
  2759 ;;		On exit  : 0/0
  2760 ;;		Unchanged: 0/0
  2761 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2762 ;;      Params:         0       3       0       0       0
  2763 ;;      Locals:         0       2       0       0       0
  2764 ;;      Temps:          0       1       0       0       0
  2765 ;;      Totals:         0       6       0       0       0
  2766 ;;Total ram usage:        6 bytes
  2767 ;; Hardware stack levels used:    1
  2768 ;; Hardware stack levels required when called:    3
  2769 ;; This function calls:
  2770 ;;		___awtoft
  2771 ;;		___ftadd
  2772 ;;		___ftge
  2773 ;;		___ftmul
  2774 ;;		_eval_poly
  2775 ;;		_frexp
  2776 ;; This function is called by:
  2777 ;;		_pow
  2778 ;; This function uses a non-reentrant model
  2779 ;;
  2780                           
  2781                           
  2782                           ;psect for function _log
  2783  0F30                     _log:	
  2784                           
  2785                           ;incstack = 0
  2786                           ; Regs used in _log: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2787  0F30  1283               	bcf	3,5	;RP0=0, select bank0
  2788  0F31  1303               	bcf	3,6	;RP1=0, select bank0
  2789  0F32  0857               	movf	log@x,w
  2790  0F33  00F0               	movwf	___ftge@ff1
  2791  0F34  0858               	movf	log@x+1,w
  2792  0F35  00F1               	movwf	___ftge@ff1+1
  2793  0F36  0859               	movf	log@x+2,w
  2794  0F37  00F2               	movwf	___ftge@ff1+2
  2795  0F38  3000               	movlw	0
  2796  0F39  00F3               	movwf	___ftge@ff2
  2797  0F3A  3000               	movlw	0
  2798  0F3B  00F4               	movwf	___ftge@ff2+1
  2799  0F3C  3000               	movlw	0
  2800  0F3D  00F5               	movwf	___ftge@ff2+2
  2801  0F3E  120A  158A  22D4  120A  158A  	fcall	___ftge
  2802  0F43  1803               	btfsc	3,0
  2803  0F44  2F54               	goto	l2173
  2804  0F45  3021               	movlw	33
  2805  0F46  1683               	bsf	3,5	;RP0=1, select bank1
  2806  0F47  1303               	bcf	3,6	;RP1=0, select bank1
  2807  0F48  00CD               	movwf	_errno^(0+128)
  2808  0F49  3000               	movlw	0
  2809  0F4A  00CE               	movwf	(_errno^(0+128)+1)
  2810  0F4B  3000               	movlw	0
  2811  0F4C  1283               	bcf	3,5	;RP0=0, select bank0
  2812  0F4D  1303               	bcf	3,6	;RP1=0, select bank0
  2813  0F4E  00D7               	movwf	?_log
  2814  0F4F  3000               	movlw	0
  2815  0F50  00D8               	movwf	?_log+1
  2816  0F51  3000               	movlw	0
  2817  0F52  00D9               	movwf	?_log+2
  2818  0F53  0008               	return
  2819  0F54                     l2173:	
  2820  0F54  1283               	bcf	3,5	;RP0=0, select bank0
  2821  0F55  1303               	bcf	3,6	;RP1=0, select bank0
  2822  0F56  0859               	movf	log@x+2,w
  2823  0F57  0458               	iorwf	log@x+1,w
  2824  0F58  0457               	iorwf	log@x,w
  2825  0F59  1D03               	skipz
  2826  0F5A  2F6A               	goto	l2179
  2827  0F5B  3022               	movlw	34
  2828  0F5C  1683               	bsf	3,5	;RP0=1, select bank1
  2829  0F5D  1303               	bcf	3,6	;RP1=0, select bank1
  2830  0F5E  00CD               	movwf	_errno^(0+128)
  2831  0F5F  3000               	movlw	0
  2832  0F60  00CE               	movwf	(_errno^(0+128)+1)
  2833  0F61  3000               	movlw	0
  2834  0F62  1283               	bcf	3,5	;RP0=0, select bank0
  2835  0F63  1303               	bcf	3,6	;RP1=0, select bank0
  2836  0F64  00D7               	movwf	?_log
  2837  0F65  3000               	movlw	0
  2838  0F66  00D8               	movwf	?_log+1
  2839  0F67  3000               	movlw	0
  2840  0F68  00D9               	movwf	?_log+2
  2841  0F69  0008               	return
  2842  0F6A                     l2179:	
  2843  0F6A  3000               	movlw	0
  2844  0F6B  00C0               	movwf	___ftadd@f1
  2845  0F6C  3080               	movlw	128
  2846  0F6D  00C1               	movwf	___ftadd@f1+1
  2847  0F6E  30BF               	movlw	191
  2848  0F6F  00C2               	movwf	___ftadd@f1+2
  2849  0F70  3000               	movlw	0
  2850  0F71  00B0               	movwf	___ftmul@f1
  2851  0F72  3000               	movlw	0
  2852  0F73  00B1               	movwf	___ftmul@f1+1
  2853  0F74  3040               	movlw	64
  2854  0F75  00B2               	movwf	___ftmul@f1+2
  2855  0F76  305B               	movlw	log@exponent& (0+255)
  2856  0F77  00DA               	movwf	??_log
  2857  0F78  085A               	movf	??_log,w
  2858  0F79  00F3               	movwf	frexp@eptr
  2859  0F7A  0857               	movf	log@x,w
  2860  0F7B  00F0               	movwf	frexp@value
  2861  0F7C  0858               	movf	log@x+1,w
  2862  0F7D  00F1               	movwf	frexp@value+1
  2863  0F7E  0859               	movf	log@x+2,w
  2864  0F7F  00F2               	movwf	frexp@value+2
  2865  0F80  120A  158A  2252  120A  158A  	fcall	_frexp
  2866  0F85  0870               	movf	?_frexp,w
  2867  0F86  1283               	bcf	3,5	;RP0=0, select bank0
  2868  0F87  1303               	bcf	3,6	;RP1=0, select bank0
  2869  0F88  00B3               	movwf	___ftmul@f2
  2870  0F89  0871               	movf	?_frexp+1,w
  2871  0F8A  00B4               	movwf	___ftmul@f2+1
  2872  0F8B  0872               	movf	?_frexp+2,w
  2873  0F8C  00B5               	movwf	___ftmul@f2+2
  2874  0F8D  120A  118A  2024  120A  158A  	fcall	___ftmul
  2875  0F92  1283               	bcf	3,5	;RP0=0, select bank0
  2876  0F93  1303               	bcf	3,6	;RP1=0, select bank0
  2877  0F94  0830               	movf	?___ftmul,w
  2878  0F95  00C3               	movwf	___ftadd@f2
  2879  0F96  0831               	movf	?___ftmul+1,w
  2880  0F97  00C4               	movwf	___ftadd@f2+1
  2881  0F98  0832               	movf	?___ftmul+2,w
  2882  0F99  00C5               	movwf	___ftadd@f2+2
  2883  0F9A  120A  118A  21D0  120A  158A  	fcall	___ftadd
  2884  0F9F  1283               	bcf	3,5	;RP0=0, select bank0
  2885  0FA0  1303               	bcf	3,6	;RP1=0, select bank0
  2886  0FA1  0840               	movf	?___ftadd,w
  2887  0FA2  00D7               	movwf	log@x
  2888  0FA3  0841               	movf	?___ftadd+1,w
  2889  0FA4  00D8               	movwf	log@x+1
  2890  0FA5  0842               	movf	?___ftadd+2,w
  2891  0FA6  00D9               	movwf	log@x+2
  2892  0FA7  30FF               	movlw	255
  2893  0FA8  07DB               	addwf	log@exponent,f
  2894  0FA9  1803               	skipnc
  2895  0FAA  0ADC               	incf	log@exponent+1,f
  2896  0FAB  30FF               	movlw	255
  2897  0FAC  07DC               	addwf	log@exponent+1,f
  2898  0FAD  0857               	movf	log@x,w
  2899  0FAE  00CD               	movwf	eval_poly@x
  2900  0FAF  0858               	movf	log@x+1,w
  2901  0FB0  00CE               	movwf	eval_poly@x+1
  2902  0FB1  0859               	movf	log@x+2,w
  2903  0FB2  00CF               	movwf	eval_poly@x+2
  2904  0FB3  3029               	movlw	(log@coeff-__stringbase)& (0+255)
  2905  0FB4  00DA               	movwf	??_log
  2906  0FB5  085A               	movf	??_log,w
  2907  0FB6  00D0               	movwf	eval_poly@d
  2908  0FB7  3008               	movlw	8
  2909  0FB8  00D1               	movwf	eval_poly@n
  2910  0FB9  3000               	movlw	0
  2911  0FBA  00D2               	movwf	eval_poly@n+1
  2912  0FBB  120A  158A  2399  120A  158A  	fcall	_eval_poly
  2913  0FC0  1283               	bcf	3,5	;RP0=0, select bank0
  2914  0FC1  1303               	bcf	3,6	;RP1=0, select bank0
  2915  0FC2  084D               	movf	?_eval_poly,w
  2916  0FC3  00D7               	movwf	log@x
  2917  0FC4  084E               	movf	?_eval_poly+1,w
  2918  0FC5  00D8               	movwf	log@x+1
  2919  0FC6  084F               	movf	?_eval_poly+2,w
  2920  0FC7  00D9               	movwf	log@x+2
  2921  0FC8  0857               	movf	log@x,w
  2922  0FC9  00C0               	movwf	___ftadd@f1
  2923  0FCA  0858               	movf	log@x+1,w
  2924  0FCB  00C1               	movwf	___ftadd@f1+1
  2925  0FCC  0859               	movf	log@x+2,w
  2926  0FCD  00C2               	movwf	___ftadd@f1+2
  2927  0FCE  3072               	movlw	114
  2928  0FCF  00B0               	movwf	___ftmul@f1
  2929  0FD0  3031               	movlw	49
  2930  0FD1  00B1               	movwf	___ftmul@f1+1
  2931  0FD2  303F               	movlw	63
  2932  0FD3  00B2               	movwf	___ftmul@f1+2
  2933  0FD4  085C               	movf	log@exponent+1,w
  2934  0FD5  01F9               	clrf	___awtoft@c+1
  2935  0FD6  07F9               	addwf	___awtoft@c+1,f
  2936  0FD7  085B               	movf	log@exponent,w
  2937  0FD8  01F8               	clrf	___awtoft@c
  2938  0FD9  07F8               	addwf	___awtoft@c,f
  2939  0FDA  120A  118A  2003  120A  158A  	fcall	___awtoft
  2940  0FDF  0878               	movf	?___awtoft,w
  2941  0FE0  1283               	bcf	3,5	;RP0=0, select bank0
  2942  0FE1  1303               	bcf	3,6	;RP1=0, select bank0
  2943  0FE2  00B3               	movwf	___ftmul@f2
  2944  0FE3  0879               	movf	?___awtoft+1,w
  2945  0FE4  00B4               	movwf	___ftmul@f2+1
  2946  0FE5  087A               	movf	?___awtoft+2,w
  2947  0FE6  00B5               	movwf	___ftmul@f2+2
  2948  0FE7  120A  118A  2024  120A  158A  	fcall	___ftmul
  2949  0FEC  1283               	bcf	3,5	;RP0=0, select bank0
  2950  0FED  1303               	bcf	3,6	;RP1=0, select bank0
  2951  0FEE  0830               	movf	?___ftmul,w
  2952  0FEF  00C3               	movwf	___ftadd@f2
  2953  0FF0  0831               	movf	?___ftmul+1,w
  2954  0FF1  00C4               	movwf	___ftadd@f2+1
  2955  0FF2  0832               	movf	?___ftmul+2,w
  2956  0FF3  00C5               	movwf	___ftadd@f2+2
  2957  0FF4  120A  118A  21D0   	fcall	___ftadd
  2958  0FF7  1283               	bcf	3,5	;RP0=0, select bank0
  2959  0FF8  1303               	bcf	3,6	;RP1=0, select bank0
  2960  0FF9  0840               	movf	?___ftadd,w
  2961  0FFA  00D7               	movwf	?_log
  2962  0FFB  0841               	movf	?___ftadd+1,w
  2963  0FFC  00D8               	movwf	?_log+1
  2964  0FFD  0842               	movf	?___ftadd+2,w
  2965  0FFE  00D9               	movwf	?_log+2
  2966  0FFF  0008               	return
  2967  1000                     __end_of_log:	
  2968                           
  2969                           	psect	text9
  2970  042D                     __ptext9:	
  2971 ;; *************** function _exp *****************
  2972 ;; Defined at:
  2973 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\exp.c"
  2974 ;; Parameters:    Size  Location     Type
  2975 ;;  x               3   76[BANK0 ] int 
  2976 ;; Auto vars:     Size  Location     Type
  2977 ;;  exponent        2    6[BANK1 ] int 
  2978 ;;  sign            1    8[BANK1 ] unsigned char 
  2979 ;; Return value:  Size  Location     Type
  2980 ;;                  3   76[BANK0 ] unsigned char 
  2981 ;; Registers used:
  2982 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2983 ;; Tracked objects:
  2984 ;;		On entry : 0/0
  2985 ;;		On exit  : 0/0
  2986 ;;		Unchanged: 0/0
  2987 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2988 ;;      Params:         0       3       0       0       0
  2989 ;;      Locals:         0       0       9       0       0
  2990 ;;      Temps:          0       1       0       0       0
  2991 ;;      Totals:         0       4       9       0       0
  2992 ;;Total ram usage:       13 bytes
  2993 ;; Hardware stack levels used:    1
  2994 ;; Hardware stack levels required when called:    3
  2995 ;; This function calls:
  2996 ;;		___awtoft
  2997 ;;		___ftdiv
  2998 ;;		___ftge
  2999 ;;		___ftmul
  3000 ;;		___ftneg
  3001 ;;		___ftsub
  3002 ;;		___fttol
  3003 ;;		_eval_poly
  3004 ;;		_floor
  3005 ;;		_ldexp
  3006 ;; This function is called by:
  3007 ;;		_pow
  3008 ;; This function uses a non-reentrant model
  3009 ;;
  3010                           
  3011                           
  3012                           ;psect for function _exp
  3013  042D                     _exp:	
  3014                           
  3015                           ;incstack = 0
  3016                           ; Regs used in _exp: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3017  042D  1283               	bcf	3,5	;RP0=0, select bank0
  3018  042E  1303               	bcf	3,6	;RP1=0, select bank0
  3019  042F  086E               	movf	exp@x+2,w
  3020  0430  046D               	iorwf	exp@x+1,w
  3021  0431  046C               	iorwf	exp@x,w
  3022  0432  1D03               	skipz
  3023  0433  2C3B               	goto	l2195
  3024  0434  3000               	movlw	0
  3025  0435  00EC               	movwf	?_exp
  3026  0436  3080               	movlw	128
  3027  0437  00ED               	movwf	?_exp+1
  3028  0438  303F               	movlw	63
  3029  0439  00EE               	movwf	?_exp+2
  3030  043A  0008               	return
  3031  043B                     l2195:	
  3032  043B  3072               	movlw	114
  3033  043C  00F0               	movwf	___ftge@ff1
  3034  043D  3031               	movlw	49
  3035  043E  00F1               	movwf	___ftge@ff1+1
  3036  043F  3044               	movlw	68
  3037  0440  00F2               	movwf	___ftge@ff1+2
  3038  0441  086C               	movf	exp@x,w
  3039  0442  00F3               	movwf	___ftge@ff2
  3040  0443  086D               	movf	exp@x+1,w
  3041  0444  00F4               	movwf	___ftge@ff2+1
  3042  0445  086E               	movf	exp@x+2,w
  3043  0446  00F5               	movwf	___ftge@ff2+2
  3044  0447  120A  158A  22D4  120A  118A  	fcall	___ftge
  3045  044C  1803               	btfsc	3,0
  3046  044D  2C5C               	goto	l2205
  3047  044E  3022               	movlw	34
  3048  044F  1683               	bsf	3,5	;RP0=1, select bank1
  3049  0450  1303               	bcf	3,6	;RP1=0, select bank1
  3050  0451  00CD               	movwf	_errno^(0+128)
  3051  0452  3000               	movlw	0
  3052  0453  00CE               	movwf	(_errno^(0+128)+1)
  3053  0454  30FF               	movlw	255
  3054  0455  1283               	bcf	3,5	;RP0=0, select bank0
  3055  0456  00EC               	movwf	?_exp
  3056  0457  307F               	movlw	127
  3057  0458  00ED               	movwf	?_exp+1
  3058  0459  307F               	movlw	127
  3059  045A  00EE               	movwf	?_exp+2
  3060  045B  0008               	return
  3061  045C                     l2205:	
  3062  045C  1283               	bcf	3,5	;RP0=0, select bank0
  3063  045D  1303               	bcf	3,6	;RP1=0, select bank0
  3064  045E  086C               	movf	exp@x,w
  3065  045F  00F0               	movwf	___ftge@ff1
  3066  0460  086D               	movf	exp@x+1,w
  3067  0461  00F1               	movwf	___ftge@ff1+1
  3068  0462  086E               	movf	exp@x+2,w
  3069  0463  00F2               	movwf	___ftge@ff1+2
  3070  0464  3049               	movlw	73
  3071  0465  00F3               	movwf	___ftge@ff2
  3072  0466  303A               	movlw	58
  3073  0467  00F4               	movwf	___ftge@ff2+1
  3074  0468  30C4               	movlw	196
  3075  0469  00F5               	movwf	___ftge@ff2+2
  3076  046A  120A  158A  22D4  120A  118A  	fcall	___ftge
  3077  046F  1803               	btfsc	3,0
  3078  0470  2C80               	goto	l2211
  3079  0471  3022               	movlw	34
  3080  0472  1683               	bsf	3,5	;RP0=1, select bank1
  3081  0473  1303               	bcf	3,6	;RP1=0, select bank1
  3082  0474  00CD               	movwf	_errno^(0+128)
  3083  0475  3000               	movlw	0
  3084  0476  00CE               	movwf	(_errno^(0+128)+1)
  3085  0477  3000               	movlw	0
  3086  0478  1283               	bcf	3,5	;RP0=0, select bank0
  3087  0479  1303               	bcf	3,6	;RP1=0, select bank0
  3088  047A  00EC               	movwf	?_exp
  3089  047B  3000               	movlw	0
  3090  047C  00ED               	movwf	?_exp+1
  3091  047D  3000               	movlw	0
  3092  047E  00EE               	movwf	?_exp+2
  3093  047F  0008               	return
  3094  0480                     l2211:	
  3095  0480  1283               	bcf	3,5	;RP0=0, select bank0
  3096  0481  1303               	bcf	3,6	;RP1=0, select bank0
  3097  0482  086C               	movf	exp@x,w
  3098  0483  00F0               	movwf	___ftge@ff1
  3099  0484  086D               	movf	exp@x+1,w
  3100  0485  00F1               	movwf	___ftge@ff1+1
  3101  0486  086E               	movf	exp@x+2,w
  3102  0487  00F2               	movwf	___ftge@ff1+2
  3103  0488  3000               	movlw	0
  3104  0489  00F3               	movwf	___ftge@ff2
  3105  048A  3000               	movlw	0
  3106  048B  00F4               	movwf	___ftge@ff2+1
  3107  048C  3000               	movlw	0
  3108  048D  00F5               	movwf	___ftge@ff2+2
  3109  048E  120A  158A  22D4  120A  118A  	fcall	___ftge
  3110  0493  3000               	movlw	0
  3111  0494  1C03               	btfss	3,0
  3112  0495  3001               	movlw	1
  3113  0496  1283               	bcf	3,5	;RP0=0, select bank0
  3114  0497  1303               	bcf	3,6	;RP1=0, select bank0
  3115  0498  00EF               	movwf	??_exp
  3116  0499  086F               	movf	??_exp,w
  3117  049A  1683               	bsf	3,5	;RP0=1, select bank1
  3118  049B  1303               	bcf	3,6	;RP1=0, select bank1
  3119  049C  00A8               	movwf	exp@sign^(0+128)
  3120  049D  0828               	movf	exp@sign^(0+128),w
  3121  049E  1903               	btfsc	3,2
  3122  049F  2CB7               	goto	l2217
  3123  04A0  1283               	bcf	3,5	;RP0=0, select bank0
  3124  04A1  1303               	bcf	3,6	;RP1=0, select bank0
  3125  04A2  086C               	movf	exp@x,w
  3126  04A3  00F0               	movwf	___ftneg@f1
  3127  04A4  086D               	movf	exp@x+1,w
  3128  04A5  00F1               	movwf	___ftneg@f1+1
  3129  04A6  086E               	movf	exp@x+2,w
  3130  04A7  00F2               	movwf	___ftneg@f1+2
  3131  04A8  120A  158A  20B0  120A  118A  	fcall	___ftneg
  3132  04AD  0870               	movf	?___ftneg,w
  3133  04AE  1283               	bcf	3,5	;RP0=0, select bank0
  3134  04AF  1303               	bcf	3,6	;RP1=0, select bank0
  3135  04B0  00EC               	movwf	exp@x
  3136  04B1  0871               	movf	?___ftneg+1,w
  3137  04B2  00ED               	movwf	exp@x+1
  3138  04B3  0872               	movf	?___ftneg+2,w
  3139  04B4  00EE               	movwf	exp@x+2
  3140  04B5  1683               	bsf	3,5	;RP0=1, select bank1
  3141  04B6  1303               	bcf	3,6	;RP1=0, select bank1
  3142  04B7                     l2217:	
  3143  04B7  30AA               	movlw	170
  3144  04B8  1283               	bcf	3,5	;RP0=0, select bank0
  3145  04B9  00B0               	movwf	___ftmul@f1
  3146  04BA  30B8               	movlw	184
  3147  04BB  00B1               	movwf	___ftmul@f1+1
  3148  04BC  303F               	movlw	63
  3149  04BD  00B2               	movwf	___ftmul@f1+2
  3150  04BE  086C               	movf	exp@x,w
  3151  04BF  00B3               	movwf	___ftmul@f2
  3152  04C0  086D               	movf	exp@x+1,w
  3153  04C1  00B4               	movwf	___ftmul@f2+1
  3154  04C2  086E               	movf	exp@x+2,w
  3155  04C3  00B5               	movwf	___ftmul@f2+2
  3156  04C4  120A  118A  2024  120A  118A  	fcall	___ftmul
  3157  04C9  1283               	bcf	3,5	;RP0=0, select bank0
  3158  04CA  1303               	bcf	3,6	;RP1=0, select bank0
  3159  04CB  0830               	movf	?___ftmul,w
  3160  04CC  00EC               	movwf	exp@x
  3161  04CD  0831               	movf	?___ftmul+1,w
  3162  04CE  00ED               	movwf	exp@x+1
  3163  04CF  0832               	movf	?___ftmul+2,w
  3164  04D0  00EE               	movwf	exp@x+2
  3165  04D1  086C               	movf	exp@x,w
  3166  04D2  00E3               	movwf	floor@x
  3167  04D3  086D               	movf	exp@x+1,w
  3168  04D4  00E4               	movwf	floor@x+1
  3169  04D5  086E               	movf	exp@x+2,w
  3170  04D6  00E5               	movwf	floor@x+2
  3171  04D7  120A  158A  24A0  120A  118A  	fcall	_floor
  3172  04DC  1283               	bcf	3,5	;RP0=0, select bank0
  3173  04DD  1303               	bcf	3,6	;RP1=0, select bank0
  3174  04DE  0863               	movf	?_floor,w
  3175  04DF  1683               	bsf	3,5	;RP0=1, select bank1
  3176  04E0  1303               	bcf	3,6	;RP1=0, select bank1
  3177  04E1  00A0               	movwf	_exp$653^(0+128)
  3178  04E2  1283               	bcf	3,5	;RP0=0, select bank0
  3179  04E3  1303               	bcf	3,6	;RP1=0, select bank0
  3180  04E4  0864               	movf	?_floor+1,w
  3181  04E5  1683               	bsf	3,5	;RP0=1, select bank1
  3182  04E6  1303               	bcf	3,6	;RP1=0, select bank1
  3183  04E7  00A1               	movwf	(_exp$653+1)^(0+128)
  3184  04E8  1283               	bcf	3,5	;RP0=0, select bank0
  3185  04E9  1303               	bcf	3,6	;RP1=0, select bank0
  3186  04EA  0865               	movf	?_floor+2,w
  3187  04EB  1683               	bsf	3,5	;RP0=1, select bank1
  3188  04EC  1303               	bcf	3,6	;RP1=0, select bank1
  3189  04ED  00A2               	movwf	(_exp$653+2)^(0+128)
  3190  04EE  0820               	movf	_exp$653^(0+128),w
  3191  04EF  1283               	bcf	3,5	;RP0=0, select bank0
  3192  04F0  1303               	bcf	3,6	;RP1=0, select bank0
  3193  04F1  00CD               	movwf	___fttol@f1
  3194  04F2  1683               	bsf	3,5	;RP0=1, select bank1
  3195  04F3  1303               	bcf	3,6	;RP1=0, select bank1
  3196  04F4  0821               	movf	(_exp$653+1)^(0+128),w
  3197  04F5  1283               	bcf	3,5	;RP0=0, select bank0
  3198  04F6  1303               	bcf	3,6	;RP1=0, select bank0
  3199  04F7  00CE               	movwf	___fttol@f1+1
  3200  04F8  1683               	bsf	3,5	;RP0=1, select bank1
  3201  04F9  1303               	bcf	3,6	;RP1=0, select bank1
  3202  04FA  0822               	movf	(_exp$653+2)^(0+128),w
  3203  04FB  1283               	bcf	3,5	;RP0=0, select bank0
  3204  04FC  1303               	bcf	3,6	;RP1=0, select bank0
  3205  04FD  00CF               	movwf	___fttol@f1+2
  3206  04FE  120A  158A  2412  120A  118A  	fcall	___fttol
  3207  0503  1283               	bcf	3,5	;RP0=0, select bank0
  3208  0504  1303               	bcf	3,6	;RP1=0, select bank0
  3209  0505  084E               	movf	?___fttol+1,w
  3210  0506  1683               	bsf	3,5	;RP0=1, select bank1
  3211  0507  1303               	bcf	3,6	;RP1=0, select bank1
  3212  0508  01A7               	clrf	(exp@exponent+1)^(0+128)
  3213  0509  07A7               	addwf	(exp@exponent+1)^(0+128),f
  3214  050A  1283               	bcf	3,5	;RP0=0, select bank0
  3215  050B  1303               	bcf	3,6	;RP1=0, select bank0
  3216  050C  084D               	movf	?___fttol,w
  3217  050D  1683               	bsf	3,5	;RP0=1, select bank1
  3218  050E  1303               	bcf	3,6	;RP1=0, select bank1
  3219  050F  01A6               	clrf	exp@exponent^(0+128)
  3220  0510  07A6               	addwf	exp@exponent^(0+128),f
  3221  0511  0827               	movf	(exp@exponent+1)^(0+128),w
  3222  0512  01F9               	clrf	___awtoft@c+1
  3223  0513  07F9               	addwf	___awtoft@c+1,f
  3224  0514  0826               	movf	exp@exponent^(0+128),w
  3225  0515  01F8               	clrf	___awtoft@c
  3226  0516  07F8               	addwf	___awtoft@c,f
  3227  0517  120A  118A  2003  120A  118A  	fcall	___awtoft
  3228  051C  0878               	movf	?___awtoft,w
  3229  051D  1283               	bcf	3,5	;RP0=0, select bank0
  3230  051E  1303               	bcf	3,6	;RP1=0, select bank0
  3231  051F  00CD               	movwf	___ftsub@f2
  3232  0520  0879               	movf	?___awtoft+1,w
  3233  0521  00CE               	movwf	___ftsub@f2+1
  3234  0522  087A               	movf	?___awtoft+2,w
  3235  0523  00CF               	movwf	___ftsub@f2+2
  3236  0524  086C               	movf	exp@x,w
  3237  0525  00D0               	movwf	___ftsub@f1
  3238  0526  086D               	movf	exp@x+1,w
  3239  0527  00D1               	movwf	___ftsub@f1+1
  3240  0528  086E               	movf	exp@x+2,w
  3241  0529  00D2               	movwf	___ftsub@f1+2
  3242  052A  120A  158A  20E1  120A  118A  	fcall	___ftsub
  3243  052F  1283               	bcf	3,5	;RP0=0, select bank0
  3244  0530  1303               	bcf	3,6	;RP1=0, select bank0
  3245  0531  084D               	movf	?___ftsub,w
  3246  0532  00EC               	movwf	exp@x
  3247  0533  084E               	movf	?___ftsub+1,w
  3248  0534  00ED               	movwf	exp@x+1
  3249  0535  084F               	movf	?___ftsub+2,w
  3250  0536  00EE               	movwf	exp@x+2
  3251  0537  086C               	movf	exp@x,w
  3252  0538  00CD               	movwf	eval_poly@x
  3253  0539  086D               	movf	exp@x+1,w
  3254  053A  00CE               	movwf	eval_poly@x+1
  3255  053B  086E               	movf	exp@x+2,w
  3256  053C  00CF               	movwf	eval_poly@x+2
  3257  053D  300B               	movlw	(exp@coeff-__stringbase)& (0+255)
  3258  053E  00EF               	movwf	??_exp
  3259  053F  086F               	movf	??_exp,w
  3260  0540  00D0               	movwf	eval_poly@d
  3261  0541  3009               	movlw	9
  3262  0542  00D1               	movwf	eval_poly@n
  3263  0543  3000               	movlw	0
  3264  0544  00D2               	movwf	eval_poly@n+1
  3265  0545  120A  158A  2399  120A  118A  	fcall	_eval_poly
  3266  054A  1283               	bcf	3,5	;RP0=0, select bank0
  3267  054B  1303               	bcf	3,6	;RP1=0, select bank0
  3268  054C  084D               	movf	?_eval_poly,w
  3269  054D  00D7               	movwf	ldexp@value
  3270  054E  084E               	movf	?_eval_poly+1,w
  3271  054F  00D8               	movwf	ldexp@value+1
  3272  0550  084F               	movf	?_eval_poly+2,w
  3273  0551  00D9               	movwf	ldexp@value+2
  3274  0552  1683               	bsf	3,5	;RP0=1, select bank1
  3275  0553  1303               	bcf	3,6	;RP1=0, select bank1
  3276  0554  0827               	movf	(exp@exponent+1)^(0+128),w
  3277  0555  1283               	bcf	3,5	;RP0=0, select bank0
  3278  0556  1303               	bcf	3,6	;RP1=0, select bank0
  3279  0557  01DB               	clrf	ldexp@newexp+1
  3280  0558  07DB               	addwf	ldexp@newexp+1,f
  3281  0559  1683               	bsf	3,5	;RP0=1, select bank1
  3282  055A  1303               	bcf	3,6	;RP1=0, select bank1
  3283  055B  0826               	movf	exp@exponent^(0+128),w
  3284  055C  1283               	bcf	3,5	;RP0=0, select bank0
  3285  055D  1303               	bcf	3,6	;RP1=0, select bank0
  3286  055E  01DA               	clrf	ldexp@newexp
  3287  055F  07DA               	addwf	ldexp@newexp,f
  3288  0560  120A  158A  2539  120A  118A  	fcall	_ldexp
  3289  0565  1283               	bcf	3,5	;RP0=0, select bank0
  3290  0566  1303               	bcf	3,6	;RP1=0, select bank0
  3291  0567  0857               	movf	?_ldexp,w
  3292  0568  00EC               	movwf	exp@x
  3293  0569  0858               	movf	?_ldexp+1,w
  3294  056A  00ED               	movwf	exp@x+1
  3295  056B  0859               	movf	?_ldexp+2,w
  3296  056C  00EE               	movwf	exp@x+2
  3297  056D  1683               	bsf	3,5	;RP0=1, select bank1
  3298  056E  1303               	bcf	3,6	;RP1=0, select bank1
  3299  056F  0828               	movf	exp@sign^(0+128),w
  3300  0570  1903               	btfsc	3,2
  3301  0571  0008               	return
  3302  0572  30FF               	movlw	255
  3303  0573  00A3               	movwf	_exp$446^(0+128)
  3304  0574  307F               	movlw	127
  3305  0575  00A4               	movwf	(_exp$446+1)^(0+128)
  3306  0576  307F               	movlw	127
  3307  0577  00A5               	movwf	(_exp$446+2)^(0+128)
  3308  0578  1283               	bcf	3,5	;RP0=0, select bank0
  3309  0579  1303               	bcf	3,6	;RP1=0, select bank0
  3310  057A  086E               	movf	exp@x+2,w
  3311  057B  1683               	bsf	3,5	;RP0=1, select bank1
  3312  057C  1303               	bcf	3,6	;RP1=0, select bank1
  3313  057D  0625               	xorwf	(_exp$446+2)^(0+128),w
  3314  057E  1D03               	skipz
  3315  057F  2D8E               	goto	u2685
  3316  0580  1283               	bcf	3,5	;RP0=0, select bank0
  3317  0581  1303               	bcf	3,6	;RP1=0, select bank0
  3318  0582  086D               	movf	exp@x+1,w
  3319  0583  1683               	bsf	3,5	;RP0=1, select bank1
  3320  0584  1303               	bcf	3,6	;RP1=0, select bank1
  3321  0585  0624               	xorwf	(_exp$446+1)^(0+128),w
  3322  0586  1D03               	skipz
  3323  0587  2D8E               	goto	u2685
  3324  0588  1283               	bcf	3,5	;RP0=0, select bank0
  3325  0589  1303               	bcf	3,6	;RP1=0, select bank0
  3326  058A  086C               	movf	exp@x,w
  3327  058B  1683               	bsf	3,5	;RP0=1, select bank1
  3328  058C  1303               	bcf	3,6	;RP1=0, select bank1
  3329  058D  0623               	xorwf	_exp$446^(0+128),w
  3330  058E                     u2685:	
  3331  058E  1D03               	skipz
  3332  058F  2D99               	goto	l2239
  3333  0590  3000               	movlw	0
  3334  0591  1283               	bcf	3,5	;RP0=0, select bank0
  3335  0592  1303               	bcf	3,6	;RP1=0, select bank0
  3336  0593  00EC               	movwf	?_exp
  3337  0594  3000               	movlw	0
  3338  0595  00ED               	movwf	?_exp+1
  3339  0596  3000               	movlw	0
  3340  0597  00EE               	movwf	?_exp+2
  3341  0598  0008               	return
  3342  0599                     l2239:	
  3343  0599  1283               	bcf	3,5	;RP0=0, select bank0
  3344  059A  086C               	movf	exp@x,w
  3345  059B  00A0               	movwf	___ftdiv@f2
  3346  059C  086D               	movf	exp@x+1,w
  3347  059D  00A1               	movwf	___ftdiv@f2+1
  3348  059E  086E               	movf	exp@x+2,w
  3349  059F  00A2               	movwf	___ftdiv@f2+2
  3350  05A0  3000               	movlw	0
  3351  05A1  00A3               	movwf	___ftdiv@f1
  3352  05A2  3080               	movlw	128
  3353  05A3  00A4               	movwf	___ftdiv@f1+1
  3354  05A4  303F               	movlw	63
  3355  05A5  00A5               	movwf	___ftdiv@f1+2
  3356  05A6  120A  158A  2678   	fcall	___ftdiv
  3357  05A9  1283               	bcf	3,5	;RP0=0, select bank0
  3358  05AA  1303               	bcf	3,6	;RP1=0, select bank0
  3359  05AB  0820               	movf	?___ftdiv,w
  3360  05AC  00EC               	movwf	?_exp
  3361  05AD  0821               	movf	?___ftdiv+1,w
  3362  05AE  00ED               	movwf	?_exp+1
  3363  05AF  0822               	movf	?___ftdiv+2,w
  3364  05B0  00EE               	movwf	?_exp+2
  3365  05B1  0008               	return
  3366  05B2                     __end_of_exp:	
  3367                           
  3368                           	psect	text10
  3369  0D39                     __ptext10:	
  3370 ;; *************** function _ldexp *****************
  3371 ;; Defined at:
  3372 ;;		line 277 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\frexp.c"
  3373 ;; Parameters:    Size  Location     Type
  3374 ;;  value           3   55[BANK0 ] unsigned char 
  3375 ;;  newexp          2   58[BANK0 ] int 
  3376 ;; Auto vars:     Size  Location     Type
  3377 ;;		None
  3378 ;; Return value:  Size  Location     Type
  3379 ;;                  3   55[BANK0 ] int 
  3380 ;; Registers used:
  3381 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  3382 ;; Tracked objects:
  3383 ;;		On entry : 0/0
  3384 ;;		On exit  : 0/0
  3385 ;;		Unchanged: 0/0
  3386 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3387 ;;      Params:         0       5       0       0       0
  3388 ;;      Locals:         0       3       0       0       0
  3389 ;;      Temps:          0       2       0       0       0
  3390 ;;      Totals:         0      10       0       0       0
  3391 ;;Total ram usage:       10 bytes
  3392 ;; Hardware stack levels used:    1
  3393 ;; Hardware stack levels required when called:    1
  3394 ;; This function calls:
  3395 ;;		___ftge
  3396 ;;		___ftneg
  3397 ;; This function is called by:
  3398 ;;		_exp
  3399 ;; This function uses a non-reentrant model
  3400 ;;
  3401                           
  3402                           
  3403                           ;psect for function _ldexp
  3404  0D39                     _ldexp:	
  3405                           
  3406                           ;incstack = 0
  3407                           ; Regs used in _ldexp: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  3408  0D39  1283               	bcf	3,5	;RP0=0, select bank0
  3409  0D3A  1303               	bcf	3,6	;RP1=0, select bank0
  3410  0D3B  0859               	movf	ldexp@value+2,w
  3411  0D3C  0458               	iorwf	ldexp@value+1,w
  3412  0D3D  0457               	iorwf	ldexp@value,w
  3413  0D3E  1D03               	skipz
  3414  0D3F  2D47               	goto	l2029
  3415  0D40  3000               	movlw	0
  3416  0D41  00D7               	movwf	?_ldexp
  3417  0D42  3000               	movlw	0
  3418  0D43  00D8               	movwf	?_ldexp+1
  3419  0D44  3000               	movlw	0
  3420  0D45  00D9               	movwf	?_ldexp+2
  3421  0D46  0008               	return
  3422  0D47                     l2029:	
  3423  0D47  0859               	movf	ldexp@value+2,w
  3424  0D48  397F               	andlw	127
  3425  0D49  00DC               	movwf	??_ldexp
  3426  0D4A  01DD               	clrf	??_ldexp+1
  3427  0D4B  1003               	clrc
  3428  0D4C  0DDC               	rlf	??_ldexp,f
  3429  0D4D  0DDD               	rlf	??_ldexp+1,f
  3430  0D4E  085C               	movf	??_ldexp,w
  3431  0D4F  07DA               	addwf	ldexp@newexp,f
  3432  0D50  1803               	skipnc
  3433  0D51  0ADB               	incf	ldexp@newexp+1,f
  3434  0D52  085D               	movf	??_ldexp+1,w
  3435  0D53  07DB               	addwf	ldexp@newexp+1,f
  3436  0D54  0D58               	rlf	ldexp@value+1,w
  3437  0D55  0D58               	rlf	ldexp@value+1,w
  3438  0D56  3901               	andlw	1
  3439  0D57  00DC               	movwf	??_ldexp
  3440  0D58  01DD               	clrf	??_ldexp+1
  3441  0D59  085C               	movf	??_ldexp,w
  3442  0D5A  07DA               	addwf	ldexp@newexp,f
  3443  0D5B  1803               	skipnc
  3444  0D5C  0ADB               	incf	ldexp@newexp+1,f
  3445  0D5D  085D               	movf	??_ldexp+1,w
  3446  0D5E  07DB               	addwf	ldexp@newexp+1,f
  3447  0D5F  1FDB               	btfss	ldexp@newexp+1,7
  3448  0D60  2D70               	goto	l2039
  3449  0D61  3022               	movlw	34
  3450  0D62  1683               	bsf	3,5	;RP0=1, select bank1
  3451  0D63  1303               	bcf	3,6	;RP1=0, select bank1
  3452  0D64  00CD               	movwf	_errno^(0+128)
  3453  0D65  3000               	movlw	0
  3454  0D66  00CE               	movwf	(_errno^(0+128)+1)
  3455  0D67  3000               	movlw	0
  3456  0D68  1283               	bcf	3,5	;RP0=0, select bank0
  3457  0D69  1303               	bcf	3,6	;RP1=0, select bank0
  3458  0D6A  00D7               	movwf	?_ldexp
  3459  0D6B  3000               	movlw	0
  3460  0D6C  00D8               	movwf	?_ldexp+1
  3461  0D6D  3000               	movlw	0
  3462  0D6E  00D9               	movwf	?_ldexp+2
  3463  0D6F  0008               	return
  3464  0D70                     l2039:	
  3465  0D70  085B               	movf	ldexp@newexp+1,w
  3466  0D71  3A80               	xorlw	128
  3467  0D72  00FF               	movwf	127
  3468  0D73  3081               	movlw	129
  3469  0D74  027F               	subwf	127,w
  3470  0D75  1D03               	skipz
  3471  0D76  2D79               	goto	u2445
  3472  0D77  3000               	movlw	0
  3473  0D78  025A               	subwf	ldexp@newexp,w
  3474  0D79                     u2445:	
  3475  0D79  1C03               	skipc
  3476  0D7A  2DB9               	goto	l2063
  3477  0D7B  3022               	movlw	34
  3478  0D7C  1683               	bsf	3,5	;RP0=1, select bank1
  3479  0D7D  1303               	bcf	3,6	;RP1=0, select bank1
  3480  0D7E  00CD               	movwf	_errno^(0+128)
  3481  0D7F  3000               	movlw	0
  3482  0D80  00CE               	movwf	(_errno^(0+128)+1)
  3483  0D81  1283               	bcf	3,5	;RP0=0, select bank0
  3484  0D82  1303               	bcf	3,6	;RP1=0, select bank0
  3485  0D83  0857               	movf	ldexp@value,w
  3486  0D84  00F0               	movwf	___ftge@ff1
  3487  0D85  0858               	movf	ldexp@value+1,w
  3488  0D86  00F1               	movwf	___ftge@ff1+1
  3489  0D87  0859               	movf	ldexp@value+2,w
  3490  0D88  00F2               	movwf	___ftge@ff1+2
  3491  0D89  3000               	movlw	0
  3492  0D8A  00F3               	movwf	___ftge@ff2
  3493  0D8B  3000               	movlw	0
  3494  0D8C  00F4               	movwf	___ftge@ff2+1
  3495  0D8D  3000               	movlw	0
  3496  0D8E  00F5               	movwf	___ftge@ff2+2
  3497  0D8F  120A  158A  22D4  120A  158A  	fcall	___ftge
  3498  0D94  1803               	btfsc	3,0
  3499  0D95  2DB0               	goto	l2059
  3500  0D96  30FF               	movlw	255
  3501  0D97  1283               	bcf	3,5	;RP0=0, select bank0
  3502  0D98  1303               	bcf	3,6	;RP1=0, select bank0
  3503  0D99  00DE               	movwf	_ldexp$483
  3504  0D9A  307F               	movlw	127
  3505  0D9B  00DF               	movwf	_ldexp$483+1
  3506  0D9C  307F               	movlw	127
  3507  0D9D  00E0               	movwf	_ldexp$483+2
  3508  0D9E  085E               	movf	_ldexp$483,w
  3509  0D9F  00F0               	movwf	___ftneg@f1
  3510  0DA0  085F               	movf	_ldexp$483+1,w
  3511  0DA1  00F1               	movwf	___ftneg@f1+1
  3512  0DA2  0860               	movf	_ldexp$483+2,w
  3513  0DA3  00F2               	movwf	___ftneg@f1+2
  3514  0DA4  120A  158A  20B0   	fcall	___ftneg
  3515  0DA7  0870               	movf	?___ftneg,w
  3516  0DA8  1283               	bcf	3,5	;RP0=0, select bank0
  3517  0DA9  1303               	bcf	3,6	;RP1=0, select bank0
  3518  0DAA  00D7               	movwf	?_ldexp
  3519  0DAB  0871               	movf	?___ftneg+1,w
  3520  0DAC  00D8               	movwf	?_ldexp+1
  3521  0DAD  0872               	movf	?___ftneg+2,w
  3522  0DAE  00D9               	movwf	?_ldexp+2
  3523  0DAF  0008               	return
  3524  0DB0                     l2059:	
  3525  0DB0  30FF               	movlw	255
  3526  0DB1  1283               	bcf	3,5	;RP0=0, select bank0
  3527  0DB2  1303               	bcf	3,6	;RP1=0, select bank0
  3528  0DB3  00D7               	movwf	?_ldexp
  3529  0DB4  307F               	movlw	127
  3530  0DB5  00D8               	movwf	?_ldexp+1
  3531  0DB6  307F               	movlw	127
  3532  0DB7  00D9               	movwf	?_ldexp+2
  3533  0DB8  0008               	return
  3534  0DB9                     l2063:	
  3535  0DB9  1283               	bcf	3,5	;RP0=0, select bank0
  3536  0DBA  1303               	bcf	3,6	;RP1=0, select bank0
  3537  0DBB  085B               	movf	ldexp@newexp+1,w
  3538  0DBC  00DD               	movwf	??_ldexp+1
  3539  0DBD  085A               	movf	ldexp@newexp,w
  3540  0DBE  00DC               	movwf	??_ldexp
  3541  0DBF  0D5D               	rlf	??_ldexp+1,w
  3542  0DC0  0CDD               	rrf	??_ldexp+1,f
  3543  0DC1  0CDC               	rrf	??_ldexp,f
  3544  0DC2  0859               	movf	ldexp@value+2,w
  3545  0DC3  065C               	xorwf	??_ldexp,w
  3546  0DC4  3980               	andlw	-128
  3547  0DC5  065C               	xorwf	??_ldexp,w
  3548  0DC6  00D9               	movwf	ldexp@value+2
  3549  0DC7  085A               	movf	ldexp@newexp,w
  3550  0DC8  3901               	andlw	1
  3551  0DC9  00DC               	movwf	??_ldexp
  3552  0DCA  0CDC               	rrf	??_ldexp,f
  3553  0DCB  0CDC               	rrf	??_ldexp,f
  3554  0DCC  0858               	movf	ldexp@value+1,w
  3555  0DCD  065C               	xorwf	??_ldexp,w
  3556  0DCE  397F               	andlw	-129
  3557  0DCF  065C               	xorwf	??_ldexp,w
  3558  0DD0  00D8               	movwf	ldexp@value+1
  3559  0DD1  0008               	return
  3560  0DD2                     __end_of_ldexp:	
  3561                           
  3562                           	psect	text11
  3563  08B0                     __ptext11:	
  3564 ;; *************** function ___ftneg *****************
  3565 ;; Defined at:
  3566 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\ftneg.c"
  3567 ;; Parameters:    Size  Location     Type
  3568 ;;  f1              3    0[COMMON] float 
  3569 ;; Auto vars:     Size  Location     Type
  3570 ;;		None
  3571 ;; Return value:  Size  Location     Type
  3572 ;;                  3    0[COMMON] float 
  3573 ;; Registers used:
  3574 ;;		wreg
  3575 ;; Tracked objects:
  3576 ;;		On entry : 0/0
  3577 ;;		On exit  : 0/0
  3578 ;;		Unchanged: 0/0
  3579 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3580 ;;      Params:         3       0       0       0       0
  3581 ;;      Locals:         0       0       0       0       0
  3582 ;;      Temps:          0       0       0       0       0
  3583 ;;      Totals:         3       0       0       0       0
  3584 ;;Total ram usage:        3 bytes
  3585 ;; Hardware stack levels used:    1
  3586 ;; This function calls:
  3587 ;;		Nothing
  3588 ;; This function is called by:
  3589 ;;		_pow
  3590 ;;		_exp
  3591 ;;		_ldexp
  3592 ;; This function uses a non-reentrant model
  3593 ;;
  3594                           
  3595                           
  3596                           ;psect for function ___ftneg
  3597  08B0                     ___ftneg:	
  3598                           
  3599                           ;incstack = 0
  3600                           ; Regs used in ___ftneg: [wreg]
  3601  08B0  0872               	movf	___ftneg@f1+2,w
  3602  08B1  0471               	iorwf	___ftneg@f1+1,w
  3603  08B2  0470               	iorwf	___ftneg@f1,w
  3604  08B3  1903               	skipnz
  3605  08B4  0008               	return
  3606  08B5  3080               	movlw	128
  3607  08B6  06F2               	xorwf	___ftneg@f1+2,f
  3608  08B7  0008               	return
  3609  08B8                     __end_of___ftneg:	
  3610                           
  3611                           	psect	text12
  3612  0CA0                     __ptext12:	
  3613 ;; *************** function _floor *****************
  3614 ;; Defined at:
  3615 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\floor.c"
  3616 ;; Parameters:    Size  Location     Type
  3617 ;;  x               3   67[BANK0 ] float 
  3618 ;; Auto vars:     Size  Location     Type
  3619 ;;  i               3   71[BANK0 ] float 
  3620 ;;  expon           2   74[BANK0 ] int 
  3621 ;; Return value:  Size  Location     Type
  3622 ;;                  3   67[BANK0 ] int 
  3623 ;; Registers used:
  3624 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3625 ;; Tracked objects:
  3626 ;;		On entry : 0/0
  3627 ;;		On exit  : 0/0
  3628 ;;		Unchanged: 0/0
  3629 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3630 ;;      Params:         0       3       0       0       0
  3631 ;;      Locals:         0       5       0       0       0
  3632 ;;      Temps:          0       1       0       0       0
  3633 ;;      Totals:         0       9       0       0       0
  3634 ;;Total ram usage:        9 bytes
  3635 ;; Hardware stack levels used:    1
  3636 ;; Hardware stack levels required when called:    2
  3637 ;; This function calls:
  3638 ;;		___altoft
  3639 ;;		___ftadd
  3640 ;;		___ftge
  3641 ;;		___fttol
  3642 ;;		_frexp
  3643 ;; This function is called by:
  3644 ;;		_exp
  3645 ;; This function uses a non-reentrant model
  3646 ;;
  3647                           
  3648                           
  3649                           ;psect for function _floor
  3650  0CA0                     _floor:	
  3651                           
  3652                           ;incstack = 0
  3653                           ; Regs used in _floor: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3654  0CA0  1283               	bcf	3,5	;RP0=0, select bank0
  3655  0CA1  1303               	bcf	3,6	;RP1=0, select bank0
  3656  0CA2  0863               	movf	floor@x,w
  3657  0CA3  00F0               	movwf	frexp@value
  3658  0CA4  0864               	movf	floor@x+1,w
  3659  0CA5  00F1               	movwf	frexp@value+1
  3660  0CA6  0865               	movf	floor@x+2,w
  3661  0CA7  00F2               	movwf	frexp@value+2
  3662  0CA8  306A               	movlw	floor@expon& (0+255)
  3663  0CA9  00E6               	movwf	??_floor
  3664  0CAA  0866               	movf	??_floor,w
  3665  0CAB  00F3               	movwf	frexp@eptr
  3666  0CAC  120A  158A  2252  120A  158A  	fcall	_frexp
  3667  0CB1  1283               	bcf	3,5	;RP0=0, select bank0
  3668  0CB2  1303               	bcf	3,6	;RP1=0, select bank0
  3669  0CB3  1FEB               	btfss	floor@expon+1,7
  3670  0CB4  2CDA               	goto	l1999
  3671  0CB5  0863               	movf	floor@x,w
  3672  0CB6  00F0               	movwf	___ftge@ff1
  3673  0CB7  0864               	movf	floor@x+1,w
  3674  0CB8  00F1               	movwf	___ftge@ff1+1
  3675  0CB9  0865               	movf	floor@x+2,w
  3676  0CBA  00F2               	movwf	___ftge@ff1+2
  3677  0CBB  3000               	movlw	0
  3678  0CBC  00F3               	movwf	___ftge@ff2
  3679  0CBD  3000               	movlw	0
  3680  0CBE  00F4               	movwf	___ftge@ff2+1
  3681  0CBF  3000               	movlw	0
  3682  0CC0  00F5               	movwf	___ftge@ff2+2
  3683  0CC1  120A  158A  22D4  120A  158A  	fcall	___ftge
  3684  0CC6  1803               	btfsc	3,0
  3685  0CC7  2CD1               	goto	l1995
  3686  0CC8  3000               	movlw	0
  3687  0CC9  1283               	bcf	3,5	;RP0=0, select bank0
  3688  0CCA  1303               	bcf	3,6	;RP1=0, select bank0
  3689  0CCB  00E3               	movwf	?_floor
  3690  0CCC  3080               	movlw	128
  3691  0CCD  00E4               	movwf	?_floor+1
  3692  0CCE  30BF               	movlw	191
  3693  0CCF  00E5               	movwf	?_floor+2
  3694  0CD0  0008               	return
  3695  0CD1                     l1995:	
  3696  0CD1  3000               	movlw	0
  3697  0CD2  1283               	bcf	3,5	;RP0=0, select bank0
  3698  0CD3  1303               	bcf	3,6	;RP1=0, select bank0
  3699  0CD4  00E3               	movwf	?_floor
  3700  0CD5  3000               	movlw	0
  3701  0CD6  00E4               	movwf	?_floor+1
  3702  0CD7  3000               	movlw	0
  3703  0CD8  00E5               	movwf	?_floor+2
  3704  0CD9  0008               	return
  3705  0CDA                     l1999:	
  3706  0CDA  3000               	movlw	0
  3707  0CDB  026B               	subwf	floor@expon+1,w
  3708  0CDC  3015               	movlw	21
  3709  0CDD  1903               	skipnz
  3710  0CDE  026A               	subwf	floor@expon,w
  3711  0CDF  1803               	btfsc	3,0
  3712  0CE0  0008               	return
  3713  0CE1  0863               	movf	floor@x,w
  3714  0CE2  00CD               	movwf	___fttol@f1
  3715  0CE3  0864               	movf	floor@x+1,w
  3716  0CE4  00CE               	movwf	___fttol@f1+1
  3717  0CE5  0865               	movf	floor@x+2,w
  3718  0CE6  00CF               	movwf	___fttol@f1+2
  3719  0CE7  120A  158A  2412  120A  158A  	fcall	___fttol
  3720  0CEC  1283               	bcf	3,5	;RP0=0, select bank0
  3721  0CED  1303               	bcf	3,6	;RP1=0, select bank0
  3722  0CEE  0850               	movf	?___fttol+3,w
  3723  0CEF  00DE               	movwf	___altoft@c+3
  3724  0CF0  084F               	movf	?___fttol+2,w
  3725  0CF1  00DD               	movwf	___altoft@c+2
  3726  0CF2  084E               	movf	?___fttol+1,w
  3727  0CF3  00DC               	movwf	___altoft@c+1
  3728  0CF4  084D               	movf	?___fttol,w
  3729  0CF5  00DB               	movwf	___altoft@c
  3730  0CF6  120A  158A  2292  120A  158A  	fcall	___altoft
  3731  0CFB  1283               	bcf	3,5	;RP0=0, select bank0
  3732  0CFC  1303               	bcf	3,6	;RP1=0, select bank0
  3733  0CFD  085B               	movf	?___altoft,w
  3734  0CFE  00E7               	movwf	floor@i
  3735  0CFF  085C               	movf	?___altoft+1,w
  3736  0D00  00E8               	movwf	floor@i+1
  3737  0D01  085D               	movf	?___altoft+2,w
  3738  0D02  00E9               	movwf	floor@i+2
  3739  0D03  0863               	movf	floor@x,w
  3740  0D04  00F0               	movwf	___ftge@ff1
  3741  0D05  0864               	movf	floor@x+1,w
  3742  0D06  00F1               	movwf	___ftge@ff1+1
  3743  0D07  0865               	movf	floor@x+2,w
  3744  0D08  00F2               	movwf	___ftge@ff1+2
  3745  0D09  0867               	movf	floor@i,w
  3746  0D0A  00F3               	movwf	___ftge@ff2
  3747  0D0B  0868               	movf	floor@i+1,w
  3748  0D0C  00F4               	movwf	___ftge@ff2+1
  3749  0D0D  0869               	movf	floor@i+2,w
  3750  0D0E  00F5               	movwf	___ftge@ff2+2
  3751  0D0F  120A  158A  22D4  120A  158A  	fcall	___ftge
  3752  0D14  1803               	btfsc	3,0
  3753  0D15  2D30               	goto	l2009
  3754  0D16  3000               	movlw	0
  3755  0D17  1283               	bcf	3,5	;RP0=0, select bank0
  3756  0D18  1303               	bcf	3,6	;RP1=0, select bank0
  3757  0D19  00C0               	movwf	___ftadd@f1
  3758  0D1A  3080               	movlw	128
  3759  0D1B  00C1               	movwf	___ftadd@f1+1
  3760  0D1C  30BF               	movlw	191
  3761  0D1D  00C2               	movwf	___ftadd@f1+2
  3762  0D1E  0867               	movf	floor@i,w
  3763  0D1F  00C3               	movwf	___ftadd@f2
  3764  0D20  0868               	movf	floor@i+1,w
  3765  0D21  00C4               	movwf	___ftadd@f2+1
  3766  0D22  0869               	movf	floor@i+2,w
  3767  0D23  00C5               	movwf	___ftadd@f2+2
  3768  0D24  120A  118A  21D0   	fcall	___ftadd
  3769  0D27  1283               	bcf	3,5	;RP0=0, select bank0
  3770  0D28  1303               	bcf	3,6	;RP1=0, select bank0
  3771  0D29  0840               	movf	?___ftadd,w
  3772  0D2A  00E3               	movwf	?_floor
  3773  0D2B  0841               	movf	?___ftadd+1,w
  3774  0D2C  00E4               	movwf	?_floor+1
  3775  0D2D  0842               	movf	?___ftadd+2,w
  3776  0D2E  00E5               	movwf	?_floor+2
  3777  0D2F  0008               	return
  3778  0D30                     l2009:	
  3779  0D30  1283               	bcf	3,5	;RP0=0, select bank0
  3780  0D31  1303               	bcf	3,6	;RP1=0, select bank0
  3781  0D32  0867               	movf	floor@i,w
  3782  0D33  00E3               	movwf	?_floor
  3783  0D34  0868               	movf	floor@i+1,w
  3784  0D35  00E4               	movwf	?_floor+1
  3785  0D36  0869               	movf	floor@i+2,w
  3786  0D37  00E5               	movwf	?_floor+2
  3787  0D38  0008               	return
  3788  0D39                     __end_of_floor:	
  3789                           
  3790                           	psect	text13
  3791  0A52                     __ptext13:	
  3792 ;; *************** function _frexp *****************
  3793 ;; Defined at:
  3794 ;;		line 254 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\frexp.c"
  3795 ;; Parameters:    Size  Location     Type
  3796 ;;  value           3    0[COMMON] int 
  3797 ;;  eptr            1    3[COMMON] PTR int 
  3798 ;;		 -> log@exponent(2), floor@expon(2), 
  3799 ;; Auto vars:     Size  Location     Type
  3800 ;;		None
  3801 ;; Return value:  Size  Location     Type
  3802 ;;                  3    0[COMMON] PTR int 
  3803 ;; Registers used:
  3804 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  3805 ;; Tracked objects:
  3806 ;;		On entry : 0/0
  3807 ;;		On exit  : 0/0
  3808 ;;		Unchanged: 0/0
  3809 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3810 ;;      Params:         4       0       0       0       0
  3811 ;;      Locals:         0       0       0       0       0
  3812 ;;      Temps:          2       0       0       0       0
  3813 ;;      Totals:         6       0       0       0       0
  3814 ;;Total ram usage:        6 bytes
  3815 ;; Hardware stack levels used:    1
  3816 ;; This function calls:
  3817 ;;		Nothing
  3818 ;; This function is called by:
  3819 ;;		_floor
  3820 ;;		_log
  3821 ;; This function uses a non-reentrant model
  3822 ;;
  3823                           
  3824                           
  3825                           ;psect for function _frexp
  3826  0A52                     _frexp:	
  3827                           
  3828                           ;incstack = 0
  3829                           ; Regs used in _frexp: [wreg-fsr0h+status,2+status,0+btemp+1]
  3830  0A52  0872               	movf	frexp@value+2,w
  3831  0A53  0471               	iorwf	frexp@value+1,w
  3832  0A54  0470               	iorwf	frexp@value,w
  3833  0A55  1D03               	skipz
  3834  0A56  2A64               	goto	l1849
  3835  0A57  0873               	movf	frexp@eptr,w
  3836  0A58  0084               	movwf	4
  3837  0A59  1383               	bcf	3,7	;select IRP bank0
  3838  0A5A  0180               	clrf	0
  3839  0A5B  0A84               	incf	4,f
  3840  0A5C  0180               	clrf	0
  3841  0A5D  3000               	movlw	0
  3842  0A5E  00F0               	movwf	?_frexp
  3843  0A5F  3000               	movlw	0
  3844  0A60  00F1               	movwf	?_frexp+1
  3845  0A61  3000               	movlw	0
  3846  0A62  00F2               	movwf	?_frexp+2
  3847  0A63  0008               	return
  3848  0A64                     l1849:	
  3849  0A64  0872               	movf	frexp@value+2,w
  3850  0A65  397F               	andlw	127
  3851  0A66  00F4               	movwf	??_frexp
  3852  0A67  01F5               	clrf	??_frexp+1
  3853  0A68  1003               	clrc
  3854  0A69  0DF4               	rlf	??_frexp,f
  3855  0A6A  0DF5               	rlf	??_frexp+1,f
  3856  0A6B  0873               	movf	frexp@eptr,w
  3857  0A6C  0084               	movwf	4
  3858  0A6D  0874               	movf	??_frexp,w
  3859  0A6E  1383               	bcf	3,7	;select IRP bank0
  3860  0A6F  0080               	movwf	0
  3861  0A70  0A84               	incf	4,f
  3862  0A71  0875               	movf	??_frexp+1,w
  3863  0A72  0080               	movwf	0
  3864  0A73  0D71               	rlf	frexp@value+1,w
  3865  0A74  0D71               	rlf	frexp@value+1,w
  3866  0A75  3901               	andlw	1
  3867  0A76  00F4               	movwf	??_frexp
  3868  0A77  01F5               	clrf	??_frexp+1
  3869  0A78  0873               	movf	frexp@eptr,w
  3870  0A79  0084               	movwf	4
  3871  0A7A  0874               	movf	??_frexp,w
  3872  0A7B  0480               	iorwf	0,f
  3873  0A7C  0A84               	incf	4,f
  3874  0A7D  0875               	movf	??_frexp+1,w
  3875  0A7E  0480               	iorwf	0,f
  3876  0A7F  0873               	movf	frexp@eptr,w
  3877  0A80  0084               	movwf	4
  3878  0A81  3082               	movlw	130
  3879  0A82  0780               	addwf	0,f
  3880  0A83  0F84               	incfsz	4,f
  3881  0A84  0800               	movf	0,w
  3882  0A85  1803               	skipnc
  3883  0A86  0A00               	incf	0,w
  3884  0A87  00FF               	movwf	127
  3885  0A88  30FF               	movlw	255
  3886  0A89  077F               	addwf	127,w
  3887  0A8A  0080               	movwf	0
  3888  0A8B  0384               	decf	4,f
  3889  0A8C  0872               	movf	frexp@value+2,w
  3890  0A8D  3980               	andlw	-128
  3891  0A8E  383F               	iorlw	63
  3892  0A8F  00F2               	movwf	frexp@value+2
  3893  0A90  13F1               	bcf	frexp@value+1,7
  3894  0A91  0008               	return
  3895  0A92                     __end_of_frexp:	
  3896                           
  3897                           	psect	text14
  3898  0C12                     __ptext14:	
  3899 ;; *************** function ___fttol *****************
  3900 ;; Defined at:
  3901 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\fttol.c"
  3902 ;; Parameters:    Size  Location     Type
  3903 ;;  f1              3   45[BANK0 ] float 
  3904 ;; Auto vars:     Size  Location     Type
  3905 ;;  lval            4   54[BANK0 ] unsigned long 
  3906 ;;  exp1            1   58[BANK0 ] unsigned char 
  3907 ;;  sign1           1   53[BANK0 ] unsigned char 
  3908 ;; Return value:  Size  Location     Type
  3909 ;;                  4   45[BANK0 ] long 
  3910 ;; Registers used:
  3911 ;;		wreg, status,2, status,0
  3912 ;; Tracked objects:
  3913 ;;		On entry : 0/0
  3914 ;;		On exit  : 0/0
  3915 ;;		Unchanged: 0/0
  3916 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3917 ;;      Params:         0       4       0       0       0
  3918 ;;      Locals:         0       6       0       0       0
  3919 ;;      Temps:          0       4       0       0       0
  3920 ;;      Totals:         0      14       0       0       0
  3921 ;;Total ram usage:       14 bytes
  3922 ;; Hardware stack levels used:    1
  3923 ;; This function calls:
  3924 ;;		Nothing
  3925 ;; This function is called by:
  3926 ;;		_main
  3927 ;;		_pow
  3928 ;;		_exp
  3929 ;;		_floor
  3930 ;; This function uses a non-reentrant model
  3931 ;;
  3932                           
  3933                           
  3934                           ;psect for function ___fttol
  3935  0C12                     ___fttol:	
  3936                           
  3937                           ;incstack = 0
  3938                           ; Regs used in ___fttol: [wreg+status,2+status,0]
  3939  0C12  1283               	bcf	3,5	;RP0=0, select bank0
  3940  0C13  1303               	bcf	3,6	;RP1=0, select bank0
  3941  0C14  084D               	movf	___fttol@f1,w
  3942  0C15  00D1               	movwf	??___fttol
  3943  0C16  084E               	movf	___fttol@f1+1,w
  3944  0C17  00D2               	movwf	??___fttol+1
  3945  0C18  084F               	movf	___fttol@f1+2,w
  3946  0C19  00D3               	movwf	??___fttol+2
  3947  0C1A  1003               	clrc
  3948  0C1B  0D52               	rlf	??___fttol+1,w
  3949  0C1C  0D53               	rlf	??___fttol+2,w
  3950  0C1D  00D4               	movwf	??___fttol+3
  3951  0C1E  0854               	movf	??___fttol+3,w
  3952  0C1F  00DA               	movwf	___fttol@exp1
  3953  0C20  08DA               	movf	___fttol@exp1,f
  3954  0C21  1D03               	skipz
  3955  0C22  2C2C               	goto	l1803
  3956  0C23  3000               	movlw	0
  3957  0C24  00D0               	movwf	?___fttol+3
  3958  0C25  3000               	movlw	0
  3959  0C26  00CF               	movwf	?___fttol+2
  3960  0C27  3000               	movlw	0
  3961  0C28  00CE               	movwf	?___fttol+1
  3962  0C29  3000               	movlw	0
  3963  0C2A  00CD               	movwf	?___fttol
  3964  0C2B  0008               	return
  3965  0C2C                     l1803:	
  3966  0C2C  084D               	movf	___fttol@f1,w
  3967  0C2D  00D1               	movwf	??___fttol
  3968  0C2E  084E               	movf	___fttol@f1+1,w
  3969  0C2F  00D2               	movwf	??___fttol+1
  3970  0C30  084F               	movf	___fttol@f1+2,w
  3971  0C31  00D3               	movwf	??___fttol+2
  3972  0C32  3017               	movlw	23
  3973  0C33                     u2035:	
  3974  0C33  1003               	clrc
  3975  0C34  0CD3               	rrf	??___fttol+2,f
  3976  0C35  0CD2               	rrf	??___fttol+1,f
  3977  0C36  0CD1               	rrf	??___fttol,f
  3978  0C37  3EFF               	addlw	-1
  3979  0C38  1D03               	skipz
  3980  0C39  2C33               	goto	u2035
  3981  0C3A  0851               	movf	??___fttol,w
  3982  0C3B  00D4               	movwf	??___fttol+3
  3983  0C3C  0854               	movf	??___fttol+3,w
  3984  0C3D  00D5               	movwf	___fttol@sign1
  3985  0C3E  17CE               	bsf	___fttol@f1+1,7
  3986  0C3F  30FF               	movlw	255
  3987  0C40  05CD               	andwf	___fttol@f1,f
  3988  0C41  30FF               	movlw	255
  3989  0C42  05CE               	andwf	___fttol@f1+1,f
  3990  0C43  3000               	movlw	0
  3991  0C44  05CF               	andwf	___fttol@f1+2,f
  3992  0C45  084D               	movf	___fttol@f1,w
  3993  0C46  00D6               	movwf	___fttol@lval
  3994  0C47  084E               	movf	___fttol@f1+1,w
  3995  0C48  00D7               	movwf	___fttol@lval+1
  3996  0C49  084F               	movf	___fttol@f1+2,w
  3997  0C4A  00D8               	movwf	___fttol@lval+2
  3998  0C4B  01D9               	clrf	___fttol@lval+3
  3999  0C4C  308E               	movlw	142
  4000  0C4D  02DA               	subwf	___fttol@exp1,f
  4001  0C4E  1FDA               	btfss	___fttol@exp1,7
  4002  0C4F  2C6E               	goto	l1823
  4003  0C50  085A               	movf	___fttol@exp1,w
  4004  0C51  3A80               	xorlw	128
  4005  0C52  3E8F               	addlw	143
  4006  0C53  1803               	skipnc
  4007  0C54  2C5E               	goto	l1821
  4008  0C55  3000               	movlw	0
  4009  0C56  00D0               	movwf	?___fttol+3
  4010  0C57  3000               	movlw	0
  4011  0C58  00CF               	movwf	?___fttol+2
  4012  0C59  3000               	movlw	0
  4013  0C5A  00CE               	movwf	?___fttol+1
  4014  0C5B  3000               	movlw	0
  4015  0C5C  00CD               	movwf	?___fttol
  4016  0C5D  0008               	return
  4017  0C5E                     l1821:	
  4018  0C5E  3001               	movlw	1
  4019  0C5F                     u2065:	
  4020  0C5F  1003               	clrc
  4021  0C60  0CD9               	rrf	___fttol@lval+3,f
  4022  0C61  0CD8               	rrf	___fttol@lval+2,f
  4023  0C62  0CD7               	rrf	___fttol@lval+1,f
  4024  0C63  0CD6               	rrf	___fttol@lval,f
  4025  0C64  3EFF               	addlw	-1
  4026  0C65  1D03               	skipz
  4027  0C66  2C5F               	goto	u2065
  4028  0C67  3001               	movlw	1
  4029  0C68  00D1               	movwf	??___fttol
  4030  0C69  0851               	movf	??___fttol,w
  4031  0C6A  07DA               	addwf	___fttol@exp1,f
  4032  0C6B  1903               	btfsc	3,2
  4033  0C6C  2C89               	goto	l1833
  4034  0C6D  2C5E               	goto	l1821
  4035  0C6E                     l1823:	
  4036  0C6E  3018               	movlw	24
  4037  0C6F  025A               	subwf	___fttol@exp1,w
  4038  0C70  1C03               	skipc
  4039  0C71  2C86               	goto	l1831
  4040  0C72  3000               	movlw	0
  4041  0C73  00D0               	movwf	?___fttol+3
  4042  0C74  3000               	movlw	0
  4043  0C75  00CF               	movwf	?___fttol+2
  4044  0C76  3000               	movlw	0
  4045  0C77  00CE               	movwf	?___fttol+1
  4046  0C78  3000               	movlw	0
  4047  0C79  00CD               	movwf	?___fttol
  4048  0C7A  0008               	return
  4049  0C7B                     l1829:	
  4050  0C7B  3001               	movlw	1
  4051  0C7C  00D1               	movwf	??___fttol
  4052  0C7D                     u2095:	
  4053  0C7D  1003               	clrc
  4054  0C7E  0DD6               	rlf	___fttol@lval,f
  4055  0C7F  0DD7               	rlf	___fttol@lval+1,f
  4056  0C80  0DD8               	rlf	___fttol@lval+2,f
  4057  0C81  0DD9               	rlf	___fttol@lval+3,f
  4058  0C82  0BD1               	decfsz	??___fttol,f
  4059  0C83  2C7D               	goto	u2095
  4060  0C84  3001               	movlw	1
  4061  0C85  02DA               	subwf	___fttol@exp1,f
  4062  0C86                     l1831:	
  4063  0C86  08DA               	movf	___fttol@exp1,f
  4064  0C87  1D03               	skipz
  4065  0C88  2C7B               	goto	l1829
  4066  0C89                     l1833:	
  4067  0C89  0855               	movf	___fttol@sign1,w
  4068  0C8A  1903               	btfsc	3,2
  4069  0C8B  2C97               	goto	l1837
  4070  0C8C  09D6               	comf	___fttol@lval,f
  4071  0C8D  09D7               	comf	___fttol@lval+1,f
  4072  0C8E  09D8               	comf	___fttol@lval+2,f
  4073  0C8F  09D9               	comf	___fttol@lval+3,f
  4074  0C90  0AD6               	incf	___fttol@lval,f
  4075  0C91  1903               	skipnz
  4076  0C92  0AD7               	incf	___fttol@lval+1,f
  4077  0C93  1903               	skipnz
  4078  0C94  0AD8               	incf	___fttol@lval+2,f
  4079  0C95  1903               	skipnz
  4080  0C96  0AD9               	incf	___fttol@lval+3,f
  4081  0C97                     l1837:	
  4082  0C97  0859               	movf	___fttol@lval+3,w
  4083  0C98  00D0               	movwf	?___fttol+3
  4084  0C99  0858               	movf	___fttol@lval+2,w
  4085  0C9A  00CF               	movwf	?___fttol+2
  4086  0C9B  0857               	movf	___fttol@lval+1,w
  4087  0C9C  00CE               	movwf	?___fttol+1
  4088  0C9D  0856               	movf	___fttol@lval,w
  4089  0C9E  00CD               	movwf	?___fttol
  4090  0C9F  0008               	return
  4091  0CA0                     __end_of___fttol:	
  4092                           
  4093                           	psect	text15
  4094  0AD4                     __ptext15:	
  4095 ;; *************** function ___ftge *****************
  4096 ;; Defined at:
  4097 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\ftge.c"
  4098 ;; Parameters:    Size  Location     Type
  4099 ;;  ff1             3    0[COMMON] float 
  4100 ;;  ff2             3    3[COMMON] float 
  4101 ;; Auto vars:     Size  Location     Type
  4102 ;;		None
  4103 ;; Return value:  Size  Location     Type
  4104 ;;		None               void
  4105 ;; Registers used:
  4106 ;;		wreg, status,2, status,0
  4107 ;; Tracked objects:
  4108 ;;		On entry : 0/0
  4109 ;;		On exit  : 0/0
  4110 ;;		Unchanged: 0/0
  4111 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4112 ;;      Params:         6       0       0       0       0
  4113 ;;      Locals:         0       0       0       0       0
  4114 ;;      Temps:          6       0       0       0       0
  4115 ;;      Totals:        12       0       0       0       0
  4116 ;;Total ram usage:       12 bytes
  4117 ;; Hardware stack levels used:    1
  4118 ;; This function calls:
  4119 ;;		Nothing
  4120 ;; This function is called by:
  4121 ;;		_pow
  4122 ;;		_exp
  4123 ;;		_floor
  4124 ;;		_ldexp
  4125 ;;		_log
  4126 ;; This function uses a non-reentrant model
  4127 ;;
  4128                           
  4129                           
  4130                           ;psect for function ___ftge
  4131  0AD4                     ___ftge:	
  4132                           
  4133                           ;incstack = 0
  4134                           ; Regs used in ___ftge: [wreg+status,2+status,0]
  4135  0AD4  1FF2               	btfss	___ftge@ff1+2,7
  4136  0AD5  2AFB               	goto	l1723
  4137  0AD6  3000               	movlw	0
  4138  0AD7  00F6               	movwf	??___ftge
  4139  0AD8  3000               	movlw	0
  4140  0AD9  00F7               	movwf	??___ftge+1
  4141  0ADA  3080               	movlw	128
  4142  0ADB  00F8               	movwf	??___ftge+2
  4143  0ADC  0970               	comf	___ftge@ff1,w
  4144  0ADD  00F9               	movwf	??___ftge+3
  4145  0ADE  0971               	comf	___ftge@ff1+1,w
  4146  0ADF  00FA               	movwf	??___ftge+4
  4147  0AE0  0972               	comf	___ftge@ff1+2,w
  4148  0AE1  00FB               	movwf	??___ftge+5
  4149  0AE2  0AF9               	incf	??___ftge+3,f
  4150  0AE3  1903               	skipnz
  4151  0AE4  0AFA               	incf	??___ftge+4,f
  4152  0AE5  1903               	skipnz
  4153  0AE6  0AFB               	incf	??___ftge+5,f
  4154  0AE7  0879               	movf	??___ftge+3,w
  4155  0AE8  07F6               	addwf	??___ftge,f
  4156  0AE9  087A               	movf	??___ftge+4,w
  4157  0AEA  1803               	skipnc
  4158  0AEB  0F7A               	incfsz	??___ftge+4,w
  4159  0AEC  2AEE               	goto	u1831
  4160  0AED  2AEF               	goto	u1832
  4161  0AEE                     u1831:	
  4162  0AEE  07F7               	addwf	??___ftge+1,f
  4163  0AEF                     u1832:	
  4164  0AEF  087B               	movf	??___ftge+5,w
  4165  0AF0  1803               	skipnc
  4166  0AF1  0F7B               	incfsz	??___ftge+5,w
  4167  0AF2  2AF4               	goto	u1833
  4168  0AF3  2AF5               	goto	u1834
  4169  0AF4                     u1833:	
  4170  0AF4  07F8               	addwf	??___ftge+2,f
  4171  0AF5                     u1834:	
  4172  0AF5  0876               	movf	??___ftge,w
  4173  0AF6  00F0               	movwf	___ftge@ff1
  4174  0AF7  0877               	movf	??___ftge+1,w
  4175  0AF8  00F1               	movwf	___ftge@ff1+1
  4176  0AF9  0878               	movf	??___ftge+2,w
  4177  0AFA  00F2               	movwf	___ftge@ff1+2
  4178  0AFB                     l1723:	
  4179  0AFB  1FF5               	btfss	___ftge@ff2+2,7
  4180  0AFC  2B22               	goto	l1727
  4181  0AFD  3000               	movlw	0
  4182  0AFE  00F6               	movwf	??___ftge
  4183  0AFF  3000               	movlw	0
  4184  0B00  00F7               	movwf	??___ftge+1
  4185  0B01  3080               	movlw	128
  4186  0B02  00F8               	movwf	??___ftge+2
  4187  0B03  0973               	comf	___ftge@ff2,w
  4188  0B04  00F9               	movwf	??___ftge+3
  4189  0B05  0974               	comf	___ftge@ff2+1,w
  4190  0B06  00FA               	movwf	??___ftge+4
  4191  0B07  0975               	comf	___ftge@ff2+2,w
  4192  0B08  00FB               	movwf	??___ftge+5
  4193  0B09  0AF9               	incf	??___ftge+3,f
  4194  0B0A  1903               	skipnz
  4195  0B0B  0AFA               	incf	??___ftge+4,f
  4196  0B0C  1903               	skipnz
  4197  0B0D  0AFB               	incf	??___ftge+5,f
  4198  0B0E  0879               	movf	??___ftge+3,w
  4199  0B0F  07F6               	addwf	??___ftge,f
  4200  0B10  087A               	movf	??___ftge+4,w
  4201  0B11  1803               	skipnc
  4202  0B12  0F7A               	incfsz	??___ftge+4,w
  4203  0B13  2B15               	goto	u1851
  4204  0B14  2B16               	goto	u1852
  4205  0B15                     u1851:	
  4206  0B15  07F7               	addwf	??___ftge+1,f
  4207  0B16                     u1852:	
  4208  0B16  087B               	movf	??___ftge+5,w
  4209  0B17  1803               	skipnc
  4210  0B18  0F7B               	incfsz	??___ftge+5,w
  4211  0B19  2B1B               	goto	u1853
  4212  0B1A  2B1C               	goto	u1854
  4213  0B1B                     u1853:	
  4214  0B1B  07F8               	addwf	??___ftge+2,f
  4215  0B1C                     u1854:	
  4216  0B1C  0876               	movf	??___ftge,w
  4217  0B1D  00F3               	movwf	___ftge@ff2
  4218  0B1E  0877               	movf	??___ftge+1,w
  4219  0B1F  00F4               	movwf	___ftge@ff2+1
  4220  0B20  0878               	movf	??___ftge+2,w
  4221  0B21  00F5               	movwf	___ftge@ff2+2
  4222  0B22                     l1727:	
  4223  0B22  3080               	movlw	128
  4224  0B23  06F2               	xorwf	___ftge@ff1+2,f
  4225  0B24  3080               	movlw	128
  4226  0B25  06F5               	xorwf	___ftge@ff2+2,f
  4227  0B26  0875               	movf	___ftge@ff2+2,w
  4228  0B27  0272               	subwf	___ftge@ff1+2,w
  4229  0B28  1D03               	skipz
  4230  0B29  0008               	return
  4231  0B2A  0874               	movf	___ftge@ff2+1,w
  4232  0B2B  0271               	subwf	___ftge@ff1+1,w
  4233  0B2C  1D03               	skipz
  4234  0B2D  0008               	return
  4235  0B2E  0873               	movf	___ftge@ff2,w
  4236  0B2F  0270               	subwf	___ftge@ff1,w
  4237  0B30  0008               	return
  4238  0B31                     __end_of___ftge:	
  4239                           
  4240                           	psect	text16
  4241  0A92                     __ptext16:	
  4242 ;; *************** function ___altoft *****************
  4243 ;; Defined at:
  4244 ;;		line 42 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\altoft.c"
  4245 ;; Parameters:    Size  Location     Type
  4246 ;;  c               4   59[BANK0 ] long 
  4247 ;; Auto vars:     Size  Location     Type
  4248 ;;  sign            1   66[BANK0 ] unsigned char 
  4249 ;;  exp             1   65[BANK0 ] unsigned char 
  4250 ;; Return value:  Size  Location     Type
  4251 ;;                  3   59[BANK0 ] float 
  4252 ;; Registers used:
  4253 ;;		wreg, status,2, status,0, pclath, cstack
  4254 ;; Tracked objects:
  4255 ;;		On entry : 0/0
  4256 ;;		On exit  : 0/0
  4257 ;;		Unchanged: 0/0
  4258 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4259 ;;      Params:         0       4       0       0       0
  4260 ;;      Locals:         0       2       0       0       0
  4261 ;;      Temps:          0       2       0       0       0
  4262 ;;      Totals:         0       8       0       0       0
  4263 ;;Total ram usage:        8 bytes
  4264 ;; Hardware stack levels used:    1
  4265 ;; Hardware stack levels required when called:    1
  4266 ;; This function calls:
  4267 ;;		___ftpack
  4268 ;; This function is called by:
  4269 ;;		_floor
  4270 ;; This function uses a non-reentrant model
  4271 ;;
  4272                           
  4273                           
  4274                           ;psect for function ___altoft
  4275  0A92                     ___altoft:	
  4276                           
  4277                           ;incstack = 0
  4278                           ; Regs used in ___altoft: [wreg+status,2+status,0+pclath+cstack]
  4279  0A92  1283               	bcf	3,5	;RP0=0, select bank0
  4280  0A93  1303               	bcf	3,6	;RP1=0, select bank0
  4281  0A94  01E2               	clrf	___altoft@sign
  4282  0A95  308E               	movlw	142
  4283  0A96  00DF               	movwf	??___altoft
  4284  0A97  085F               	movf	??___altoft,w
  4285  0A98  00E1               	movwf	___altoft@exp
  4286  0A99  1FDE               	btfss	___altoft@c+3,7
  4287  0A9A  2AA8               	goto	l1641
  4288  0A9B  09DB               	comf	___altoft@c,f
  4289  0A9C  09DC               	comf	___altoft@c+1,f
  4290  0A9D  09DD               	comf	___altoft@c+2,f
  4291  0A9E  09DE               	comf	___altoft@c+3,f
  4292  0A9F  0ADB               	incf	___altoft@c,f
  4293  0AA0  1903               	skipnz
  4294  0AA1  0ADC               	incf	___altoft@c+1,f
  4295  0AA2  1903               	skipnz
  4296  0AA3  0ADD               	incf	___altoft@c+2,f
  4297  0AA4  1903               	skipnz
  4298  0AA5  0ADE               	incf	___altoft@c+3,f
  4299  0AA6  01E2               	clrf	___altoft@sign
  4300  0AA7  0AE2               	incf	___altoft@sign,f
  4301  0AA8                     l1641:	
  4302  0AA8  30FF               	movlw	255
  4303  0AA9  055E               	andwf	___altoft@c+3,w
  4304  0AAA  1903               	btfsc	3,2
  4305  0AAB  2ABA               	goto	l1643
  4306  0AAC  3001               	movlw	1
  4307  0AAD                     u1565:	
  4308  0AAD  1003               	clrc
  4309  0AAE  0CDE               	rrf	___altoft@c+3,f
  4310  0AAF  0CDD               	rrf	___altoft@c+2,f
  4311  0AB0  0CDC               	rrf	___altoft@c+1,f
  4312  0AB1  0CDB               	rrf	___altoft@c,f
  4313  0AB2  3EFF               	addlw	-1
  4314  0AB3  1D03               	skipz
  4315  0AB4  2AAD               	goto	u1565
  4316  0AB5  3001               	movlw	1
  4317  0AB6  00DF               	movwf	??___altoft
  4318  0AB7  085F               	movf	??___altoft,w
  4319  0AB8  07E1               	addwf	___altoft@exp,f
  4320  0AB9  2AA8               	goto	l1641
  4321  0ABA                     l1643:	
  4322  0ABA  085B               	movf	___altoft@c,w
  4323  0ABB  00F0               	movwf	___ftpack@arg
  4324  0ABC  085C               	movf	___altoft@c+1,w
  4325  0ABD  00F1               	movwf	___ftpack@arg+1
  4326  0ABE  085D               	movf	___altoft@c+2,w
  4327  0ABF  00F2               	movwf	___ftpack@arg+2
  4328  0AC0  0861               	movf	___altoft@exp,w
  4329  0AC1  00DF               	movwf	??___altoft
  4330  0AC2  085F               	movf	??___altoft,w
  4331  0AC3  00F3               	movwf	___ftpack@exp
  4332  0AC4  0862               	movf	___altoft@sign,w
  4333  0AC5  00E0               	movwf	??___altoft+1
  4334  0AC6  0860               	movf	??___altoft+1,w
  4335  0AC7  00F4               	movwf	___ftpack@sign
  4336  0AC8  120A  158A  2331   	fcall	___ftpack
  4337  0ACB  0870               	movf	?___ftpack,w
  4338  0ACC  1283               	bcf	3,5	;RP0=0, select bank0
  4339  0ACD  1303               	bcf	3,6	;RP1=0, select bank0
  4340  0ACE  00DB               	movwf	?___altoft
  4341  0ACF  0871               	movf	?___ftpack+1,w
  4342  0AD0  00DC               	movwf	?___altoft+1
  4343  0AD1  0872               	movf	?___ftpack+2,w
  4344  0AD2  00DD               	movwf	?___altoft+2
  4345  0AD3  0008               	return
  4346  0AD4                     __end_of___altoft:	
  4347                           
  4348                           	psect	text17
  4349  0B99                     __ptext17:	
  4350 ;; *************** function _eval_poly *****************
  4351 ;; Defined at:
  4352 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\evalpoly.c"
  4353 ;; Parameters:    Size  Location     Type
  4354 ;;  x               3   45[BANK0 ] float 
  4355 ;;  d               1   48[BANK0 ] PTR const 
  4356 ;;		 -> log@coeff(27), exp@coeff(30), 
  4357 ;;  n               2   49[BANK0 ] int 
  4358 ;; Auto vars:     Size  Location     Type
  4359 ;;  res             3   52[BANK0 ] int 
  4360 ;; Return value:  Size  Location     Type
  4361 ;;                  3   45[BANK0 ] int 
  4362 ;; Registers used:
  4363 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4364 ;; Tracked objects:
  4365 ;;		On entry : 0/0
  4366 ;;		On exit  : 0/0
  4367 ;;		Unchanged: 0/0
  4368 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4369 ;;      Params:         0       6       0       0       0
  4370 ;;      Locals:         0       3       0       0       0
  4371 ;;      Temps:          0       1       0       0       0
  4372 ;;      Totals:         0      10       0       0       0
  4373 ;;Total ram usage:       10 bytes
  4374 ;; Hardware stack levels used:    1
  4375 ;; Hardware stack levels required when called:    2
  4376 ;; This function calls:
  4377 ;;		___bmul
  4378 ;;		___ftadd
  4379 ;;		___ftmul
  4380 ;; This function is called by:
  4381 ;;		_exp
  4382 ;;		_log
  4383 ;; This function uses a non-reentrant model
  4384 ;;
  4385                           
  4386                           
  4387                           ;psect for function _eval_poly
  4388  0B99                     _eval_poly:	
  4389                           
  4390                           ;incstack = 0
  4391                           ; Regs used in _eval_poly: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4392  0B99  3003               	movlw	3
  4393  0B9A  1283               	bcf	3,5	;RP0=0, select bank0
  4394  0B9B  1303               	bcf	3,6	;RP1=0, select bank0
  4395  0B9C  00D3               	movwf	??_eval_poly
  4396  0B9D  0853               	movf	??_eval_poly,w
  4397  0B9E  00F0               	movwf	___bmul@multiplicand
  4398  0B9F  0851               	movf	eval_poly@n,w
  4399  0BA0  120A  158A  20D0  120A  158A  	fcall	___bmul
  4400  0BA5  1283               	bcf	3,5	;RP0=0, select bank0
  4401  0BA6  1303               	bcf	3,6	;RP1=0, select bank0
  4402  0BA7  0750               	addwf	eval_poly@d,w
  4403  0BA8  0084               	movwf	4
  4404  0BA9  120A  158A  200A  120A  158A  	fcall	stringdir
  4405  0BAE  00D4               	movwf	eval_poly@res
  4406  0BAF  120A  158A  200A  120A  158A  	fcall	stringdir
  4407  0BB4  00D5               	movwf	eval_poly@res+1
  4408  0BB5  120A  158A  200A  120A  158A  	fcall	stringdir
  4409  0BBA                     L5:	
  4410  0BBA  00D6               	movwf	eval_poly@res+2
  4411  0BBB  0852               	movf	eval_poly@n+1,w
  4412  0BBC  0451               	iorwf	eval_poly@n,w
  4413  0BBD  1903               	btfsc	3,2
  4414  0BBE  2C0B               	goto	l2019
  4415  0BBF  3003               	movlw	3
  4416  0BC0  00D3               	movwf	??_eval_poly
  4417  0BC1  0853               	movf	??_eval_poly,w
  4418  0BC2  00F0               	movwf	___bmul@multiplicand
  4419  0BC3  30FF               	movlw	255
  4420  0BC4  07D1               	addwf	eval_poly@n,f
  4421  0BC5  1803               	skipnc
  4422  0BC6  0AD2               	incf	eval_poly@n+1,f
  4423  0BC7  30FF               	movlw	255
  4424  0BC8  07D2               	addwf	eval_poly@n+1,f
  4425  0BC9  0851               	movf	eval_poly@n,w
  4426  0BCA  120A  158A  20D0  120A  158A  	fcall	___bmul
  4427  0BCF  1283               	bcf	3,5	;RP0=0, select bank0
  4428  0BD0  1303               	bcf	3,6	;RP1=0, select bank0
  4429  0BD1  0750               	addwf	eval_poly@d,w
  4430  0BD2  0084               	movwf	4
  4431  0BD3  120A  158A  200A  120A  158A  	fcall	stringdir
  4432  0BD8  00C0               	movwf	___ftadd@f1
  4433  0BD9  120A  158A  200A  120A  158A  	fcall	stringdir
  4434  0BDE  00C1               	movwf	___ftadd@f1+1
  4435  0BDF  120A  158A  200A  120A  158A  	fcall	stringdir
  4436  0BE4  00C2               	movwf	___ftadd@f1+2
  4437  0BE5  0854               	movf	eval_poly@res,w
  4438  0BE6  00B0               	movwf	___ftmul@f1
  4439  0BE7  0855               	movf	eval_poly@res+1,w
  4440  0BE8  00B1               	movwf	___ftmul@f1+1
  4441  0BE9  0856               	movf	eval_poly@res+2,w
  4442  0BEA  00B2               	movwf	___ftmul@f1+2
  4443  0BEB  084D               	movf	eval_poly@x,w
  4444  0BEC  00B3               	movwf	___ftmul@f2
  4445  0BED  084E               	movf	eval_poly@x+1,w
  4446  0BEE  00B4               	movwf	___ftmul@f2+1
  4447  0BEF  084F               	movf	eval_poly@x+2,w
  4448  0BF0  00B5               	movwf	___ftmul@f2+2
  4449  0BF1  120A  118A  2024  120A  158A  	fcall	___ftmul
  4450  0BF6  1283               	bcf	3,5	;RP0=0, select bank0
  4451  0BF7  1303               	bcf	3,6	;RP1=0, select bank0
  4452  0BF8  0830               	movf	?___ftmul,w
  4453  0BF9  00C3               	movwf	___ftadd@f2
  4454  0BFA  0831               	movf	?___ftmul+1,w
  4455  0BFB  00C4               	movwf	___ftadd@f2+1
  4456  0BFC  0832               	movf	?___ftmul+2,w
  4457  0BFD  00C5               	movwf	___ftadd@f2+2
  4458  0BFE  120A  118A  21D0  120A  158A  	fcall	___ftadd
  4459  0C03  1283               	bcf	3,5	;RP0=0, select bank0
  4460  0C04  1303               	bcf	3,6	;RP1=0, select bank0
  4461  0C05  0840               	movf	?___ftadd,w
  4462  0C06  00D4               	movwf	eval_poly@res
  4463  0C07  0841               	movf	?___ftadd+1,w
  4464  0C08  00D5               	movwf	eval_poly@res+1
  4465  0C09  0842               	movf	?___ftadd+2,w
  4466  0C0A  2BBA               	goto	L5
  4467  0C0B                     l2019:	
  4468  0C0B  0854               	movf	eval_poly@res,w
  4469  0C0C  00CD               	movwf	?_eval_poly
  4470  0C0D  0855               	movf	eval_poly@res+1,w
  4471  0C0E  00CE               	movwf	?_eval_poly+1
  4472  0C0F  0856               	movf	eval_poly@res+2,w
  4473  0C10  00CF               	movwf	?_eval_poly+2
  4474  0C11  0008               	return
  4475  0C12                     __end_of_eval_poly:	
  4476                           
  4477                           	psect	text18
  4478  0024                     __ptext18:	
  4479 ;; *************** function ___ftmul *****************
  4480 ;; Defined at:
  4481 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\ftmul.c"
  4482 ;; Parameters:    Size  Location     Type
  4483 ;;  f1              3   16[BANK0 ] float 
  4484 ;;  f2              3   19[BANK0 ] float 
  4485 ;; Auto vars:     Size  Location     Type
  4486 ;;  f3_as_produc    3   27[BANK0 ] unsigned um
  4487 ;;  sign            1   31[BANK0 ] unsigned char 
  4488 ;;  cntr            1   30[BANK0 ] unsigned char 
  4489 ;;  exp             1   26[BANK0 ] unsigned char 
  4490 ;; Return value:  Size  Location     Type
  4491 ;;                  3   16[BANK0 ] float 
  4492 ;; Registers used:
  4493 ;;		wreg, status,2, status,0, pclath, cstack
  4494 ;; Tracked objects:
  4495 ;;		On entry : 0/0
  4496 ;;		On exit  : 0/0
  4497 ;;		Unchanged: 0/0
  4498 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4499 ;;      Params:         0       6       0       0       0
  4500 ;;      Locals:         0       6       0       0       0
  4501 ;;      Temps:          0       4       0       0       0
  4502 ;;      Totals:         0      16       0       0       0
  4503 ;;Total ram usage:       16 bytes
  4504 ;; Hardware stack levels used:    1
  4505 ;; Hardware stack levels required when called:    1
  4506 ;; This function calls:
  4507 ;;		___ftpack
  4508 ;; This function is called by:
  4509 ;;		_main
  4510 ;;		_pow
  4511 ;;		_exp
  4512 ;;		_log
  4513 ;;		_eval_poly
  4514 ;; This function uses a non-reentrant model
  4515 ;;
  4516                           
  4517                           
  4518                           ;psect for function ___ftmul
  4519  0024                     ___ftmul:	
  4520                           
  4521                           ;incstack = 0
  4522                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  4523  0024  1283               	bcf	3,5	;RP0=0, select bank0
  4524  0025  1303               	bcf	3,6	;RP1=0, select bank0
  4525  0026  0830               	movf	___ftmul@f1,w
  4526  0027  00B6               	movwf	??___ftmul
  4527  0028  0831               	movf	___ftmul@f1+1,w
  4528  0029  00B7               	movwf	??___ftmul+1
  4529  002A  0832               	movf	___ftmul@f1+2,w
  4530  002B  00B8               	movwf	??___ftmul+2
  4531  002C  1003               	clrc
  4532  002D  0D37               	rlf	??___ftmul+1,w
  4533  002E  0D38               	rlf	??___ftmul+2,w
  4534  002F  00B9               	movwf	??___ftmul+3
  4535  0030  0839               	movf	??___ftmul+3,w
  4536  0031  00BA               	movwf	___ftmul@exp
  4537  0032  08BA               	movf	___ftmul@exp,f
  4538  0033  1D03               	skipz
  4539  0034  283C               	goto	l1745
  4540  0035  3000               	movlw	0
  4541  0036  00B0               	movwf	?___ftmul
  4542  0037  3000               	movlw	0
  4543  0038  00B1               	movwf	?___ftmul+1
  4544  0039  3000               	movlw	0
  4545  003A  00B2               	movwf	?___ftmul+2
  4546  003B  0008               	return
  4547  003C                     l1745:	
  4548  003C  0833               	movf	___ftmul@f2,w
  4549  003D  00B6               	movwf	??___ftmul
  4550  003E  0834               	movf	___ftmul@f2+1,w
  4551  003F  00B7               	movwf	??___ftmul+1
  4552  0040  0835               	movf	___ftmul@f2+2,w
  4553  0041  00B8               	movwf	??___ftmul+2
  4554  0042  1003               	clrc
  4555  0043  0D37               	rlf	??___ftmul+1,w
  4556  0044  0D38               	rlf	??___ftmul+2,w
  4557  0045  00B9               	movwf	??___ftmul+3
  4558  0046  0839               	movf	??___ftmul+3,w
  4559  0047  00BF               	movwf	___ftmul@sign
  4560  0048  08BF               	movf	___ftmul@sign,f
  4561  0049  1D03               	skipz
  4562  004A  2852               	goto	l1751
  4563  004B  3000               	movlw	0
  4564  004C  00B0               	movwf	?___ftmul
  4565  004D  3000               	movlw	0
  4566  004E  00B1               	movwf	?___ftmul+1
  4567  004F  3000               	movlw	0
  4568  0050  00B2               	movwf	?___ftmul+2
  4569  0051  0008               	return
  4570  0052                     l1751:	
  4571  0052  083F               	movf	___ftmul@sign,w
  4572  0053  3E7B               	addlw	123
  4573  0054  00B6               	movwf	??___ftmul
  4574  0055  0836               	movf	??___ftmul,w
  4575  0056  07BA               	addwf	___ftmul@exp,f
  4576  0057  0830               	movf	___ftmul@f1,w
  4577  0058  00B6               	movwf	??___ftmul
  4578  0059  0831               	movf	___ftmul@f1+1,w
  4579  005A  00B7               	movwf	??___ftmul+1
  4580  005B  0832               	movf	___ftmul@f1+2,w
  4581  005C  00B8               	movwf	??___ftmul+2
  4582  005D  3010               	movlw	16
  4583  005E                     u1895:	
  4584  005E  1003               	clrc
  4585  005F  0CB8               	rrf	??___ftmul+2,f
  4586  0060  0CB7               	rrf	??___ftmul+1,f
  4587  0061  0CB6               	rrf	??___ftmul,f
  4588  0062  3EFF               	addlw	-1
  4589  0063  1D03               	skipz
  4590  0064  285E               	goto	u1895
  4591  0065  0836               	movf	??___ftmul,w
  4592  0066  00B9               	movwf	??___ftmul+3
  4593  0067  0839               	movf	??___ftmul+3,w
  4594  0068  00BF               	movwf	___ftmul@sign
  4595  0069  0833               	movf	___ftmul@f2,w
  4596  006A  00B6               	movwf	??___ftmul
  4597  006B  0834               	movf	___ftmul@f2+1,w
  4598  006C  00B7               	movwf	??___ftmul+1
  4599  006D  0835               	movf	___ftmul@f2+2,w
  4600  006E  00B8               	movwf	??___ftmul+2
  4601  006F  3010               	movlw	16
  4602  0070                     u1905:	
  4603  0070  1003               	clrc
  4604  0071  0CB8               	rrf	??___ftmul+2,f
  4605  0072  0CB7               	rrf	??___ftmul+1,f
  4606  0073  0CB6               	rrf	??___ftmul,f
  4607  0074  3EFF               	addlw	-1
  4608  0075  1D03               	skipz
  4609  0076  2870               	goto	u1905
  4610  0077  0836               	movf	??___ftmul,w
  4611  0078  00B9               	movwf	??___ftmul+3
  4612  0079  0839               	movf	??___ftmul+3,w
  4613  007A  06BF               	xorwf	___ftmul@sign,f
  4614  007B  3080               	movlw	128
  4615  007C  00B6               	movwf	??___ftmul
  4616  007D  0836               	movf	??___ftmul,w
  4617  007E  05BF               	andwf	___ftmul@sign,f
  4618  007F  17B1               	bsf	___ftmul@f1+1,7
  4619  0080  17B4               	bsf	___ftmul@f2+1,7
  4620  0081  30FF               	movlw	255
  4621  0082  05B3               	andwf	___ftmul@f2,f
  4622  0083  30FF               	movlw	255
  4623  0084  05B4               	andwf	___ftmul@f2+1,f
  4624  0085  3000               	movlw	0
  4625  0086  05B5               	andwf	___ftmul@f2+2,f
  4626  0087  3000               	movlw	0
  4627  0088  00BB               	movwf	___ftmul@f3_as_product
  4628  0089  3000               	movlw	0
  4629  008A  00BC               	movwf	___ftmul@f3_as_product+1
  4630  008B  3000               	movlw	0
  4631  008C  00BD               	movwf	___ftmul@f3_as_product+2
  4632  008D  3007               	movlw	7
  4633  008E  00B6               	movwf	??___ftmul
  4634  008F  0836               	movf	??___ftmul,w
  4635  0090  00BE               	movwf	___ftmul@cntr
  4636  0091                     l1763:	
  4637  0091  1C30               	btfss	___ftmul@f1,0
  4638  0092  28A1               	goto	l1767
  4639  0093  0833               	movf	___ftmul@f2,w
  4640  0094  07BB               	addwf	___ftmul@f3_as_product,f
  4641  0095  0834               	movf	___ftmul@f2+1,w
  4642  0096  1103               	clrz
  4643  0097  1803               	skipnc
  4644  0098  0A34               	incf	___ftmul@f2+1,w
  4645  0099  1D03               	btfss	3,2
  4646  009A  07BC               	addwf	___ftmul@f3_as_product+1,f
  4647  009B  0835               	movf	___ftmul@f2+2,w
  4648  009C  1103               	clrz
  4649  009D  1803               	skipnc
  4650  009E  0A35               	incf	___ftmul@f2+2,w
  4651  009F  1D03               	btfss	3,2
  4652  00A0  07BD               	addwf	___ftmul@f3_as_product+2,f
  4653  00A1                     l1767:	
  4654  00A1  3001               	movlw	1
  4655  00A2                     u1935:	
  4656  00A2  1003               	clrc
  4657  00A3  0CB2               	rrf	___ftmul@f1+2,f
  4658  00A4  0CB1               	rrf	___ftmul@f1+1,f
  4659  00A5  0CB0               	rrf	___ftmul@f1,f
  4660  00A6  3EFF               	addlw	-1
  4661  00A7  1D03               	skipz
  4662  00A8  28A2               	goto	u1935
  4663  00A9  3001               	movlw	1
  4664  00AA                     u1945:	
  4665  00AA  1003               	clrc
  4666  00AB  0DB3               	rlf	___ftmul@f2,f
  4667  00AC  0DB4               	rlf	___ftmul@f2+1,f
  4668  00AD  0DB5               	rlf	___ftmul@f2+2,f
  4669  00AE  3EFF               	addlw	-1
  4670  00AF  1D03               	skipz
  4671  00B0  28AA               	goto	u1945
  4672  00B1  3001               	movlw	1
  4673  00B2  02BE               	subwf	___ftmul@cntr,f
  4674  00B3  1D03               	btfss	3,2
  4675  00B4  2891               	goto	l1763
  4676  00B5  3009               	movlw	9
  4677  00B6  00B6               	movwf	??___ftmul
  4678  00B7  0836               	movf	??___ftmul,w
  4679  00B8  00BE               	movwf	___ftmul@cntr
  4680  00B9                     l1775:	
  4681  00B9  1C30               	btfss	___ftmul@f1,0
  4682  00BA  28C9               	goto	l1779
  4683  00BB  0833               	movf	___ftmul@f2,w
  4684  00BC  07BB               	addwf	___ftmul@f3_as_product,f
  4685  00BD  0834               	movf	___ftmul@f2+1,w
  4686  00BE  1103               	clrz
  4687  00BF  1803               	skipnc
  4688  00C0  0A34               	incf	___ftmul@f2+1,w
  4689  00C1  1D03               	btfss	3,2
  4690  00C2  07BC               	addwf	___ftmul@f3_as_product+1,f
  4691  00C3  0835               	movf	___ftmul@f2+2,w
  4692  00C4  1103               	clrz
  4693  00C5  1803               	skipnc
  4694  00C6  0A35               	incf	___ftmul@f2+2,w
  4695  00C7  1D03               	btfss	3,2
  4696  00C8  07BD               	addwf	___ftmul@f3_as_product+2,f
  4697  00C9                     l1779:	
  4698  00C9  3001               	movlw	1
  4699  00CA                     u1985:	
  4700  00CA  1003               	clrc
  4701  00CB  0CB2               	rrf	___ftmul@f1+2,f
  4702  00CC  0CB1               	rrf	___ftmul@f1+1,f
  4703  00CD  0CB0               	rrf	___ftmul@f1,f
  4704  00CE  3EFF               	addlw	-1
  4705  00CF  1D03               	skipz
  4706  00D0  28CA               	goto	u1985
  4707  00D1  3001               	movlw	1
  4708  00D2                     u1995:	
  4709  00D2  1003               	clrc
  4710  00D3  0CBD               	rrf	___ftmul@f3_as_product+2,f
  4711  00D4  0CBC               	rrf	___ftmul@f3_as_product+1,f
  4712  00D5  0CBB               	rrf	___ftmul@f3_as_product,f
  4713  00D6  3EFF               	addlw	-1
  4714  00D7  1D03               	skipz
  4715  00D8  28D2               	goto	u1995
  4716  00D9  3001               	movlw	1
  4717  00DA  02BE               	subwf	___ftmul@cntr,f
  4718  00DB  1D03               	btfss	3,2
  4719  00DC  28B9               	goto	l1775
  4720  00DD  083B               	movf	___ftmul@f3_as_product,w
  4721  00DE  00F0               	movwf	___ftpack@arg
  4722  00DF  083C               	movf	___ftmul@f3_as_product+1,w
  4723  00E0  00F1               	movwf	___ftpack@arg+1
  4724  00E1  083D               	movf	___ftmul@f3_as_product+2,w
  4725  00E2  00F2               	movwf	___ftpack@arg+2
  4726  00E3  083A               	movf	___ftmul@exp,w
  4727  00E4  00B6               	movwf	??___ftmul
  4728  00E5  0836               	movf	??___ftmul,w
  4729  00E6  00F3               	movwf	___ftpack@exp
  4730  00E7  083F               	movf	___ftmul@sign,w
  4731  00E8  00B7               	movwf	??___ftmul+1
  4732  00E9  0837               	movf	??___ftmul+1,w
  4733  00EA  00F4               	movwf	___ftpack@sign
  4734  00EB  120A  158A  2331   	fcall	___ftpack
  4735  00EE  0870               	movf	?___ftpack,w
  4736  00EF  1283               	bcf	3,5	;RP0=0, select bank0
  4737  00F0  1303               	bcf	3,6	;RP1=0, select bank0
  4738  00F1  00B0               	movwf	?___ftmul
  4739  00F2  0871               	movf	?___ftpack+1,w
  4740  00F3  00B1               	movwf	?___ftmul+1
  4741  00F4  0872               	movf	?___ftpack+2,w
  4742  00F5  00B2               	movwf	?___ftmul+2
  4743  00F6  0008               	return
  4744  00F7                     __end_of___ftmul:	
  4745                           
  4746                           	psect	text19
  4747  08D0                     __ptext19:	
  4748 ;; *************** function ___bmul *****************
  4749 ;; Defined at:
  4750 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\Umul8.c"
  4751 ;; Parameters:    Size  Location     Type
  4752 ;;  multiplier      1    wreg     unsigned char 
  4753 ;;  multiplicand    1    0[COMMON] unsigned char 
  4754 ;; Auto vars:     Size  Location     Type
  4755 ;;  multiplier      1    3[COMMON] unsigned char 
  4756 ;;  product         1    2[COMMON] unsigned char 
  4757 ;; Return value:  Size  Location     Type
  4758 ;;                  1    wreg      unsigned char 
  4759 ;; Registers used:
  4760 ;;		wreg, status,2, status,0
  4761 ;; Tracked objects:
  4762 ;;		On entry : 0/0
  4763 ;;		On exit  : 0/0
  4764 ;;		Unchanged: 0/0
  4765 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4766 ;;      Params:         1       0       0       0       0
  4767 ;;      Locals:         2       0       0       0       0
  4768 ;;      Temps:          1       0       0       0       0
  4769 ;;      Totals:         4       0       0       0       0
  4770 ;;Total ram usage:        4 bytes
  4771 ;; Hardware stack levels used:    1
  4772 ;; This function calls:
  4773 ;;		Nothing
  4774 ;; This function is called by:
  4775 ;;		_eval_poly
  4776 ;; This function uses a non-reentrant model
  4777 ;;
  4778                           
  4779                           
  4780                           ;psect for function ___bmul
  4781  08D0                     ___bmul:	
  4782                           
  4783                           ;incstack = 0
  4784                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  4785                           ;___bmul@multiplier stored from wreg
  4786  08D0  00F3               	movwf	___bmul@multiplier
  4787  08D1  01F2               	clrf	___bmul@product
  4788  08D2                     l1617:	
  4789  08D2  1C73               	btfss	___bmul@multiplier,0
  4790  08D3  28D8               	goto	l1621
  4791  08D4  0870               	movf	___bmul@multiplicand,w
  4792  08D5  00F1               	movwf	??___bmul
  4793  08D6  0871               	movf	??___bmul,w
  4794  08D7  07F2               	addwf	___bmul@product,f
  4795  08D8                     l1621:	
  4796  08D8  1003               	clrc
  4797  08D9  0DF0               	rlf	___bmul@multiplicand,f
  4798  08DA  1003               	clrc
  4799  08DB  0CF3               	rrf	___bmul@multiplier,f
  4800  08DC  08F3               	movf	___bmul@multiplier,f
  4801  08DD  1D03               	skipz
  4802  08DE  28D2               	goto	l1617
  4803  08DF  0872               	movf	___bmul@product,w
  4804  08E0  0008               	return
  4805  08E1                     __end_of___bmul:	
  4806                           
  4807                           	psect	text20
  4808  08E1                     __ptext20:	
  4809 ;; *************** function ___ftsub *****************
  4810 ;; Defined at:
  4811 ;;		line 18 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\ftsub.c"
  4812 ;; Parameters:    Size  Location     Type
  4813 ;;  f2              3   45[BANK0 ] float 
  4814 ;;  f1              3   48[BANK0 ] float 
  4815 ;; Auto vars:     Size  Location     Type
  4816 ;;		None
  4817 ;; Return value:  Size  Location     Type
  4818 ;;                  3   45[BANK0 ] float 
  4819 ;; Registers used:
  4820 ;;		wreg, status,2, status,0, pclath, cstack
  4821 ;; Tracked objects:
  4822 ;;		On entry : 0/0
  4823 ;;		On exit  : 0/0
  4824 ;;		Unchanged: 0/0
  4825 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4826 ;;      Params:         0       6       0       0       0
  4827 ;;      Locals:         0       0       0       0       0
  4828 ;;      Temps:          0       0       0       0       0
  4829 ;;      Totals:         0       6       0       0       0
  4830 ;;Total ram usage:        6 bytes
  4831 ;; Hardware stack levels used:    1
  4832 ;; Hardware stack levels required when called:    2
  4833 ;; This function calls:
  4834 ;;		___ftadd
  4835 ;; This function is called by:
  4836 ;;		_exp
  4837 ;; This function uses a non-reentrant model
  4838 ;;
  4839                           
  4840                           
  4841                           ;psect for function ___ftsub
  4842  08E1                     ___ftsub:	
  4843                           
  4844                           ;incstack = 0
  4845                           ; Regs used in ___ftsub: [wreg+status,2+status,0+pclath+cstack]
  4846  08E1  3080               	movlw	128
  4847  08E2  1283               	bcf	3,5	;RP0=0, select bank0
  4848  08E3  1303               	bcf	3,6	;RP1=0, select bank0
  4849  08E4  06CF               	xorwf	___ftsub@f2+2,f
  4850  08E5  0850               	movf	___ftsub@f1,w
  4851  08E6  00C0               	movwf	___ftadd@f1
  4852  08E7  0851               	movf	___ftsub@f1+1,w
  4853  08E8  00C1               	movwf	___ftadd@f1+1
  4854  08E9  0852               	movf	___ftsub@f1+2,w
  4855  08EA  00C2               	movwf	___ftadd@f1+2
  4856  08EB  084D               	movf	___ftsub@f2,w
  4857  08EC  00C3               	movwf	___ftadd@f2
  4858  08ED  084E               	movf	___ftsub@f2+1,w
  4859  08EE  00C4               	movwf	___ftadd@f2+1
  4860  08EF  084F               	movf	___ftsub@f2+2,w
  4861  08F0  00C5               	movwf	___ftadd@f2+2
  4862  08F1  120A  118A  21D0   	fcall	___ftadd
  4863  08F4  1283               	bcf	3,5	;RP0=0, select bank0
  4864  08F5  1303               	bcf	3,6	;RP1=0, select bank0
  4865  08F6  0840               	movf	?___ftadd,w
  4866  08F7  00CD               	movwf	?___ftsub
  4867  08F8  0841               	movf	?___ftadd+1,w
  4868  08F9  00CE               	movwf	?___ftsub+1
  4869  08FA  0842               	movf	?___ftadd+2,w
  4870  08FB  00CF               	movwf	?___ftsub+2
  4871  08FC  0008               	return
  4872  08FD                     __end_of___ftsub:	
  4873                           
  4874                           	psect	text21
  4875  01D0                     __ptext21:	
  4876 ;; *************** function ___ftadd *****************
  4877 ;; Defined at:
  4878 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\ftadd.c"
  4879 ;; Parameters:    Size  Location     Type
  4880 ;;  f1              3   32[BANK0 ] float 
  4881 ;;  f2              3   35[BANK0 ] float 
  4882 ;; Auto vars:     Size  Location     Type
  4883 ;;  exp1            1   44[BANK0 ] unsigned char 
  4884 ;;  exp2            1   43[BANK0 ] unsigned char 
  4885 ;;  sign            1   42[BANK0 ] unsigned char 
  4886 ;; Return value:  Size  Location     Type
  4887 ;;                  3   32[BANK0 ] float 
  4888 ;; Registers used:
  4889 ;;		wreg, status,2, status,0, pclath, cstack
  4890 ;; Tracked objects:
  4891 ;;		On entry : 0/0
  4892 ;;		On exit  : 0/0
  4893 ;;		Unchanged: 0/0
  4894 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4895 ;;      Params:         0       6       0       0       0
  4896 ;;      Locals:         0       3       0       0       0
  4897 ;;      Temps:          0       4       0       0       0
  4898 ;;      Totals:         0      13       0       0       0
  4899 ;;Total ram usage:       13 bytes
  4900 ;; Hardware stack levels used:    1
  4901 ;; Hardware stack levels required when called:    1
  4902 ;; This function calls:
  4903 ;;		___ftpack
  4904 ;; This function is called by:
  4905 ;;		_main
  4906 ;;		___ftsub
  4907 ;;		_floor
  4908 ;;		_log
  4909 ;;		_eval_poly
  4910 ;; This function uses a non-reentrant model
  4911 ;;
  4912                           
  4913                           
  4914                           ;psect for function ___ftadd
  4915  01D0                     ___ftadd:	
  4916                           
  4917                           ;incstack = 0
  4918                           ; Regs used in ___ftadd: [wreg+status,2+status,0+pclath+cstack]
  4919  01D0  1283               	bcf	3,5	;RP0=0, select bank0
  4920  01D1  1303               	bcf	3,6	;RP1=0, select bank0
  4921  01D2  0840               	movf	___ftadd@f1,w
  4922  01D3  00C6               	movwf	??___ftadd
  4923  01D4  0841               	movf	___ftadd@f1+1,w
  4924  01D5  00C7               	movwf	??___ftadd+1
  4925  01D6  0842               	movf	___ftadd@f1+2,w
  4926  01D7  00C8               	movwf	??___ftadd+2
  4927  01D8  1003               	clrc
  4928  01D9  0D47               	rlf	??___ftadd+1,w
  4929  01DA  0D48               	rlf	??___ftadd+2,w
  4930  01DB  00C9               	movwf	??___ftadd+3
  4931  01DC  0849               	movf	??___ftadd+3,w
  4932  01DD  00CC               	movwf	___ftadd@exp1
  4933  01DE  0843               	movf	___ftadd@f2,w
  4934  01DF  00C6               	movwf	??___ftadd
  4935  01E0  0844               	movf	___ftadd@f2+1,w
  4936  01E1  00C7               	movwf	??___ftadd+1
  4937  01E2  0845               	movf	___ftadd@f2+2,w
  4938  01E3  00C8               	movwf	??___ftadd+2
  4939  01E4  1003               	clrc
  4940  01E5  0D47               	rlf	??___ftadd+1,w
  4941  01E6  0D48               	rlf	??___ftadd+2,w
  4942  01E7  00C9               	movwf	??___ftadd+3
  4943  01E8  0849               	movf	??___ftadd+3,w
  4944  01E9  00CB               	movwf	___ftadd@exp2
  4945  01EA  084C               	movf	___ftadd@exp1,w
  4946  01EB  1903               	btfsc	3,2
  4947  01EC  29F9               	goto	l1655
  4948  01ED  084B               	movf	___ftadd@exp2,w
  4949  01EE  024C               	subwf	___ftadd@exp1,w
  4950  01EF  1803               	skipnc
  4951  01F0  2A00               	goto	l1659
  4952  01F1  034C               	decf	___ftadd@exp1,w
  4953  01F2  3AFF               	xorlw	255
  4954  01F3  074B               	addwf	___ftadd@exp2,w
  4955  01F4  00C6               	movwf	??___ftadd
  4956  01F5  3019               	movlw	25
  4957  01F6  0246               	subwf	??___ftadd,w
  4958  01F7  1C03               	skipc
  4959  01F8  2A00               	goto	l1659
  4960  01F9                     l1655:	
  4961  01F9  0843               	movf	___ftadd@f2,w
  4962  01FA  00C0               	movwf	?___ftadd
  4963  01FB  0844               	movf	___ftadd@f2+1,w
  4964  01FC  00C1               	movwf	?___ftadd+1
  4965  01FD  0845               	movf	___ftadd@f2+2,w
  4966  01FE  00C2               	movwf	?___ftadd+2
  4967  01FF  0008               	return
  4968  0200                     l1659:	
  4969  0200  084B               	movf	___ftadd@exp2,w
  4970  0201  1903               	btfsc	3,2
  4971  0202  0008               	return
  4972  0203  084C               	movf	___ftadd@exp1,w
  4973  0204  024B               	subwf	___ftadd@exp2,w
  4974  0205  1803               	skipnc
  4975  0206  2A0F               	goto	l1665
  4976  0207  034B               	decf	___ftadd@exp2,w
  4977  0208  3AFF               	xorlw	255
  4978  0209  074C               	addwf	___ftadd@exp1,w
  4979  020A  00C6               	movwf	??___ftadd
  4980  020B  3019               	movlw	25
  4981  020C  0246               	subwf	??___ftadd,w
  4982  020D  1803               	btfsc	3,0
  4983  020E  0008               	return
  4984  020F                     l1665:	
  4985  020F  3006               	movlw	6
  4986  0210  00C6               	movwf	??___ftadd
  4987  0211  0846               	movf	??___ftadd,w
  4988  0212  00CA               	movwf	___ftadd@sign
  4989  0213  1BC2               	btfsc	___ftadd@f1+2,7
  4990  0214  17CA               	bsf	___ftadd@sign,7
  4991  0215  1BC5               	btfsc	___ftadd@f2+2,7
  4992  0216  174A               	bsf	___ftadd@sign,6
  4993  0217  17C1               	bsf	___ftadd@f1+1,7
  4994  0218  30FF               	movlw	255
  4995  0219  05C0               	andwf	___ftadd@f1,f
  4996  021A  30FF               	movlw	255
  4997  021B  05C1               	andwf	___ftadd@f1+1,f
  4998  021C  3000               	movlw	0
  4999  021D  05C2               	andwf	___ftadd@f1+2,f
  5000  021E  17C4               	bsf	___ftadd@f2+1,7
  5001  021F  30FF               	movlw	255
  5002  0220  05C3               	andwf	___ftadd@f2,f
  5003  0221  30FF               	movlw	255
  5004  0222  05C4               	andwf	___ftadd@f2+1,f
  5005  0223  3000               	movlw	0
  5006  0224  05C5               	andwf	___ftadd@f2+2,f
  5007  0225  084B               	movf	___ftadd@exp2,w
  5008  0226  024C               	subwf	___ftadd@exp1,w
  5009  0227  1803               	skipnc
  5010  0228  2A4F               	goto	l1687
  5011  0229                     l1677:	
  5012  0229  3001               	movlw	1
  5013  022A                     u1675:	
  5014  022A  1003               	clrc
  5015  022B  0DC3               	rlf	___ftadd@f2,f
  5016  022C  0DC4               	rlf	___ftadd@f2+1,f
  5017  022D  0DC5               	rlf	___ftadd@f2+2,f
  5018  022E  3EFF               	addlw	-1
  5019  022F  1D03               	skipz
  5020  0230  2A2A               	goto	u1675
  5021  0231  3001               	movlw	1
  5022  0232  02CB               	subwf	___ftadd@exp2,f
  5023  0233  084B               	movf	___ftadd@exp2,w
  5024  0234  064C               	xorwf	___ftadd@exp1,w
  5025  0235  1903               	skipnz
  5026  0236  2A4A               	goto	l1685
  5027  0237  3001               	movlw	1
  5028  0238  02CA               	subwf	___ftadd@sign,f
  5029  0239  084A               	movf	___ftadd@sign,w
  5030  023A  3907               	andlw	7
  5031  023B  1903               	btfsc	3,2
  5032  023C  2A4A               	goto	l1685
  5033  023D  2A29               	goto	l1677
  5034  023E                     l1683:	
  5035  023E  3001               	movlw	1
  5036  023F                     u1705:	
  5037  023F  1003               	clrc
  5038  0240  0CC2               	rrf	___ftadd@f1+2,f
  5039  0241  0CC1               	rrf	___ftadd@f1+1,f
  5040  0242  0CC0               	rrf	___ftadd@f1,f
  5041  0243  3EFF               	addlw	-1
  5042  0244  1D03               	skipz
  5043  0245  2A3F               	goto	u1705
  5044  0246  3001               	movlw	1
  5045  0247  00C6               	movwf	??___ftadd
  5046  0248  0846               	movf	??___ftadd,w
  5047  0249  07CC               	addwf	___ftadd@exp1,f
  5048  024A                     l1685:	
  5049  024A  084C               	movf	___ftadd@exp1,w
  5050  024B  064B               	xorwf	___ftadd@exp2,w
  5051  024C  1903               	btfsc	3,2
  5052  024D  2A78               	goto	l427
  5053  024E  2A3E               	goto	l1683
  5054  024F                     l1687:	
  5055  024F  084C               	movf	___ftadd@exp1,w
  5056  0250  024B               	subwf	___ftadd@exp2,w
  5057  0251  1803               	skipnc
  5058  0252  2A78               	goto	l427
  5059  0253                     l1689:	
  5060  0253  3001               	movlw	1
  5061  0254                     u1735:	
  5062  0254  1003               	clrc
  5063  0255  0DC0               	rlf	___ftadd@f1,f
  5064  0256  0DC1               	rlf	___ftadd@f1+1,f
  5065  0257  0DC2               	rlf	___ftadd@f1+2,f
  5066  0258  3EFF               	addlw	-1
  5067  0259  1D03               	skipz
  5068  025A  2A54               	goto	u1735
  5069  025B  3001               	movlw	1
  5070  025C  02CC               	subwf	___ftadd@exp1,f
  5071  025D  084B               	movf	___ftadd@exp2,w
  5072  025E  064C               	xorwf	___ftadd@exp1,w
  5073  025F  1903               	skipnz
  5074  0260  2A74               	goto	l1697
  5075  0261  3001               	movlw	1
  5076  0262  02CA               	subwf	___ftadd@sign,f
  5077  0263  084A               	movf	___ftadd@sign,w
  5078  0264  3907               	andlw	7
  5079  0265  1903               	btfsc	3,2
  5080  0266  2A74               	goto	l1697
  5081  0267  2A53               	goto	l1689
  5082  0268                     l1695:	
  5083  0268  3001               	movlw	1
  5084  0269                     u1765:	
  5085  0269  1003               	clrc
  5086  026A  0CC5               	rrf	___ftadd@f2+2,f
  5087  026B  0CC4               	rrf	___ftadd@f2+1,f
  5088  026C  0CC3               	rrf	___ftadd@f2,f
  5089  026D  3EFF               	addlw	-1
  5090  026E  1D03               	skipz
  5091  026F  2A69               	goto	u1765
  5092  0270  3001               	movlw	1
  5093  0271  00C6               	movwf	??___ftadd
  5094  0272  0846               	movf	??___ftadd,w
  5095  0273  07CB               	addwf	___ftadd@exp2,f
  5096  0274                     l1697:	
  5097  0274  084C               	movf	___ftadd@exp1,w
  5098  0275  064B               	xorwf	___ftadd@exp2,w
  5099  0276  1D03               	skipz
  5100  0277  2A68               	goto	l1695
  5101  0278                     l427:	
  5102  0278  1FCA               	btfss	___ftadd@sign,7
  5103  0279  2A8A               	goto	l1701
  5104  027A  30FF               	movlw	255
  5105  027B  06C0               	xorwf	___ftadd@f1,f
  5106  027C  30FF               	movlw	255
  5107  027D  06C1               	xorwf	___ftadd@f1+1,f
  5108  027E  30FF               	movlw	255
  5109  027F  06C2               	xorwf	___ftadd@f1+2,f
  5110  0280  3001               	movlw	1
  5111  0281  07C0               	addwf	___ftadd@f1,f
  5112  0282  3000               	movlw	0
  5113  0283  1803               	skipnc
  5114  0284  3001               	movlw	1
  5115  0285  07C1               	addwf	___ftadd@f1+1,f
  5116  0286  3000               	movlw	0
  5117  0287  1803               	skipnc
  5118  0288  3001               	movlw	1
  5119  0289  07C2               	addwf	___ftadd@f1+2,f
  5120  028A                     l1701:	
  5121  028A  1F4A               	btfss	___ftadd@sign,6
  5122  028B  2A9C               	goto	l1705
  5123  028C  30FF               	movlw	255
  5124  028D  06C3               	xorwf	___ftadd@f2,f
  5125  028E  30FF               	movlw	255
  5126  028F  06C4               	xorwf	___ftadd@f2+1,f
  5127  0290  30FF               	movlw	255
  5128  0291  06C5               	xorwf	___ftadd@f2+2,f
  5129  0292  3001               	movlw	1
  5130  0293  07C3               	addwf	___ftadd@f2,f
  5131  0294  3000               	movlw	0
  5132  0295  1803               	skipnc
  5133  0296  3001               	movlw	1
  5134  0297  07C4               	addwf	___ftadd@f2+1,f
  5135  0298  3000               	movlw	0
  5136  0299  1803               	skipnc
  5137  029A  3001               	movlw	1
  5138  029B  07C5               	addwf	___ftadd@f2+2,f
  5139  029C                     l1705:	
  5140  029C  01CA               	clrf	___ftadd@sign
  5141  029D  0840               	movf	___ftadd@f1,w
  5142  029E  07C3               	addwf	___ftadd@f2,f
  5143  029F  0841               	movf	___ftadd@f1+1,w
  5144  02A0  1103               	clrz
  5145  02A1  1803               	skipnc
  5146  02A2  0A41               	incf	___ftadd@f1+1,w
  5147  02A3  1D03               	btfss	3,2
  5148  02A4  07C4               	addwf	___ftadd@f2+1,f
  5149  02A5  0842               	movf	___ftadd@f1+2,w
  5150  02A6  1103               	clrz
  5151  02A7  1803               	skipnc
  5152  02A8  0A42               	incf	___ftadd@f1+2,w
  5153  02A9  1D03               	btfss	3,2
  5154  02AA  07C5               	addwf	___ftadd@f2+2,f
  5155  02AB  1FC5               	btfss	___ftadd@f2+2,7
  5156  02AC  2ABF               	goto	l1715
  5157  02AD  30FF               	movlw	255
  5158  02AE  06C3               	xorwf	___ftadd@f2,f
  5159  02AF  30FF               	movlw	255
  5160  02B0  06C4               	xorwf	___ftadd@f2+1,f
  5161  02B1  30FF               	movlw	255
  5162  02B2  06C5               	xorwf	___ftadd@f2+2,f
  5163  02B3  3001               	movlw	1
  5164  02B4  07C3               	addwf	___ftadd@f2,f
  5165  02B5  3000               	movlw	0
  5166  02B6  1803               	skipnc
  5167  02B7  3001               	movlw	1
  5168  02B8  07C4               	addwf	___ftadd@f2+1,f
  5169  02B9  3000               	movlw	0
  5170  02BA  1803               	skipnc
  5171  02BB  3001               	movlw	1
  5172  02BC  07C5               	addwf	___ftadd@f2+2,f
  5173  02BD  01CA               	clrf	___ftadd@sign
  5174  02BE  0ACA               	incf	___ftadd@sign,f
  5175  02BF                     l1715:	
  5176  02BF  0843               	movf	___ftadd@f2,w
  5177  02C0  00F0               	movwf	___ftpack@arg
  5178  02C1  0844               	movf	___ftadd@f2+1,w
  5179  02C2  00F1               	movwf	___ftpack@arg+1
  5180  02C3  0845               	movf	___ftadd@f2+2,w
  5181  02C4  00F2               	movwf	___ftpack@arg+2
  5182  02C5  084C               	movf	___ftadd@exp1,w
  5183  02C6  00C6               	movwf	??___ftadd
  5184  02C7  0846               	movf	??___ftadd,w
  5185  02C8  00F3               	movwf	___ftpack@exp
  5186  02C9  084A               	movf	___ftadd@sign,w
  5187  02CA  00C7               	movwf	??___ftadd+1
  5188  02CB  0847               	movf	??___ftadd+1,w
  5189  02CC  00F4               	movwf	___ftpack@sign
  5190  02CD  120A  158A  2331   	fcall	___ftpack
  5191  02D0  0870               	movf	?___ftpack,w
  5192  02D1  1283               	bcf	3,5	;RP0=0, select bank0
  5193  02D2  1303               	bcf	3,6	;RP1=0, select bank0
  5194  02D3  00C0               	movwf	?___ftadd
  5195  02D4  0871               	movf	?___ftpack+1,w
  5196  02D5  00C1               	movwf	?___ftadd+1
  5197  02D6  0872               	movf	?___ftpack+2,w
  5198  02D7  00C2               	movwf	?___ftadd+2
  5199  02D8  0008               	return
  5200  02D9                     __end_of___ftadd:	
  5201                           
  5202                           	psect	text22
  5203  0E78                     __ptext22:	
  5204 ;; *************** function ___ftdiv *****************
  5205 ;; Defined at:
  5206 ;;		line 49 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\pic\ftdiv.c"
  5207 ;; Parameters:    Size  Location     Type
  5208 ;;  f2              3    0[BANK0 ] float 
  5209 ;;  f1              3    3[BANK0 ] float 
  5210 ;; Auto vars:     Size  Location     Type
  5211 ;;  f3              3   11[BANK0 ] float 
  5212 ;;  sign            1   15[BANK0 ] unsigned char 
  5213 ;;  exp             1   14[BANK0 ] unsigned char 
  5214 ;;  cntr            1   10[BANK0 ] unsigned char 
  5215 ;; Return value:  Size  Location     Type
  5216 ;;                  3    0[BANK0 ] float 
  5217 ;; Registers used:
  5218 ;;		wreg, status,2, status,0, pclath, cstack
  5219 ;; Tracked objects:
  5220 ;;		On entry : 0/0
  5221 ;;		On exit  : 0/0
  5222 ;;		Unchanged: 0/0
  5223 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5224 ;;      Params:         0       6       0       0       0
  5225 ;;      Locals:         0       6       0       0       0
  5226 ;;      Temps:          0       4       0       0       0
  5227 ;;      Totals:         0      16       0       0       0
  5228 ;;Total ram usage:       16 bytes
  5229 ;; Hardware stack levels used:    1
  5230 ;; Hardware stack levels required when called:    1
  5231 ;; This function calls:
  5232 ;;		___ftpack
  5233 ;; This function is called by:
  5234 ;;		_main
  5235 ;;		_exp
  5236 ;; This function uses a non-reentrant model
  5237 ;;
  5238                           
  5239                           
  5240                           ;psect for function ___ftdiv
  5241  0E78                     ___ftdiv:	
  5242                           
  5243                           ;incstack = 0
  5244                           ; Regs used in ___ftdiv: [wreg+status,2+status,0+pclath+cstack]
  5245  0E78  1283               	bcf	3,5	;RP0=0, select bank0
  5246  0E79  1303               	bcf	3,6	;RP1=0, select bank0
  5247  0E7A  0823               	movf	___ftdiv@f1,w
  5248  0E7B  00A6               	movwf	??___ftdiv
  5249  0E7C  0824               	movf	___ftdiv@f1+1,w
  5250  0E7D  00A7               	movwf	??___ftdiv+1
  5251  0E7E  0825               	movf	___ftdiv@f1+2,w
  5252  0E7F  00A8               	movwf	??___ftdiv+2
  5253  0E80  1003               	clrc
  5254  0E81  0D27               	rlf	??___ftdiv+1,w
  5255  0E82  0D28               	rlf	??___ftdiv+2,w
  5256  0E83  00A9               	movwf	??___ftdiv+3
  5257  0E84  0829               	movf	??___ftdiv+3,w
  5258  0E85  00AE               	movwf	___ftdiv@exp
  5259  0E86  08AE               	movf	___ftdiv@exp,f
  5260  0E87  1D03               	skipz
  5261  0E88  2E90               	goto	l1895
  5262  0E89  3000               	movlw	0
  5263  0E8A  00A0               	movwf	?___ftdiv
  5264  0E8B  3000               	movlw	0
  5265  0E8C  00A1               	movwf	?___ftdiv+1
  5266  0E8D  3000               	movlw	0
  5267  0E8E  00A2               	movwf	?___ftdiv+2
  5268  0E8F  0008               	return
  5269  0E90                     l1895:	
  5270  0E90  0820               	movf	___ftdiv@f2,w
  5271  0E91  00A6               	movwf	??___ftdiv
  5272  0E92  0821               	movf	___ftdiv@f2+1,w
  5273  0E93  00A7               	movwf	??___ftdiv+1
  5274  0E94  0822               	movf	___ftdiv@f2+2,w
  5275  0E95  00A8               	movwf	??___ftdiv+2
  5276  0E96  1003               	clrc
  5277  0E97  0D27               	rlf	??___ftdiv+1,w
  5278  0E98  0D28               	rlf	??___ftdiv+2,w
  5279  0E99  00A9               	movwf	??___ftdiv+3
  5280  0E9A  0829               	movf	??___ftdiv+3,w
  5281  0E9B  00AF               	movwf	___ftdiv@sign
  5282  0E9C  08AF               	movf	___ftdiv@sign,f
  5283  0E9D  1D03               	skipz
  5284  0E9E  2EA6               	goto	l1901
  5285  0E9F  3000               	movlw	0
  5286  0EA0  00A0               	movwf	?___ftdiv
  5287  0EA1  3000               	movlw	0
  5288  0EA2  00A1               	movwf	?___ftdiv+1
  5289  0EA3  3000               	movlw	0
  5290  0EA4  00A2               	movwf	?___ftdiv+2
  5291  0EA5  0008               	return
  5292  0EA6                     l1901:	
  5293  0EA6  3000               	movlw	0
  5294  0EA7  00AB               	movwf	___ftdiv@f3
  5295  0EA8  3000               	movlw	0
  5296  0EA9  00AC               	movwf	___ftdiv@f3+1
  5297  0EAA  3000               	movlw	0
  5298  0EAB  00AD               	movwf	___ftdiv@f3+2
  5299  0EAC  3089               	movlw	137
  5300  0EAD  072F               	addwf	___ftdiv@sign,w
  5301  0EAE  00A6               	movwf	??___ftdiv
  5302  0EAF  0826               	movf	??___ftdiv,w
  5303  0EB0  02AE               	subwf	___ftdiv@exp,f
  5304  0EB1  0823               	movf	___ftdiv@f1,w
  5305  0EB2  00A6               	movwf	??___ftdiv
  5306  0EB3  0824               	movf	___ftdiv@f1+1,w
  5307  0EB4  00A7               	movwf	??___ftdiv+1
  5308  0EB5  0825               	movf	___ftdiv@f1+2,w
  5309  0EB6  00A8               	movwf	??___ftdiv+2
  5310  0EB7  3010               	movlw	16
  5311  0EB8                     u2185:	
  5312  0EB8  1003               	clrc
  5313  0EB9  0CA8               	rrf	??___ftdiv+2,f
  5314  0EBA  0CA7               	rrf	??___ftdiv+1,f
  5315  0EBB  0CA6               	rrf	??___ftdiv,f
  5316  0EBC  3EFF               	addlw	-1
  5317  0EBD  1D03               	skipz
  5318  0EBE  2EB8               	goto	u2185
  5319  0EBF  0826               	movf	??___ftdiv,w
  5320  0EC0  00A9               	movwf	??___ftdiv+3
  5321  0EC1  0829               	movf	??___ftdiv+3,w
  5322  0EC2  00AF               	movwf	___ftdiv@sign
  5323  0EC3  0820               	movf	___ftdiv@f2,w
  5324  0EC4  00A6               	movwf	??___ftdiv
  5325  0EC5  0821               	movf	___ftdiv@f2+1,w
  5326  0EC6  00A7               	movwf	??___ftdiv+1
  5327  0EC7  0822               	movf	___ftdiv@f2+2,w
  5328  0EC8  00A8               	movwf	??___ftdiv+2
  5329  0EC9  3010               	movlw	16
  5330  0ECA                     u2195:	
  5331  0ECA  1003               	clrc
  5332  0ECB  0CA8               	rrf	??___ftdiv+2,f
  5333  0ECC  0CA7               	rrf	??___ftdiv+1,f
  5334  0ECD  0CA6               	rrf	??___ftdiv,f
  5335  0ECE  3EFF               	addlw	-1
  5336  0ECF  1D03               	skipz
  5337  0ED0  2ECA               	goto	u2195
  5338  0ED1  0826               	movf	??___ftdiv,w
  5339  0ED2  00A9               	movwf	??___ftdiv+3
  5340  0ED3  0829               	movf	??___ftdiv+3,w
  5341  0ED4  06AF               	xorwf	___ftdiv@sign,f
  5342  0ED5  3080               	movlw	128
  5343  0ED6  00A6               	movwf	??___ftdiv
  5344  0ED7  0826               	movf	??___ftdiv,w
  5345  0ED8  05AF               	andwf	___ftdiv@sign,f
  5346  0ED9  17A4               	bsf	___ftdiv@f1+1,7
  5347  0EDA  30FF               	movlw	255
  5348  0EDB  05A3               	andwf	___ftdiv@f1,f
  5349  0EDC  30FF               	movlw	255
  5350  0EDD  05A4               	andwf	___ftdiv@f1+1,f
  5351  0EDE  3000               	movlw	0
  5352  0EDF  05A5               	andwf	___ftdiv@f1+2,f
  5353  0EE0  17A1               	bsf	___ftdiv@f2+1,7
  5354  0EE1  30FF               	movlw	255
  5355  0EE2  05A0               	andwf	___ftdiv@f2,f
  5356  0EE3  30FF               	movlw	255
  5357  0EE4  05A1               	andwf	___ftdiv@f2+1,f
  5358  0EE5  3000               	movlw	0
  5359  0EE6  05A2               	andwf	___ftdiv@f2+2,f
  5360  0EE7  3018               	movlw	24
  5361  0EE8  00A6               	movwf	??___ftdiv
  5362  0EE9  0826               	movf	??___ftdiv,w
  5363  0EEA  00AA               	movwf	___ftdiv@cntr
  5364  0EEB                     l1915:	
  5365  0EEB  3001               	movlw	1
  5366  0EEC                     u2205:	
  5367  0EEC  1003               	clrc
  5368  0EED  0DAB               	rlf	___ftdiv@f3,f
  5369  0EEE  0DAC               	rlf	___ftdiv@f3+1,f
  5370  0EEF  0DAD               	rlf	___ftdiv@f3+2,f
  5371  0EF0  3EFF               	addlw	-1
  5372  0EF1  1D03               	skipz
  5373  0EF2  2EEC               	goto	u2205
  5374  0EF3  0822               	movf	___ftdiv@f2+2,w
  5375  0EF4  0225               	subwf	___ftdiv@f1+2,w
  5376  0EF5  1D03               	skipz
  5377  0EF6  2EFD               	goto	u2215
  5378  0EF7  0821               	movf	___ftdiv@f2+1,w
  5379  0EF8  0224               	subwf	___ftdiv@f1+1,w
  5380  0EF9  1D03               	skipz
  5381  0EFA  2EFD               	goto	u2215
  5382  0EFB  0820               	movf	___ftdiv@f2,w
  5383  0EFC  0223               	subwf	___ftdiv@f1,w
  5384  0EFD                     u2215:	
  5385  0EFD  1C03               	skipc
  5386  0EFE  2F0A               	goto	l1923
  5387  0EFF  0820               	movf	___ftdiv@f2,w
  5388  0F00  02A3               	subwf	___ftdiv@f1,f
  5389  0F01  0821               	movf	___ftdiv@f2+1,w
  5390  0F02  1C03               	skipc
  5391  0F03  0F21               	incfsz	___ftdiv@f2+1,w
  5392  0F04  02A4               	subwf	___ftdiv@f1+1,f
  5393  0F05  0822               	movf	___ftdiv@f2+2,w
  5394  0F06  1C03               	skipc
  5395  0F07  0A22               	incf	___ftdiv@f2+2,w
  5396  0F08  02A5               	subwf	___ftdiv@f1+2,f
  5397  0F09  142B               	bsf	___ftdiv@f3,0
  5398  0F0A                     l1923:	
  5399  0F0A  3001               	movlw	1
  5400  0F0B                     u2225:	
  5401  0F0B  1003               	clrc
  5402  0F0C  0DA3               	rlf	___ftdiv@f1,f
  5403  0F0D  0DA4               	rlf	___ftdiv@f1+1,f
  5404  0F0E  0DA5               	rlf	___ftdiv@f1+2,f
  5405  0F0F  3EFF               	addlw	-1
  5406  0F10  1D03               	skipz
  5407  0F11  2F0B               	goto	u2225
  5408  0F12  3001               	movlw	1
  5409  0F13  02AA               	subwf	___ftdiv@cntr,f
  5410  0F14  1D03               	btfss	3,2
  5411  0F15  2EEB               	goto	l1915
  5412  0F16  082B               	movf	___ftdiv@f3,w
  5413  0F17  00F0               	movwf	___ftpack@arg
  5414  0F18  082C               	movf	___ftdiv@f3+1,w
  5415  0F19  00F1               	movwf	___ftpack@arg+1
  5416  0F1A  082D               	movf	___ftdiv@f3+2,w
  5417  0F1B  00F2               	movwf	___ftpack@arg+2
  5418  0F1C  082E               	movf	___ftdiv@exp,w
  5419  0F1D  00A6               	movwf	??___ftdiv
  5420  0F1E  0826               	movf	??___ftdiv,w
  5421  0F1F  00F3               	movwf	___ftpack@exp
  5422  0F20  082F               	movf	___ftdiv@sign,w
  5423  0F21  00A7               	movwf	??___ftdiv+1
  5424  0F22  0827               	movf	??___ftdiv+1,w
  5425  0F23  00F4               	movwf	___ftpack@sign
  5426  0F24  120A  158A  2331   	fcall	___ftpack
  5427  0F27  0870               	movf	?___ftpack,w
  5428  0F28  1283               	bcf	3,5	;RP0=0, select bank0
  5429  0F29  1303               	bcf	3,6	;RP1=0, select bank0
  5430  0F2A  00A0               	movwf	?___ftdiv
  5431  0F2B  0871               	movf	?___ftpack+1,w
  5432  0F2C  00A1               	movwf	?___ftdiv+1
  5433  0F2D  0872               	movf	?___ftpack+2,w
  5434  0F2E  00A2               	movwf	?___ftdiv+2
  5435  0F2F  0008               	return
  5436  0F30                     __end_of___ftdiv:	
  5437                           
  5438                           	psect	text23
  5439  0003                     __ptext23:	
  5440 ;; *************** function ___awtoft *****************
  5441 ;; Defined at:
  5442 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\awtoft.c"
  5443 ;; Parameters:    Size  Location     Type
  5444 ;;  c               2    8[COMMON] int 
  5445 ;; Auto vars:     Size  Location     Type
  5446 ;;  sign            1   13[COMMON] unsigned char 
  5447 ;; Return value:  Size  Location     Type
  5448 ;;                  3    8[COMMON] float 
  5449 ;; Registers used:
  5450 ;;		wreg, status,2, status,0, pclath, cstack
  5451 ;; Tracked objects:
  5452 ;;		On entry : 0/0
  5453 ;;		On exit  : 0/0
  5454 ;;		Unchanged: 0/0
  5455 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5456 ;;      Params:         3       0       0       0       0
  5457 ;;      Locals:         1       0       0       0       0
  5458 ;;      Temps:          2       0       0       0       0
  5459 ;;      Totals:         6       0       0       0       0
  5460 ;;Total ram usage:        6 bytes
  5461 ;; Hardware stack levels used:    1
  5462 ;; Hardware stack levels required when called:    1
  5463 ;; This function calls:
  5464 ;;		___ftpack
  5465 ;; This function is called by:
  5466 ;;		_main
  5467 ;;		_exp
  5468 ;;		_log
  5469 ;; This function uses a non-reentrant model
  5470 ;;
  5471                           
  5472                           
  5473                           ;psect for function ___awtoft
  5474  0003                     ___awtoft:	
  5475                           
  5476                           ;incstack = 0
  5477                           ; Regs used in ___awtoft: [wreg+status,2+status,0+pclath+cstack]
  5478  0003  01FD               	clrf	___awtoft@sign
  5479  0004  1FF9               	btfss	___awtoft@c+1,7
  5480  0005  280D               	goto	l1885
  5481  0006  09F8               	comf	___awtoft@c,f
  5482  0007  09F9               	comf	___awtoft@c+1,f
  5483  0008  0AF8               	incf	___awtoft@c,f
  5484  0009  1903               	skipnz
  5485  000A  0AF9               	incf	___awtoft@c+1,f
  5486  000B  01FD               	clrf	___awtoft@sign
  5487  000C  0AFD               	incf	___awtoft@sign,f
  5488  000D                     l1885:	
  5489  000D  0878               	movf	___awtoft@c,w
  5490  000E  00F0               	movwf	___ftpack@arg
  5491  000F  0879               	movf	___awtoft@c+1,w
  5492  0010  00F1               	movwf	___ftpack@arg+1
  5493  0011  01F2               	clrf	___ftpack@arg+2
  5494  0012  308E               	movlw	142
  5495  0013  00FB               	movwf	??___awtoft
  5496  0014  087B               	movf	??___awtoft,w
  5497  0015  00F3               	movwf	___ftpack@exp
  5498  0016  087D               	movf	___awtoft@sign,w
  5499  0017  00FC               	movwf	??___awtoft+1
  5500  0018  087C               	movf	??___awtoft+1,w
  5501  0019  00F4               	movwf	___ftpack@sign
  5502  001A  120A  158A  2331   	fcall	___ftpack
  5503  001D  0870               	movf	?___ftpack,w
  5504  001E  00F8               	movwf	?___awtoft
  5505  001F  0871               	movf	?___ftpack+1,w
  5506  0020  00F9               	movwf	?___awtoft+1
  5507  0021  0872               	movf	?___ftpack+2,w
  5508  0022  00FA               	movwf	?___awtoft+2
  5509  0023  0008               	return
  5510  0024                     __end_of___awtoft:	
  5511                           
  5512                           	psect	text24
  5513  09B5                     __ptext24:	
  5514 ;; *************** function ___lltoft *****************
  5515 ;; Defined at:
  5516 ;;		line 35 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\lltoft.c"
  5517 ;; Parameters:    Size  Location     Type
  5518 ;;  c               4    8[COMMON] unsigned long 
  5519 ;; Auto vars:     Size  Location     Type
  5520 ;;  exp             1   13[COMMON] unsigned char 
  5521 ;; Return value:  Size  Location     Type
  5522 ;;                  3    8[COMMON] float 
  5523 ;; Registers used:
  5524 ;;		wreg, status,2, status,0, pclath, cstack
  5525 ;; Tracked objects:
  5526 ;;		On entry : 0/0
  5527 ;;		On exit  : 0/0
  5528 ;;		Unchanged: 0/0
  5529 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5530 ;;      Params:         4       0       0       0       0
  5531 ;;      Locals:         1       0       0       0       0
  5532 ;;      Temps:          1       0       0       0       0
  5533 ;;      Totals:         6       0       0       0       0
  5534 ;;Total ram usage:        6 bytes
  5535 ;; Hardware stack levels used:    1
  5536 ;; Hardware stack levels required when called:    1
  5537 ;; This function calls:
  5538 ;;		___ftpack
  5539 ;; This function is called by:
  5540 ;;		_pow
  5541 ;; This function uses a non-reentrant model
  5542 ;;
  5543                           
  5544                           
  5545                           ;psect for function ___lltoft
  5546  09B5                     ___lltoft:	
  5547                           
  5548                           ;incstack = 0
  5549                           ; Regs used in ___lltoft: [wreg+status,2+status,0+pclath+cstack]
  5550  09B5  308E               	movlw	142
  5551  09B6  00FC               	movwf	??___lltoft
  5552  09B7  087C               	movf	??___lltoft,w
  5553  09B8  00FD               	movwf	___lltoft@exp
  5554  09B9                     l2161:	
  5555  09B9  30FF               	movlw	255
  5556  09BA  057B               	andwf	___lltoft@c+3,w
  5557  09BB  1903               	btfsc	3,2
  5558  09BC  29CB               	goto	l2163
  5559  09BD  3001               	movlw	1
  5560  09BE                     u2595:	
  5561  09BE  1003               	clrc
  5562  09BF  0CFB               	rrf	___lltoft@c+3,f
  5563  09C0  0CFA               	rrf	___lltoft@c+2,f
  5564  09C1  0CF9               	rrf	___lltoft@c+1,f
  5565  09C2  0CF8               	rrf	___lltoft@c,f
  5566  09C3  3EFF               	addlw	-1
  5567  09C4  1D03               	skipz
  5568  09C5  29BE               	goto	u2595
  5569  09C6  3001               	movlw	1
  5570  09C7  00FC               	movwf	??___lltoft
  5571  09C8  087C               	movf	??___lltoft,w
  5572  09C9  07FD               	addwf	___lltoft@exp,f
  5573  09CA  29B9               	goto	l2161
  5574  09CB                     l2163:	
  5575  09CB  0878               	movf	___lltoft@c,w
  5576  09CC  00F0               	movwf	___ftpack@arg
  5577  09CD  0879               	movf	___lltoft@c+1,w
  5578  09CE  00F1               	movwf	___ftpack@arg+1
  5579  09CF  087A               	movf	___lltoft@c+2,w
  5580  09D0  00F2               	movwf	___ftpack@arg+2
  5581  09D1  087D               	movf	___lltoft@exp,w
  5582  09D2  00FC               	movwf	??___lltoft
  5583  09D3  087C               	movf	??___lltoft,w
  5584  09D4  00F3               	movwf	___ftpack@exp
  5585  09D5  01F4               	clrf	___ftpack@sign
  5586  09D6  120A  158A  2331   	fcall	___ftpack
  5587  09D9  0870               	movf	?___ftpack,w
  5588  09DA  00F8               	movwf	?___lltoft
  5589  09DB  0871               	movf	?___ftpack+1,w
  5590  09DC  00F9               	movwf	?___lltoft+1
  5591  09DD  0872               	movf	?___ftpack+2,w
  5592  09DE  00FA               	movwf	?___lltoft+2
  5593  09DF  0008               	return
  5594  09E0                     __end_of___lltoft:	
  5595                           
  5596                           	psect	text25
  5597  0B31                     __ptext25:	
  5598 ;; *************** function ___ftpack *****************
  5599 ;; Defined at:
  5600 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\float.c"
  5601 ;; Parameters:    Size  Location     Type
  5602 ;;  arg             3    0[COMMON] unsigned um
  5603 ;;  exp             1    3[COMMON] unsigned char 
  5604 ;;  sign            1    4[COMMON] unsigned char 
  5605 ;; Auto vars:     Size  Location     Type
  5606 ;;		None
  5607 ;; Return value:  Size  Location     Type
  5608 ;;                  3    0[COMMON] float 
  5609 ;; Registers used:
  5610 ;;		wreg, status,2, status,0
  5611 ;; Tracked objects:
  5612 ;;		On entry : 0/0
  5613 ;;		On exit  : 0/0
  5614 ;;		Unchanged: 0/0
  5615 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5616 ;;      Params:         5       0       0       0       0
  5617 ;;      Locals:         0       0       0       0       0
  5618 ;;      Temps:          3       0       0       0       0
  5619 ;;      Totals:         8       0       0       0       0
  5620 ;;Total ram usage:        8 bytes
  5621 ;; Hardware stack levels used:    1
  5622 ;; This function calls:
  5623 ;;		Nothing
  5624 ;; This function is called by:
  5625 ;;		___altoft
  5626 ;;		___awtoft
  5627 ;;		___ftadd
  5628 ;;		___ftdiv
  5629 ;;		___ftmul
  5630 ;;		___lltoft
  5631 ;; This function uses a non-reentrant model
  5632 ;;
  5633                           
  5634                           
  5635                           ;psect for function ___ftpack
  5636  0B31                     ___ftpack:	
  5637                           
  5638                           ;incstack = 0
  5639                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  5640  0B31  0873               	movf	___ftpack@exp,w
  5641  0B32  1903               	btfsc	3,2
  5642  0B33  2B39               	goto	l1589
  5643  0B34  0872               	movf	___ftpack@arg+2,w
  5644  0B35  0471               	iorwf	___ftpack@arg+1,w
  5645  0B36  0470               	iorwf	___ftpack@arg,w
  5646  0B37  1D03               	skipz
  5647  0B38  2B4C               	goto	l1595
  5648  0B39                     l1589:	
  5649  0B39  3000               	movlw	0
  5650  0B3A  00F0               	movwf	?___ftpack
  5651  0B3B  3000               	movlw	0
  5652  0B3C  00F1               	movwf	?___ftpack+1
  5653  0B3D  3000               	movlw	0
  5654  0B3E  00F2               	movwf	?___ftpack+2
  5655  0B3F  0008               	return
  5656  0B40                     l1593:	
  5657  0B40  3001               	movlw	1
  5658  0B41  00F5               	movwf	??___ftpack
  5659  0B42  0875               	movf	??___ftpack,w
  5660  0B43  07F3               	addwf	___ftpack@exp,f
  5661  0B44  3001               	movlw	1
  5662  0B45                     u1445:	
  5663  0B45  1003               	clrc
  5664  0B46  0CF2               	rrf	___ftpack@arg+2,f
  5665  0B47  0CF1               	rrf	___ftpack@arg+1,f
  5666  0B48  0CF0               	rrf	___ftpack@arg,f
  5667  0B49  3EFF               	addlw	-1
  5668  0B4A  1D03               	skipz
  5669  0B4B  2B45               	goto	u1445
  5670  0B4C                     l1595:	
  5671  0B4C  30FE               	movlw	254
  5672  0B4D  0572               	andwf	___ftpack@arg+2,w
  5673  0B4E  1903               	btfsc	3,2
  5674  0B4F  2B67               	goto	l398
  5675  0B50  2B40               	goto	l1593
  5676  0B51                     l1597:	
  5677  0B51  3001               	movlw	1
  5678  0B52  00F5               	movwf	??___ftpack
  5679  0B53  0875               	movf	??___ftpack,w
  5680  0B54  07F3               	addwf	___ftpack@exp,f
  5681  0B55  3001               	movlw	1
  5682  0B56  07F0               	addwf	___ftpack@arg,f
  5683  0B57  3000               	movlw	0
  5684  0B58  1803               	skipnc
  5685  0B59  3001               	movlw	1
  5686  0B5A  07F1               	addwf	___ftpack@arg+1,f
  5687  0B5B  3000               	movlw	0
  5688  0B5C  1803               	skipnc
  5689  0B5D  3001               	movlw	1
  5690  0B5E  07F2               	addwf	___ftpack@arg+2,f
  5691  0B5F  3001               	movlw	1
  5692  0B60                     u1465:	
  5693  0B60  1003               	clrc
  5694  0B61  0CF2               	rrf	___ftpack@arg+2,f
  5695  0B62  0CF1               	rrf	___ftpack@arg+1,f
  5696  0B63  0CF0               	rrf	___ftpack@arg,f
  5697  0B64  3EFF               	addlw	-1
  5698  0B65  1D03               	skipz
  5699  0B66  2B60               	goto	u1465
  5700  0B67                     l398:	
  5701  0B67  30FF               	movlw	255
  5702  0B68  0572               	andwf	___ftpack@arg+2,w
  5703  0B69  1903               	btfsc	3,2
  5704  0B6A  2B76               	goto	l1605
  5705  0B6B  2B51               	goto	l1597
  5706  0B6C                     l1603:	
  5707  0B6C  3001               	movlw	1
  5708  0B6D  02F3               	subwf	___ftpack@exp,f
  5709  0B6E  3001               	movlw	1
  5710  0B6F                     u1485:	
  5711  0B6F  1003               	clrc
  5712  0B70  0DF0               	rlf	___ftpack@arg,f
  5713  0B71  0DF1               	rlf	___ftpack@arg+1,f
  5714  0B72  0DF2               	rlf	___ftpack@arg+2,f
  5715  0B73  3EFF               	addlw	-1
  5716  0B74  1D03               	skipz
  5717  0B75  2B6F               	goto	u1485
  5718  0B76                     l1605:	
  5719  0B76  1FF1               	btfss	___ftpack@arg+1,7
  5720  0B77  2B6C               	goto	l1603
  5721  0B78  1873               	btfsc	___ftpack@exp,0
  5722  0B79  2B80               	goto	l404
  5723  0B7A  30FF               	movlw	255
  5724  0B7B  05F0               	andwf	___ftpack@arg,f
  5725  0B7C  307F               	movlw	127
  5726  0B7D  05F1               	andwf	___ftpack@arg+1,f
  5727  0B7E  30FF               	movlw	255
  5728  0B7F  05F2               	andwf	___ftpack@arg+2,f
  5729  0B80                     l404:	
  5730  0B80  1003               	clrc
  5731  0B81  0CF3               	rrf	___ftpack@exp,f
  5732  0B82  0873               	movf	___ftpack@exp,w
  5733  0B83  00F5               	movwf	??___ftpack
  5734  0B84  01F6               	clrf	??___ftpack+1
  5735  0B85  01F7               	clrf	??___ftpack+2
  5736  0B86  3010               	movlw	16
  5737  0B87                     u1515:	
  5738  0B87  1003               	clrc
  5739  0B88  0DF5               	rlf	??___ftpack,f
  5740  0B89  0DF6               	rlf	??___ftpack+1,f
  5741  0B8A  0DF7               	rlf	??___ftpack+2,f
  5742  0B8B  3EFF               	addlw	-1
  5743  0B8C  1D03               	skipz
  5744  0B8D  2B87               	goto	u1515
  5745  0B8E  0875               	movf	??___ftpack,w
  5746  0B8F  04F0               	iorwf	___ftpack@arg,f
  5747  0B90  0876               	movf	??___ftpack+1,w
  5748  0B91  04F1               	iorwf	___ftpack@arg+1,f
  5749  0B92  0877               	movf	??___ftpack+2,w
  5750  0B93  04F2               	iorwf	___ftpack@arg+2,f
  5751  0B94  0874               	movf	___ftpack@sign,w
  5752  0B95  1903               	btfsc	3,2
  5753  0B96  0008               	return
  5754  0B97  17F2               	bsf	___ftpack@arg+2,7
  5755  0B98  0008               	return
  5756  0B99                     __end_of___ftpack:	
  5757                           
  5758                           	psect	text26
  5759  08C1                     __ptext26:	
  5760 ;; *************** function _init_I2C_Master *****************
  5761 ;; Defined at:
  5762 ;;		line 235 in file "C:\Users\notjo\OneDrive\Desktop\USC\USC-Year3-Sem2\3201-EmbeddedSystems\Labs\LE_07\LE7-3\LE7-3.c"
  5763 ;; Parameters:    Size  Location     Type
  5764 ;;		None
  5765 ;; Auto vars:     Size  Location     Type
  5766 ;;		None
  5767 ;; Return value:  Size  Location     Type
  5768 ;;		None               void
  5769 ;; Registers used:
  5770 ;;		wreg, status,2
  5771 ;; Tracked objects:
  5772 ;;		On entry : 0/0
  5773 ;;		On exit  : 0/0
  5774 ;;		Unchanged: 0/0
  5775 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5776 ;;      Params:         0       0       0       0       0
  5777 ;;      Locals:         0       0       0       0       0
  5778 ;;      Temps:          0       0       0       0       0
  5779 ;;      Totals:         0       0       0       0       0
  5780 ;;Total ram usage:        0 bytes
  5781 ;; Hardware stack levels used:    1
  5782 ;; This function calls:
  5783 ;;		Nothing
  5784 ;; This function is called by:
  5785 ;;		_main
  5786 ;; This function uses a non-reentrant model
  5787 ;;
  5788                           
  5789                           
  5790                           ;psect for function _init_I2C_Master
  5791  08C1                     _init_I2C_Master:	
  5792                           
  5793                           ;LE7-3.c: 237: TRISC3 = 1;
  5794                           
  5795                           ;incstack = 0
  5796                           ; Regs used in _init_I2C_Master: [wreg+status,2]
  5797  08C1  1683               	bsf	3,5	;RP0=1, select bank1
  5798  08C2  1303               	bcf	3,6	;RP1=0, select bank1
  5799  08C3  1587               	bsf	7,3	;volatile
  5800                           
  5801                           ;LE7-3.c: 238: TRISC4 = 1;
  5802  08C4  1607               	bsf	7,4	;volatile
  5803                           
  5804                           ;LE7-3.c: 239: SSPCON = 0x28;
  5805  08C5  3028               	movlw	40
  5806  08C6  1283               	bcf	3,5	;RP0=0, select bank0
  5807  08C7  1303               	bcf	3,6	;RP1=0, select bank0
  5808  08C8  0094               	movwf	20	;volatile
  5809                           
  5810                           ;LE7-3.c: 240: SSPCON2 = 0x00;
  5811  08C9  1683               	bsf	3,5	;RP0=1, select bank1
  5812  08CA  1303               	bcf	3,6	;RP1=0, select bank1
  5813  08CB  0191               	clrf	17	;volatile
  5814                           
  5815                           ;LE7-3.c: 242: SSPSTAT = 0x00;
  5816  08CC  0194               	clrf	20	;volatile
  5817                           
  5818                           ;LE7-3.c: 243: SSPADD = 0x09;
  5819  08CD  3009               	movlw	9
  5820  08CE  0093               	movwf	19	;volatile
  5821  08CF  0008               	return
  5822  08D0                     __end_of_init_I2C_Master:	
  5823                           
  5824                           	psect	text27
  5825  08FD                     __ptext27:	
  5826 ;; *************** function _initLCD *****************
  5827 ;; Defined at:
  5828 ;;		line 173 in file "C:\Users\notjo\OneDrive\Desktop\USC\USC-Year3-Sem2\3201-EmbeddedSystems\Labs\LE_07\LE7-3\LE7-3.c"
  5829 ;; Parameters:    Size  Location     Type
  5830 ;;		None
  5831 ;; Auto vars:     Size  Location     Type
  5832 ;;		None
  5833 ;; Return value:  Size  Location     Type
  5834 ;;		None               void
  5835 ;; Registers used:
  5836 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  5837 ;; Tracked objects:
  5838 ;;		On entry : 0/0
  5839 ;;		On exit  : 0/0
  5840 ;;		Unchanged: 0/0
  5841 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5842 ;;      Params:         0       0       0       0       0
  5843 ;;      Locals:         0       0       0       0       0
  5844 ;;      Temps:          0       0       0       0       0
  5845 ;;      Totals:         0       0       0       0       0
  5846 ;;Total ram usage:        0 bytes
  5847 ;; Hardware stack levels used:    1
  5848 ;; Hardware stack levels required when called:    1
  5849 ;; This function calls:
  5850 ;;		_instCtrl
  5851 ;; This function is called by:
  5852 ;;		_main
  5853 ;; This function uses a non-reentrant model
  5854 ;;
  5855                           
  5856                           
  5857                           ;psect for function _initLCD
  5858  08FD                     _initLCD:	
  5859                           
  5860                           ;LE7-3.c: 175: instCtrl(0x38);
  5861                           
  5862                           ;incstack = 0
  5863                           ; Regs used in _initLCD: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  5864  08FD  3038               	movlw	56
  5865  08FE  120A  158A  2163  120A  158A  	fcall	_instCtrl
  5866                           
  5867                           ;LE7-3.c: 176: instCtrl(0x0C);
  5868  0903  300C               	movlw	12
  5869  0904  120A  158A  2163  120A  158A  	fcall	_instCtrl
  5870                           
  5871                           ;LE7-3.c: 177: instCtrl(0x01);
  5872  0909  3001               	movlw	1
  5873  090A  120A  158A  2163  120A  158A  	fcall	_instCtrl
  5874                           
  5875                           ;LE7-3.c: 178: instCtrl(0x06);
  5876  090F  3006               	movlw	6
  5877  0910  120A  158A  2163  120A  158A  	fcall	_instCtrl
  5878                           
  5879                           ;LE7-3.c: 179: instCtrl(0x80);
  5880  0915  3080               	movlw	128
  5881  0916  120A  158A  2163   	fcall	_instCtrl
  5882  0919  0008               	return
  5883  091A                     __end_of_initLCD:	
  5884                           
  5885                           	psect	text28
  5886  0963                     __ptext28:	
  5887 ;; *************** function _instCtrl *****************
  5888 ;; Defined at:
  5889 ;;		line 203 in file "C:\Users\notjo\OneDrive\Desktop\USC\USC-Year3-Sem2\3201-EmbeddedSystems\Labs\LE_07\LE7-3\LE7-3.c"
  5890 ;; Parameters:    Size  Location     Type
  5891 ;;  inst            1    wreg     unsigned char 
  5892 ;; Auto vars:     Size  Location     Type
  5893 ;;  inst            1    0[COMMON] unsigned char 
  5894 ;;  i               2    1[COMMON] int 
  5895 ;; Return value:  Size  Location     Type
  5896 ;;		None               void
  5897 ;; Registers used:
  5898 ;;		wreg, status,2, btemp+1
  5899 ;; Tracked objects:
  5900 ;;		On entry : 0/0
  5901 ;;		On exit  : 0/0
  5902 ;;		Unchanged: 0/0
  5903 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5904 ;;      Params:         0       0       0       0       0
  5905 ;;      Locals:         3       0       0       0       0
  5906 ;;      Temps:          0       0       0       0       0
  5907 ;;      Totals:         3       0       0       0       0
  5908 ;;Total ram usage:        3 bytes
  5909 ;; Hardware stack levels used:    1
  5910 ;; This function calls:
  5911 ;;		Nothing
  5912 ;; This function is called by:
  5913 ;;		_updateDisplay
  5914 ;;		_initLCD
  5915 ;; This function uses a non-reentrant model
  5916 ;;
  5917                           
  5918                           
  5919                           ;psect for function _instCtrl
  5920  0963                     _instCtrl:	
  5921                           
  5922                           ;incstack = 0
  5923                           ; Regs used in _instCtrl: [wreg+status,2+btemp+1]
  5924                           ;instCtrl@inst stored from wreg
  5925  0963  00F0               	movwf	instCtrl@inst
  5926                           
  5927                           ;LE7-3.c: 205: RD0 = 0;
  5928  0964  1283               	bcf	3,5	;RP0=0, select bank0
  5929  0965  1303               	bcf	3,6	;RP1=0, select bank0
  5930  0966  1008               	bcf	8,0	;volatile
  5931                           
  5932                           ;LE7-3.c: 206: PORTB = inst;
  5933  0967  0870               	movf	instCtrl@inst,w
  5934  0968  0086               	movwf	6	;volatile
  5935                           
  5936                           ;LE7-3.c: 207: RD2 = 1;
  5937  0969  1508               	bsf	8,2	;volatile
  5938                           
  5939                           ;LE7-3.c: 208: for(int i = 0; i < 1000; i++);
  5940  096A  01F1               	clrf	instCtrl@i
  5941  096B  01F2               	clrf	instCtrl@i+1
  5942  096C  0872               	movf	instCtrl@i+1,w
  5943  096D  3A80               	xorlw	128
  5944  096E  00FF               	movwf	127
  5945  096F  3083               	movlw	131
  5946  0970  027F               	subwf	127,w
  5947  0971  1D03               	skipz
  5948  0972  2975               	goto	u2465
  5949  0973  30E8               	movlw	232
  5950  0974  0271               	subwf	instCtrl@i,w
  5951  0975                     u2465:	
  5952  0975  1803               	btfsc	3,0
  5953  0976  2988               	goto	l94
  5954  0977                     l2081:	
  5955  0977  3001               	movlw	1
  5956  0978  07F1               	addwf	instCtrl@i,f
  5957  0979  1803               	skipnc
  5958  097A  0AF2               	incf	instCtrl@i+1,f
  5959  097B  3000               	movlw	0
  5960  097C  07F2               	addwf	instCtrl@i+1,f
  5961  097D  0872               	movf	instCtrl@i+1,w
  5962  097E  3A80               	xorlw	128
  5963  097F  00FF               	movwf	127
  5964  0980  3083               	movlw	131
  5965  0981  027F               	subwf	127,w
  5966  0982  1D03               	skipz
  5967  0983  2986               	goto	u2475
  5968  0984  30E8               	movlw	232
  5969  0985  0271               	subwf	instCtrl@i,w
  5970  0986                     u2475:	
  5971  0986  1C03               	skipc
  5972  0987  2977               	goto	l2081
  5973  0988                     l94:	
  5974                           
  5975                           ;LE7-3.c: 209: RD2 = 0;
  5976  0988  1283               	bcf	3,5	;RP0=0, select bank0
  5977  0989  1303               	bcf	3,6	;RP1=0, select bank0
  5978  098A  1108               	bcf	8,2	;volatile
  5979  098B  0008               	return
  5980  098C                     __end_of_instCtrl:	
  5981                           
  5982                           	psect	text29
  5983  08A1                     __ptext29:	
  5984 ;; *************** function _I2C_Stop *****************
  5985 ;; Defined at:
  5986 ;;		line 259 in file "C:\Users\notjo\OneDrive\Desktop\USC\USC-Year3-Sem2\3201-EmbeddedSystems\Labs\LE_07\LE7-3\LE7-3.c"
  5987 ;; Parameters:    Size  Location     Type
  5988 ;;		None
  5989 ;; Auto vars:     Size  Location     Type
  5990 ;;		None
  5991 ;; Return value:  Size  Location     Type
  5992 ;;		None               void
  5993 ;; Registers used:
  5994 ;;		wreg, status,2, status,0, pclath, cstack
  5995 ;; Tracked objects:
  5996 ;;		On entry : 0/0
  5997 ;;		On exit  : 0/0
  5998 ;;		Unchanged: 0/0
  5999 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6000 ;;      Params:         0       0       0       0       0
  6001 ;;      Locals:         0       0       0       0       0
  6002 ;;      Temps:          0       0       0       0       0
  6003 ;;      Totals:         0       0       0       0       0
  6004 ;;Total ram usage:        0 bytes
  6005 ;; Hardware stack levels used:    1
  6006 ;; Hardware stack levels required when called:    1
  6007 ;; This function calls:
  6008 ;;		_I2C_Wait
  6009 ;; This function is called by:
  6010 ;;		_main
  6011 ;; This function uses a non-reentrant model
  6012 ;;
  6013                           
  6014                           
  6015                           ;psect for function _I2C_Stop
  6016  08A1                     _I2C_Stop:	
  6017                           
  6018                           ;LE7-3.c: 262: I2C_Wait();
  6019                           
  6020                           ;incstack = 0
  6021                           ; Regs used in _I2C_Stop: [wreg+status,2+status,0+pclath+cstack]
  6022  08A1  120A  158A  20A8   	fcall	_I2C_Wait
  6023                           
  6024                           ;LE7-3.c: 264: PEN = 1;
  6025  08A4  1683               	bsf	3,5	;RP0=1, select bank1
  6026  08A5  1303               	bcf	3,6	;RP1=0, select bank1
  6027  08A6  1511               	bsf	17,2	;volatile
  6028  08A7  0008               	return
  6029  08A8                     __end_of_I2C_Stop:	
  6030                           
  6031                           	psect	text30
  6032  089A                     __ptext30:	
  6033 ;; *************** function _I2C_Start *****************
  6034 ;; Defined at:
  6035 ;;		line 252 in file "C:\Users\notjo\OneDrive\Desktop\USC\USC-Year3-Sem2\3201-EmbeddedSystems\Labs\LE_07\LE7-3\LE7-3.c"
  6036 ;; Parameters:    Size  Location     Type
  6037 ;;		None
  6038 ;; Auto vars:     Size  Location     Type
  6039 ;;		None
  6040 ;; Return value:  Size  Location     Type
  6041 ;;		None               void
  6042 ;; Registers used:
  6043 ;;		wreg, status,2, status,0, pclath, cstack
  6044 ;; Tracked objects:
  6045 ;;		On entry : 0/0
  6046 ;;		On exit  : 0/0
  6047 ;;		Unchanged: 0/0
  6048 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6049 ;;      Params:         0       0       0       0       0
  6050 ;;      Locals:         0       0       0       0       0
  6051 ;;      Temps:          0       0       0       0       0
  6052 ;;      Totals:         0       0       0       0       0
  6053 ;;Total ram usage:        0 bytes
  6054 ;; Hardware stack levels used:    1
  6055 ;; Hardware stack levels required when called:    1
  6056 ;; This function calls:
  6057 ;;		_I2C_Wait
  6058 ;; This function is called by:
  6059 ;;		_main
  6060 ;; This function uses a non-reentrant model
  6061 ;;
  6062                           
  6063                           
  6064                           ;psect for function _I2C_Start
  6065  089A                     _I2C_Start:	
  6066                           
  6067                           ;LE7-3.c: 255: I2C_Wait();
  6068                           
  6069                           ;incstack = 0
  6070                           ; Regs used in _I2C_Start: [wreg+status,2+status,0+pclath+cstack]
  6071  089A  120A  158A  20A8   	fcall	_I2C_Wait
  6072                           
  6073                           ;LE7-3.c: 257: SEN = 1;
  6074  089D  1683               	bsf	3,5	;RP0=1, select bank1
  6075  089E  1303               	bcf	3,6	;RP1=0, select bank1
  6076  089F  1411               	bsf	17,0	;volatile
  6077  08A0  0008               	return
  6078  08A1                     __end_of_I2C_Start:	
  6079                           
  6080                           	psect	text31
  6081  08B8                     __ptext31:	
  6082 ;; *************** function _I2C_Send *****************
  6083 ;; Defined at:
  6084 ;;		line 276 in file "C:\Users\notjo\OneDrive\Desktop\USC\USC-Year3-Sem2\3201-EmbeddedSystems\Labs\LE_07\LE7-3\LE7-3.c"
  6085 ;; Parameters:    Size  Location     Type
  6086 ;;  data            1    wreg     unsigned char 
  6087 ;; Auto vars:     Size  Location     Type
  6088 ;;  data            1    0[COMMON] unsigned char 
  6089 ;; Return value:  Size  Location     Type
  6090 ;;		None               void
  6091 ;; Registers used:
  6092 ;;		wreg, status,2, status,0, pclath, cstack
  6093 ;; Tracked objects:
  6094 ;;		On entry : 0/0
  6095 ;;		On exit  : 0/0
  6096 ;;		Unchanged: 0/0
  6097 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6098 ;;      Params:         0       0       0       0       0
  6099 ;;      Locals:         1       0       0       0       0
  6100 ;;      Temps:          0       0       0       0       0
  6101 ;;      Totals:         1       0       0       0       0
  6102 ;;Total ram usage:        1 bytes
  6103 ;; Hardware stack levels used:    1
  6104 ;; Hardware stack levels required when called:    1
  6105 ;; This function calls:
  6106 ;;		_I2C_Wait
  6107 ;; This function is called by:
  6108 ;;		_main
  6109 ;; This function uses a non-reentrant model
  6110 ;;
  6111                           
  6112                           
  6113                           ;psect for function _I2C_Send
  6114  08B8                     _I2C_Send:	
  6115                           
  6116                           ;incstack = 0
  6117                           ; Regs used in _I2C_Send: [wreg+status,2+status,0+pclath+cstack]
  6118                           ;I2C_Send@data stored from wreg
  6119  08B8  00F0               	movwf	I2C_Send@data
  6120                           
  6121                           ;LE7-3.c: 279: I2C_Wait();
  6122  08B9  120A  158A  20A8   	fcall	_I2C_Wait
  6123                           
  6124                           ;LE7-3.c: 281: SSPBUF = data;
  6125  08BC  0870               	movf	I2C_Send@data,w
  6126  08BD  1283               	bcf	3,5	;RP0=0, select bank0
  6127  08BE  1303               	bcf	3,6	;RP1=0, select bank0
  6128  08BF  0093               	movwf	19	;volatile
  6129  08C0  0008               	return
  6130  08C1                     __end_of_I2C_Send:	
  6131                           
  6132                           	psect	text32
  6133  0893                     __ptext32:	
  6134 ;; *************** function _I2C_RepeatedStart *****************
  6135 ;; Defined at:
  6136 ;;		line 268 in file "C:\Users\notjo\OneDrive\Desktop\USC\USC-Year3-Sem2\3201-EmbeddedSystems\Labs\LE_07\LE7-3\LE7-3.c"
  6137 ;; Parameters:    Size  Location     Type
  6138 ;;		None
  6139 ;; Auto vars:     Size  Location     Type
  6140 ;;		None
  6141 ;; Return value:  Size  Location     Type
  6142 ;;		None               void
  6143 ;; Registers used:
  6144 ;;		wreg, status,2, status,0, pclath, cstack
  6145 ;; Tracked objects:
  6146 ;;		On entry : 0/0
  6147 ;;		On exit  : 0/0
  6148 ;;		Unchanged: 0/0
  6149 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6150 ;;      Params:         0       0       0       0       0
  6151 ;;      Locals:         0       0       0       0       0
  6152 ;;      Temps:          0       0       0       0       0
  6153 ;;      Totals:         0       0       0       0       0
  6154 ;;Total ram usage:        0 bytes
  6155 ;; Hardware stack levels used:    1
  6156 ;; Hardware stack levels required when called:    1
  6157 ;; This function calls:
  6158 ;;		_I2C_Wait
  6159 ;; This function is called by:
  6160 ;;		_main
  6161 ;; This function uses a non-reentrant model
  6162 ;;
  6163                           
  6164                           
  6165                           ;psect for function _I2C_RepeatedStart
  6166  0893                     _I2C_RepeatedStart:	
  6167                           
  6168                           ;LE7-3.c: 271: I2C_Wait();
  6169                           
  6170                           ;incstack = 0
  6171                           ; Regs used in _I2C_RepeatedStart: [wreg+status,2+status,0+pclath+cstack]
  6172  0893  120A  158A  20A8   	fcall	_I2C_Wait
  6173                           
  6174                           ;LE7-3.c: 273: RSEN = 1;
  6175  0896  1683               	bsf	3,5	;RP0=1, select bank1
  6176  0897  1303               	bcf	3,6	;RP1=0, select bank1
  6177  0898  1491               	bsf	17,1	;volatile
  6178  0899  0008               	return
  6179  089A                     __end_of_I2C_RepeatedStart:	
  6180                           
  6181                           	psect	text33
  6182  093D                     __ptext33:	
  6183 ;; *************** function _I2C_Receive *****************
  6184 ;; Defined at:
  6185 ;;		line 284 in file "C:\Users\notjo\OneDrive\Desktop\USC\USC-Year3-Sem2\3201-EmbeddedSystems\Labs\LE_07\LE7-3\LE7-3.c"
  6186 ;; Parameters:    Size  Location     Type
  6187 ;;  ack             1    wreg     unsigned char 
  6188 ;; Auto vars:     Size  Location     Type
  6189 ;;  ack             1    1[COMMON] unsigned char 
  6190 ;;  temp            1    2[COMMON] unsigned char 
  6191 ;; Return value:  Size  Location     Type
  6192 ;;                  1    wreg      unsigned char 
  6193 ;; Registers used:
  6194 ;;		wreg, status,2, status,0, pclath, cstack
  6195 ;; Tracked objects:
  6196 ;;		On entry : 0/0
  6197 ;;		On exit  : 0/0
  6198 ;;		Unchanged: 0/0
  6199 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6200 ;;      Params:         0       0       0       0       0
  6201 ;;      Locals:         2       0       0       0       0
  6202 ;;      Temps:          1       0       0       0       0
  6203 ;;      Totals:         3       0       0       0       0
  6204 ;;Total ram usage:        3 bytes
  6205 ;; Hardware stack levels used:    1
  6206 ;; Hardware stack levels required when called:    1
  6207 ;; This function calls:
  6208 ;;		_I2C_Wait
  6209 ;; This function is called by:
  6210 ;;		_main
  6211 ;; This function uses a non-reentrant model
  6212 ;;
  6213                           
  6214                           
  6215                           ;psect for function _I2C_Receive
  6216  093D                     _I2C_Receive:	
  6217                           
  6218                           ;incstack = 0
  6219                           ; Regs used in _I2C_Receive: [wreg+status,2+status,0+pclath+cstack]
  6220                           ;I2C_Receive@ack stored from wreg
  6221  093D  00F1               	movwf	I2C_Receive@ack
  6222                           
  6223                           ;LE7-3.c: 286: unsigned char temp;
  6224                           ;LE7-3.c: 287: I2C_Wait();
  6225  093E  120A  158A  20A8  120A  158A  	fcall	_I2C_Wait
  6226                           
  6227                           ;LE7-3.c: 288: RCEN = 1;
  6228  0943  1683               	bsf	3,5	;RP0=1, select bank1
  6229  0944  1303               	bcf	3,6	;RP1=0, select bank1
  6230  0945  1591               	bsf	17,3	;volatile
  6231                           
  6232                           ;LE7-3.c: 289: I2C_Wait();
  6233  0946  120A  158A  20A8  120A  158A  	fcall	_I2C_Wait
  6234                           
  6235                           ;LE7-3.c: 290: temp = SSPBUF;
  6236  094B  1283               	bcf	3,5	;RP0=0, select bank0
  6237  094C  1303               	bcf	3,6	;RP1=0, select bank0
  6238  094D  0813               	movf	19,w	;volatile
  6239  094E  00F0               	movwf	??_I2C_Receive
  6240  094F  0870               	movf	??_I2C_Receive,w
  6241  0950  00F2               	movwf	I2C_Receive@temp
  6242                           
  6243                           ;LE7-3.c: 291: I2C_Wait();
  6244  0951  120A  158A  20A8  120A  158A  	fcall	_I2C_Wait
  6245                           
  6246                           ;LE7-3.c: 292: ACKDT = (ack)?0:1;
  6247  0956  08F1               	movf	I2C_Receive@ack,f
  6248  0957  1D03               	btfss	3,2
  6249  0958  295D               	goto	u2750
  6250  0959  1683               	bsf	3,5	;RP0=1, select bank1
  6251  095A  1303               	bcf	3,6	;RP1=0, select bank1
  6252  095B  1691               	bsf	17,5	;volatile
  6253  095C  2960               	goto	l2315
  6254  095D                     u2750:	
  6255  095D  1683               	bsf	3,5	;RP0=1, select bank1
  6256  095E  1303               	bcf	3,6	;RP1=0, select bank1
  6257  095F  1291               	bcf	17,5	;volatile
  6258  0960                     l2315:	
  6259                           
  6260                           ;LE7-3.c: 293: ACKEN = 1;
  6261  0960  1611               	bsf	17,4	;volatile
  6262                           
  6263                           ;LE7-3.c: 294: return temp;
  6264  0961  0872               	movf	I2C_Receive@temp,w
  6265  0962  0008               	return
  6266  0963                     __end_of_I2C_Receive:	
  6267                           
  6268                           	psect	text34
  6269  08A8                     __ptext34:	
  6270 ;; *************** function _I2C_Wait *****************
  6271 ;; Defined at:
  6272 ;;		line 246 in file "C:\Users\notjo\OneDrive\Desktop\USC\USC-Year3-Sem2\3201-EmbeddedSystems\Labs\LE_07\LE7-3\LE7-3.c"
  6273 ;; Parameters:    Size  Location     Type
  6274 ;;		None
  6275 ;; Auto vars:     Size  Location     Type
  6276 ;;		None
  6277 ;; Return value:  Size  Location     Type
  6278 ;;		None               void
  6279 ;; Registers used:
  6280 ;;		wreg, status,2
  6281 ;; Tracked objects:
  6282 ;;		On entry : 0/0
  6283 ;;		On exit  : 0/0
  6284 ;;		Unchanged: 0/0
  6285 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6286 ;;      Params:         0       0       0       0       0
  6287 ;;      Locals:         0       0       0       0       0
  6288 ;;      Temps:          0       0       0       0       0
  6289 ;;      Totals:         0       0       0       0       0
  6290 ;;Total ram usage:        0 bytes
  6291 ;; Hardware stack levels used:    1
  6292 ;; This function calls:
  6293 ;;		Nothing
  6294 ;; This function is called by:
  6295 ;;		_I2C_Start
  6296 ;;		_I2C_Stop
  6297 ;;		_I2C_RepeatedStart
  6298 ;;		_I2C_Send
  6299 ;;		_I2C_Receive
  6300 ;; This function uses a non-reentrant model
  6301 ;;
  6302                           
  6303                           
  6304                           ;psect for function _I2C_Wait
  6305  08A8                     _I2C_Wait:	
  6306  08A8                     l2153:	
  6307                           ;LE7-3.c: 249: while((SSPCON2 & 0x1F) || (SSPSTAT & 0x04));
  6308                           
  6309                           ;incstack = 0
  6310                           ; Regs used in _I2C_Wait: [wreg+status,2]
  6311                           
  6312  08A8  1683               	bsf	3,5	;RP0=1, select bank1
  6313  08A9  1303               	bcf	3,6	;RP1=0, select bank1
  6314  08AA  0811               	movf	17,w	;volatile
  6315  08AB  391F               	andlw	31
  6316  08AC  1903               	btfsc	3,2
  6317  08AD  1914               	btfsc	20,2	;volatile
  6318  08AE  28A8               	goto	l2153
  6319  08AF  0008               	return
  6320  08B0                     __end_of_I2C_Wait:	
  6321  007E                     btemp	set	126	;btemp
  6322  007E                     wtemp	set	126
  6323  007E                     wtemp0	set	126
  6324  0080                     wtemp1	set	128
  6325  0082                     wtemp2	set	130
  6326  0084                     wtemp3	set	132
  6327  0086                     wtemp4	set	134
  6328  0088                     wtemp5	set	136
  6329  007F                     wtemp6	set	127
  6330  007E                     ttemp	set	126
  6331  007E                     ttemp0	set	126
  6332  0081                     ttemp1	set	129
  6333  0084                     ttemp2	set	132
  6334  0087                     ttemp3	set	135
  6335  007F                     ttemp4	set	127
  6336  007E                     ltemp	set	126
  6337  007E                     ltemp0	set	126
  6338  0082                     ltemp1	set	130
  6339  0086                     ltemp2	set	134
  6340  0080                     ltemp3	set	128


Data Sizes:
    Strings     33
    Constant    67
    Data        0
    BSS         6
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     80      80
    BANK1            80     45      51
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    eval_poly@d	PTR const  size(1) Largest target is 30
		 -> log@coeff(CODE[27]), exp@coeff(CODE[30]), 

    frexp@eptr	PTR int  size(1) Largest target is 2
		 -> log@exponent(BANK0[2]), floor@expon(BANK0[2]), 

    sprintf@f	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_6(CODE[3]), STR_4(CODE[3]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 10
		 -> updateDisplay@temp(BANK0[10]), updateDisplay@humidity(BANK0[10]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S161$_cp	PTR const unsigned char  size(1) Largest target is 0

    _val._str._cp	PTR const unsigned char  size(1) Largest target is 0

    printString@string	PTR unsigned char  size(2) Largest target is 14
		 -> updateDisplay@temp(BANK0[10]), STR_5(CODE[14]), updateDisplay@humidity(BANK0[10]), STR_3(CODE[11]), 
		 -> STR_2(CODE[5]), STR_1(CODE[5]), 


Critical Paths under _main in COMMON

    _main->___awtoft
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _printString->_dataCtrl
    _pow->___lltoft
    _log->___awtoft
    _exp->___awtoft
    ___fttol->___awtoft
    ___ftmul->___awtoft
    ___ftsub->___awtoft
    ___ftadd->___awtoft
    ___ftdiv->___awtoft
    ___awtoft->___ftpack
    ___lltoft->___ftpack
    _initLCD->_instCtrl

Critical Paths under _main in BANK0

    _updateDisplay->_sprintf
    _pow->_exp
    _log->_eval_poly
    _exp->_floor
    _ldexp->_eval_poly
    _floor->___altoft
    ___fttol->___ftadd
    ___altoft->___fttol
    _eval_poly->___ftadd
    ___ftmul->___ftdiv
    ___ftsub->___ftadd
    ___ftadd->___ftmul

Critical Paths under _main in BANK1

    _main->_pow
    _pow->_exp

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                18    18      0   67686
                                             27 BANK1     18    18      0
                        _I2C_Receive
                  _I2C_RepeatedStart
                           _I2C_Send
                          _I2C_Start
                           _I2C_Stop
                           ___awtoft
                            ___ftadd
                            ___ftdiv
                            ___ftmul
                            ___fttol
                            _initLCD
                    _init_I2C_Master
                                _pow
                      _updateDisplay
 ---------------------------------------------------------------------------------
 (1) _updateDisplay                                       23    23      0    1891
                                             15 BANK0     23    23      0
                           _dataCtrl
                           _instCtrl
                        _printString
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             15    12      3    1170
                                              0 BANK0     15    12      3
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4     265
                                              8 COMMON     6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     268
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (2) _printString                                          2     0      2     431
                                              3 COMMON     2     0      2
                           _dataCtrl
 ---------------------------------------------------------------------------------
 (3) _dataCtrl                                             3     3      0      68
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _pow                                                 18    12      6   53953
                                              9 BANK1     18    12      6
                             ___ftge
                            ___ftmul
                            ___ftneg
                            ___fttol
                           ___lltoft
                                _exp
                                _log
 ---------------------------------------------------------------------------------
 (2) _log                                                  6     3      3   17124
                                             55 BANK0      6     3      3
                           ___awtoft
                            ___ftadd
                             ___ftge
                            ___ftmul
                          _eval_poly
                              _frexp
 ---------------------------------------------------------------------------------
 (2) _exp                                                 13    10      3   29651
                                             76 BANK0      4     1      3
                                              0 BANK1      9     9      0
                           ___awtoft
                            ___ftdiv
                             ___ftge
                            ___ftmul
                            ___ftneg
                            ___ftsub
                            ___fttol
                          _eval_poly
                              _floor
                              _ldexp
                                _log (ARG)
 ---------------------------------------------------------------------------------
 (3) _ldexp                                               10     5      5    1725
                                             55 BANK0     10     5      5
                             ___ftge
                            ___ftneg
                          _eval_poly (ARG)
 ---------------------------------------------------------------------------------
 (4) ___ftneg                                              3     0      3     257
                                              0 COMMON     3     0      3
 ---------------------------------------------------------------------------------
 (3) _floor                                                9     6      3    7699
                                             67 BANK0      9     6      3
                           ___altoft
                            ___ftadd
                             ___ftge
                            ___fttol
                              _frexp
 ---------------------------------------------------------------------------------
 (3) _frexp                                                6     2      4     436
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (4) ___fttol                                             14    10      4     570
                                             45 BANK0     14    10      4
                           ___awtoft (ARG)
                            ___ftadd (ARG)
                            ___ftdiv (ARG)
                            ___ftmul (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftge                                              12     6      6    1090
                                              0 COMMON    12     6      6
 ---------------------------------------------------------------------------------
 (4) ___altoft                                             8     4      4    1954
                                             59 BANK0      8     4      4
                           ___ftpack
                            ___fttol (ARG)
 ---------------------------------------------------------------------------------
 (3) _eval_poly                                           10     4      6    6912
                                             45 BANK0     10     4      6
                             ___bmul
                            ___ftadd
                            ___ftmul
 ---------------------------------------------------------------------------------
 (4) ___ftmul                                             16    10      6    2911
                                             16 BANK0     16    10      6
                           ___awtoft (ARG)
                            ___ftdiv (ARG)
                           ___ftpack
                              _frexp (ARG)
 ---------------------------------------------------------------------------------
 (4) ___bmul                                               4     3      1     160
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (3) ___ftsub                                              6     0      6    3496
                                             45 BANK0      6     0      6
                           ___awtoft (ARG)
                            ___ftadd
 ---------------------------------------------------------------------------------
 (4) ___ftadd                                             13     7      6    3345
                                             32 BANK0     13     7      6
                           ___awtoft (ARG)
                             ___bmul (ARG)
                            ___ftdiv (ARG)
                            ___ftmul (ARG)
                           ___ftpack
                              _frexp (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftdiv                                             16    10      6    2361
                                              0 BANK0     16    10      6
                           ___awtoft (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___awtoft                                             6     3      3    2172
                                              8 COMMON     6     3      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___lltoft                                             6     2      4    1885
                                              8 COMMON     6     2      4
                           ___ftpack
 ---------------------------------------------------------------------------------
 (5) ___ftpack                                             8     3      5    1763
                                              0 COMMON     8     3      5
 ---------------------------------------------------------------------------------
 (1) _init_I2C_Master                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initLCD                                              0     0      0      68
                           _instCtrl
 ---------------------------------------------------------------------------------
 (2) _instCtrl                                             3     3      0      68
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _I2C_Stop                                             0     0      0       0
                           _I2C_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Start                                            0     0      0       0
                           _I2C_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Send                                             1     1      0      22
                                              0 COMMON     1     1      0
                           _I2C_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_RepeatedStart                                    0     0      0       0
                           _I2C_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Receive                                          3     3      0      45
                                              0 COMMON     3     3      0
                           _I2C_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Wait                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_Receive
     _I2C_Wait
   _I2C_RepeatedStart
     _I2C_Wait
   _I2C_Send
     _I2C_Wait
   _I2C_Start
     _I2C_Wait
   _I2C_Stop
     _I2C_Wait
   ___awtoft
     ___ftpack
   ___ftadd
     ___awtoft (ARG)
       ___ftpack
     ___bmul (ARG)
     ___ftdiv (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___ftpack (ARG)
     ___ftmul (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___ftdiv (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
       ___ftpack (ARG)
       _frexp (ARG)
     ___ftpack (ARG)
     _frexp (ARG)
   ___ftdiv
     ___awtoft (ARG)
       ___ftpack
     ___ftpack (ARG)
   ___ftmul
     ___awtoft (ARG)
       ___ftpack
     ___ftdiv (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___ftpack (ARG)
     ___ftpack (ARG)
     _frexp (ARG)
   ___fttol
     ___awtoft (ARG)
       ___ftpack
     ___ftadd (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___bmul (ARG)
       ___ftdiv (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
         ___ftpack (ARG)
         _frexp (ARG)
       ___ftpack (ARG)
       _frexp (ARG)
     ___ftdiv (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___ftpack (ARG)
     ___ftmul (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___ftdiv (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
       ___ftpack (ARG)
       _frexp (ARG)
   _initLCD
     _instCtrl
   _init_I2C_Master
   _pow
     ___ftge
     ___ftmul
       ___awtoft (ARG)
         ___ftpack
       ___ftdiv (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
       ___ftpack (ARG)
       _frexp (ARG)
     ___ftneg
     ___fttol
       ___awtoft (ARG)
         ___ftpack
       ___ftadd (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___bmul (ARG)
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
           ___ftpack (ARG)
           _frexp (ARG)
         ___ftpack (ARG)
         _frexp (ARG)
       ___ftdiv (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
         ___ftpack (ARG)
         _frexp (ARG)
     ___lltoft
       ___ftpack
     _exp
       ___awtoft
         ___ftpack
       ___ftdiv
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
       ___ftge
       ___ftmul
         ___awtoft (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
         ___ftpack (ARG)
         _frexp (ARG)
       ___ftneg
       ___ftsub
         ___awtoft (ARG)
           ___ftpack
         ___ftadd (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___bmul (ARG)
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftpack (ARG)
           _frexp (ARG)
       ___fttol
         ___awtoft (ARG)
           ___ftpack
         ___ftadd (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___bmul (ARG)
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftpack (ARG)
           _frexp (ARG)
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
           ___ftpack (ARG)
           _frexp (ARG)
       _eval_poly
         ___bmul
         ___ftadd
           ___awtoft (ARG)
             ___ftpack
           ___bmul (ARG)
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftpack (ARG)
           _frexp (ARG)
         ___ftmul
           ___awtoft (ARG)
             ___ftpack
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
           ___ftpack (ARG)
           _frexp (ARG)
       _floor
         ___altoft
           ___ftpack
           ___fttol (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___bmul (ARG)
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftdiv (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
         ___ftadd
           ___awtoft (ARG)
             ___ftpack
           ___bmul (ARG)
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftpack (ARG)
           _frexp (ARG)
         ___ftge
         ___fttol
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___bmul (ARG)
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
             ___ftpack (ARG)
             _frexp (ARG)
         _frexp
       _ldexp
         ___ftge
         ___ftneg
         _eval_poly (ARG)
           ___bmul
           ___ftadd
             ___awtoft (ARG)
               ___ftpack
             ___bmul (ARG)
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftmul
             ___awtoft (ARG)
               ___ftpack
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
             ___ftpack (ARG)
             _frexp (ARG)
       _log (ARG)
         ___awtoft
           ___ftpack
         ___ftadd
           ___awtoft (ARG)
             ___ftpack
           ___bmul (ARG)
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftpack (ARG)
           _frexp (ARG)
         ___ftge
         ___ftmul
           ___awtoft (ARG)
             ___ftpack
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
           ___ftpack (ARG)
           _frexp (ARG)
         _eval_poly
           ___bmul
           ___ftadd
             ___awtoft (ARG)
               ___ftpack
             ___bmul (ARG)
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftmul
             ___awtoft (ARG)
               ___ftpack
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
             ___ftpack (ARG)
             _frexp (ARG)
         _frexp
     _log
       ___awtoft
         ___ftpack
       ___ftadd
         ___awtoft (ARG)
           ___ftpack
         ___bmul (ARG)
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
           ___ftpack (ARG)
           _frexp (ARG)
         ___ftpack (ARG)
         _frexp (ARG)
       ___ftge
       ___ftmul
         ___awtoft (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
         ___ftpack (ARG)
         _frexp (ARG)
       _eval_poly
         ___bmul
         ___ftadd
           ___awtoft (ARG)
             ___ftpack
           ___bmul (ARG)
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftpack (ARG)
           _frexp (ARG)
         ___ftmul
           ___awtoft (ARG)
             ___ftpack
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
           ___ftpack (ARG)
           _frexp (ARG)
       _frexp
   _updateDisplay
     _dataCtrl
     _instCtrl
     _printString
       _dataCtrl
     _sprintf
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      91       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     50      50       5      100.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50     2D      33       7       63.8%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      91      12        0.0%


Microchip Technology PIC Macro Assembler V1.33 build 59893 
Symbol Table                                                                                   Sat Apr 27 11:13:46 2024

              ___altoft@exp 0061                           pc 0002              ___bmul@product 0072  
        __size_of_I2C_Start 0007                 __CFG_CP$OFF 0000               ___altoft@sign 0062  
                        l94 0988                          l89 09B1                          fsr 0004  
              ___ftadd@exp1 004C                ___ftadd@exp2 004B                ___ftadd@sign 004A  
                       l404 0B80                         l427 0278                         l398 0B67  
                       l598 02FA                         _RD0 0040                         _RD2 0042  
                       _PEN 048A                __CFG_CPD$OFF 0000                         _SEN 0488  
                       _exp 042D                         _log 0F30                         _pow 02D9  
                       fsr0 0004                         indf 0000        __size_of_I2C_Receive 0026  
              __CFG_FOSC$XT 0000                __CFG_LVP$OFF 0000                ___ftdiv@cntr 002A  
              ___ftdiv@sign 002F                        l2101 011E                        l2009 0D30  
                      l2121 0151                        l2019 0C0B                        l2211 0480  
                      l2107 0134                        l2029 0D47                        l2205 045C  
                      l2117 014B                        l2063 0DB9                        l2039 0D70  
                      l2143 0185                        l2135 0181                        l2153 08A8  
                      l2081 0977                        l2161 09B9                        l2217 04B7  
                      l2129 0172                        l2145 00FE                        l2315 0960  
                      l1603 0B6C                        l2163 09CB                        l2059 0DB0  
                      l2091 091A                        l2147 01CB                        l1605 0B76  
                      l1701 028A                        l1621 08D8                        l2173 0F54  
                      l2253 0303                        l2239 0599                        l2271 038F  
                      l1705 029C                        l1617 08D2                        l1641 0AA8  
                      l1715 02BF                        l1643 0ABA                        l1723 0AFB  
                      l1803 0C2C                        l2195 043B                        l2179 0F6A  
                      l2267 0377                        l2259 030F                        l1901 0EA6  
                      l1821 0C5E                        l1655 01F9                        l1751 0052  
                      l1727 0B22                        l1831 0C86                        l1823 0C6E  
                      l2375 0608                        l1593 0B40                        l1665 020F  
                      l1745 003C                        l1833 0C89                        l1595 0B4C  
                      l1923 0F0A                        l1915 0EEB                        l1683 023E  
                      l1659 0200                        l1763 0091                        l1597 0B51  
                      l1589 0B39                        l1685 024A                        l1677 0229  
                      l1837 0C97                        l1829 0C7B                        l1695 0268  
                      l1687 024F                        l1775 00B9                        l1767 00A1  
                      l1697 0274                        l1689 0253                        l1849 0A64  
                      l1873 09A0                        l1779 00C9                        l1955 0A40  
                      l1947 0A1C                        l1971 09E6                        l1885 000D  
                      l1949 0A2A                        l1973 09F4                        l1981 0A0D  
                      l1895 0E90                        l1959 0A4B                        l1977 0A02  
                      l1995 0CD1                        l1999 0CDA                        ?_exp 006C  
                      ?_log 0057                        ?_pow 00A9                        STR_1 086C  
                      STR_2 086C                        STR_3 0861                        STR_4 0871  
                      STR_5 0853                        STR_6 0871                        u2035 0C33  
                      u2205 0EEC                        u2215 0EFD                        u2135 099E  
                      u2225 0F0B                        u2065 0C5F                        u2145 09AF  
                      u1515 0B87                        u1445 0B45                        u2325 09E9  
                      u2095 0C7D                        u2255 0A1F                        u1465 0B60  
                      u2185 0EB8                        u1705 023F                        u2345 09FA  
                      u2195 0ECA                        u2275 0A2B                        u2355 0A03  
                      u1485 0B6F                        u1565 0AAD                        u2445 0D79  
                      u2285 0A37                        u2525 0168                        u1735 0254  
                      u1831 0AEE                        u2295 0A41                        u1832 0AEF  
                      u2465 0975                        u1905 0070                        u1833 0AF4  
                      u1834 0AF5                        u2475 0986                        u1675 022A  
                      u1851 0B15                        u1852 0B16                        u1765 0269  
                      u1853 0B1B                        u2805 073D                        u2750 095D  
                      u1854 0B1C                        u1935 00A2                        u2735 036A  
                      u2815 07E9                        u1945 00AA                        u2595 09BE  
                      u2685 058E                        u2837 064D                        u1895 005E  
                      u2775 0E6D                        u2847 06F1                        u1985 00CA  
                      u2857 07D5                        u1995 00D2                        u2795 065C  
                      _RCEN 048B                        _RSEN 0489              ?_updateDisplay 0070  
              __CFG_WRT$OFF 0000                        _main 05B2                ___ftpack@arg 0070  
              ___ftpack@exp 0073            __end_of_I2C_Send 08C1                        btemp 007E  
          __end_of_I2C_Wait 08B0                        exp@x 006C                        log@x 0057  
          __end_of_I2C_Stop 08A8               __CFG_BOREN$ON 0000                        ltemp 007E  
                      pow@x 00A9                        pow@y 00AC                        start 0000  
                      ttemp 007E                        wtemp 007E           ___bmul@multiplier 0073  
              ___ftmul@cntr 003E                ___ftmul@sign 003F                ___fttol@exp1 005A  
                     ??_exp 006F                       ??_log 005A                ___fttol@lval 0056  
                     ??_pow 00AF                       ?_main 0070                       _ACKEN 048C  
                     _ACKDT 048D             __end_of___ftadd 02D9               __CFG_WDTE$OFF 0000  
           __end_of___ftdiv 0F30             __end_of___ftneg 08B8             __end_of___ftmul 00F7  
           __end_of___ftsub 08FD             __end_of___fttol 0CA0             __end_of___lwdiv 0A52  
           __end_of___lwmod 0A14                       _PORTB 0006                       _PORTD 0008  
                     _TRISB 0086                       _TRISD 0088               __CFG_PWRTE$ON 0000  
              ___lltoft@exp 007D             __end_of_initLCD 091A               ___awtoft@sign 007D  
           __end_of_dpowers 081A                       _floor 0CA0                       _ldexp 0D39  
                     _frexp 0A52                       _errno 00CD               ___ftpack@sign 0074  
                     main@i 00C7           __end_of_I2C_Start 08A1                       pclath 000A  
                     ltemp0 007E                       ltemp1 0082                       ltemp2 0086  
                     ltemp3 0080                       pow@yi 00B7                       ttemp0 007E  
                     ttemp1 0081                       ttemp2 0084                       ttemp3 0087  
                     ttemp4 007F                       status 0003                       wtemp0 007E  
                     wtemp1 0080                       wtemp2 0082                       wtemp3 0084  
                     wtemp4 0086                       wtemp5 0088                       wtemp6 007F  
           __end_of_sprintf 01D0                 exp@exponent 00A6                 ldexp@newexp 005A  
           __initialization 07F4                 log@exponent 005B                __end_of_main 07F4  
                    ??_main 00BB               ___fttol@sign1 0055                      ?_floor 0063  
                    ?_ldexp 0057             ??_updateDisplay 002F                      ?_frexp 0070  
          __end_of___altoft 0AD4            __end_of___awtoft 0024            __end_of___ftpack 0B99  
          __end_of___lltoft 09E0                      _SSPADD 0093                      _TRISC3 043B  
                    _TRISC4 043C                      _SSPCON 0014                      _SSPBUF 0013  
          __end_of_dataCtrl 09B5                      ___bmul 08D0                      ___ftge 0AD4  
                 ??___ftadd 0046                   ??___ftdiv 0026                   ??___ftneg 0073  
                 ??___ftmul 0036                   ??___ftsub 007E                   ??___fttol 0051  
                 ??___lwdiv 0074                   ??___lwmod 007C    __size_of_init_I2C_Master 000F  
          __end_of_instCtrl 098C                      floor@i 0067                      floor@x 0063  
     ___ftmul@f3_as_product 003B                   ??_initLCD 0073                   ?_I2C_Send 0070  
                 ?_I2C_Wait 0070                   ?_I2C_Stop 0070                   ??_sprintf 0023  
              ?_printString 0073            __end_ofexp@coeff 0838            __end_oflog@coeff 0853  
   __end_of__initialization 07FC                  ___altoft@c 005B                  ___ftadd@f1 0040  
                ___ftadd@f2 0043                  ___ftge@ff1 0070                  ___ftge@ff2 0073  
              eval_poly@res 0054                  ___ftdiv@f1 0023                  ___ftdiv@f2 0020  
                ___ftdiv@f3 002B        main@temp_temperature 00C3                  ___ftneg@f1 0070  
                ___awtoft@c 0078         ___bmul@multiplicand 0070                  ___ftmul@f1 0030  
                ___ftmul@f2 0033                  ___ftsub@f1 0050                  ___ftsub@f2 004D  
                ___fttol@f1 004D              __pcstackCOMMON 0070                  ___lltoft@c 0078  
             __end_of_floor 0D39               __end_of_ldexp 0DD2               __end_of_frexp 0A92  
                ??_I2C_Send 0070                  ??_I2C_Wait 0070                  ??_I2C_Stop 0070  
                   ??_floor 0066                     ??_ldexp 005C                     ??_frexp 0074  
                __pbssBANK1 00CD          __size_of_eval_poly 0079                  __pmaintext 05B2  
                   ?___bmul 0070                     ?___ftge 0070                   ?___altoft 005B  
                 ?___awtoft 0078                   ?___ftpack 0070               ??_I2C_Receive 0070  
              I2C_Send@data 0070                   ?___lltoft 0078                   ?_dataCtrl 0070  
         ??_init_I2C_Master 0070                     _SSPCON2 0091                     _SSPSTAT 0094  
                __stringtab 0800                   ?_instCtrl 0070                   _I2C_Start 089A  
            I2C_Receive@ack 0071             __size_of___bmul 0011             __size_of___ftge 005D  
                   ___ftadd 01D0                     ___ftdiv 0E78                     ___ftneg 08B0  
                   ___ftmul 0024                     ___ftsub 08E1                     ___fttol 0C12  
                   ___lwdiv 0A14                     ___lwmod 09E0                  ??___altoft 005F  
                   _exp$446 00A3                     _exp$653 00A0                  ??___awtoft 007B  
                ??___ftpack 0075           __end_of_eval_poly 0C12                  ??___lltoft 007C  
                   __ptext1 0DD2                     __ptext2 00F7                     __ptext3 09E0  
                   __ptext4 0A14                     __ptext5 091A                     __ptext6 098C  
                   __ptext7 02D9                     __ptext8 0F30                     __ptext9 042D  
                   _pow$651 00B0                     _pow$652 00B3                     _initLCD 08FD  
                   _dpowers 0810                  ??_dataCtrl 0070                __size_of_exp 0185  
              __size_of_log 00D0                __size_of_pow 0154         __end_of_I2C_Receive 0963  
                   main@LSB 00CB                     main@MSB 00C9                     _sprintf 00F7  
      end_of_initialization 07FC              main@resolution 00C5                     exp@sign 00A8  
                ??_instCtrl 0070        __size_of_printString 0023                  ?_I2C_Start 0070  
                   pow@sign 00B6              updateDisplay@i 0044           __size_of_I2C_Send 0009  
         __size_of_I2C_Wait 0008           __size_of_I2C_Stop 0007       __end_of_updateDisplay 0E78  
              instCtrl@inst 0070                 ___ftdiv@exp 002E           main@temp_humidity 00C1  
               ___ftmul@exp 003A              __end_of___bmul 08E1              __end_of___ftge 0B31  
               _I2C_Receive 093D                  floor@expon 006A           _relative_humidity 00CF  
       start_initialization 07F4                  eval_poly@d 0050                  eval_poly@n 0051  
                eval_poly@x 004D                  ldexp@value 0057                 __end_of_exp 05B2  
               __end_of_log 1000                 __end_of_pow 042D                  frexp@value 0070  
              dataCtrl@data 0070                 ??_I2C_Start 0070                    ??___bmul 0071  
                  ??___ftge 0076             _init_I2C_Master 08C1           _I2C_RepeatedStart 0893  
        ?_I2C_RepeatedStart 0070           __size_of___altoft 0042           __size_of___awtoft 0021  
         __size_of___ftpack 0068           __size_of___lltoft 002B                   ___latbits 0002  
             __pcstackBANK0 0020               __pcstackBANK1 00A0         ??_I2C_RepeatedStart 0070  
       __end_of__stringdata 0874           __size_of_dataCtrl 0029                 sprintf@_val 0029  
               sprintf@flag 0027                 sprintf@prec 0028            ___lwdiv@dividend 0072  
         __size_of_instCtrl 0029   __end_of_I2C_RepeatedStart 089A                    ?___ftadd 0040  
                  ?___ftdiv 0020                    ?___ftneg 0070                    ?___ftmul 0030  
                  ?___ftsub 004D                    ?___fttol 004D                    ?___lwdiv 0070  
                  ?___lwmod 0078                   __pstrings 0800                   _ldexp$483 005E  
                  ?_initLCD 0070                    _I2C_Send 08B8                    _I2C_Wait 08A8  
                 _eval_poly 0B99                    _I2C_Stop 08A1                   dataCtrl@i 0071  
          ___lwdiv@quotient 0075                    ?_sprintf 0020              __size_of_floor 0099  
            __size_of_ldexp 0099              __size_of_frexp 0040     __end_of_init_I2C_Master 08D0  
               __stringbase 080F                 __stringdata 0853                  ?_eval_poly 004D  
             ??_printString 0075       updateDisplay@humidity 0030             I2C_Receive@temp 0072  
                 frexp@eptr 0073           printString@string 0073           updateDisplay@temp 003A  
__size_of_I2C_RepeatedStart 0007            __size_of___ftadd 0109            __size_of___ftdiv 00B8  
          __size_of___ftneg 0008                    ___altoft 0A92            __size_of___ftmul 00D3  
          __size_of___ftsub 001C            __size_of___fttol 008E                   instCtrl@i 0071  
          __size_of___lwdiv 003E            __size_of___lwmod 0034                    ___awtoft 0003  
                  ___ftpack 0B31          __end_of__stringtab 0810                    ___lltoft 09B5  
              ?_I2C_Receive 0070                    _dataCtrl 098C            __size_of_initLCD 001D  
                  _main$650 00BE             ___lwdiv@divisor 0070             ___lwdiv@counter 0077  
                  __ptext10 0D39                    __ptext11 08B0                    __ptext20 08E1  
                  __ptext12 0CA0                    __ptext21 01D0                    __ptext13 0A52  
                  __ptext30 089A                    __ptext22 0E78                    __ptext14 0C12  
                  __ptext31 08B8                    __ptext23 0003                    __ptext15 0AD4  
                  __ptext32 0893                    __ptext24 09B5                    __ptext16 0A92  
                  __ptext33 093D                    __ptext25 0B31                    __ptext17 0B99  
                  __ptext34 08A8                    __ptext26 08C1                    __ptext18 0024  
                  __ptext27 08FD                    __ptext19 08D0                    __ptext28 0963  
                  __ptext29 08A1            __size_of_sprintf 00D9               __size_of_main 0242  
                  _instCtrl 0963            ?_init_I2C_Master 0070         __end_of_printString 093D  
    __size_of_updateDisplay 00A6                    exp@coeff 081A                    log@coeff 0838  
               ??_eval_poly 0053                   sprintf@ap 0026                   sprintf@sp 002D  
          ___lwmod@dividend 007A                   stringcode 080A                 _temperature 00D1  
                  sprintf@c 002E                    sprintf@f 0020             ___lwmod@divisor 0078  
           ___lwmod@counter 007D                    stringdir 080A                    stringtab 0800  
               _printString 091A               _updateDisplay 0DD2  

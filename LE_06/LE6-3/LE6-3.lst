

Microchip Technology PIC LITE Macro Assembler V1.33 build 59893 
                                                                                               Mon Apr 22 18:28:33 2024

Microchip Technology Omniscient Code Generator (Lite mode) build 59893
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	inittext,global,class=CODE,delta=2
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	dabs	1,0x7E,2
    14  0000                     	;# 
    15  0001                     	;# 
    16  0002                     	;# 
    17  0003                     	;# 
    18  0004                     	;# 
    19  0005                     	;# 
    20  0006                     	;# 
    21  0007                     	;# 
    22  0008                     	;# 
    23  0009                     	;# 
    24  000A                     	;# 
    25  000B                     	;# 
    26  000C                     	;# 
    27  000D                     	;# 
    28  000E                     	;# 
    29  000E                     	;# 
    30  000F                     	;# 
    31  0010                     	;# 
    32  0011                     	;# 
    33  0012                     	;# 
    34  0013                     	;# 
    35  0014                     	;# 
    36  0015                     	;# 
    37  0015                     	;# 
    38  0016                     	;# 
    39  0017                     	;# 
    40  0018                     	;# 
    41  0019                     	;# 
    42  001A                     	;# 
    43  001B                     	;# 
    44  001B                     	;# 
    45  001C                     	;# 
    46  001D                     	;# 
    47  001E                     	;# 
    48  001F                     	;# 
    49  0081                     	;# 
    50  0085                     	;# 
    51  0086                     	;# 
    52  0087                     	;# 
    53  0088                     	;# 
    54  0089                     	;# 
    55  008C                     	;# 
    56  008D                     	;# 
    57  008E                     	;# 
    58  0091                     	;# 
    59  0092                     	;# 
    60  0093                     	;# 
    61  0094                     	;# 
    62  0098                     	;# 
    63  0099                     	;# 
    64  009C                     	;# 
    65  009D                     	;# 
    66  009E                     	;# 
    67  009F                     	;# 
    68  010C                     	;# 
    69  010D                     	;# 
    70  010E                     	;# 
    71  010F                     	;# 
    72  018C                     	;# 
    73  018D                     	;# 
    74                           
    75                           	psect	idataBANK0
    76  0722                     __pidataBANK0:	
    77                           
    78                           ;initializer for _message1
    79  0722  3459               	retlw	89
    80  0723  346F               	retlw	111
    81  0724  3475               	retlw	117
    82  0725  3420               	retlw	32
    83  0726  3470               	retlw	112
    84  0727  3472               	retlw	114
    85  0728  3465               	retlw	101
    86  0729  3473               	retlw	115
    87  072A  3473               	retlw	115
    88  072B  3465               	retlw	101
    89  072C  3464               	retlw	100
    90  072D  3420               	retlw	32
    91  072E  3431               	retlw	49
    92  072F  342E               	retlw	46
    93  0730  3420               	retlw	32
    94  0731  340A               	retlw	10
    95  0732  3400               	retlw	0
    96                           
    97                           ;initializer for _message2
    98  0733  3459               	retlw	89
    99  0734  346F               	retlw	111
   100  0735  3475               	retlw	117
   101  0736  3420               	retlw	32
   102  0737  3470               	retlw	112
   103  0738  3472               	retlw	114
   104  0739  3465               	retlw	101
   105  073A  3473               	retlw	115
   106  073B  3473               	retlw	115
   107  073C  3465               	retlw	101
   108  073D  3464               	retlw	100
   109  073E  3420               	retlw	32
   110  073F  3432               	retlw	50
   111  0740  342E               	retlw	46
   112  0741  3420               	retlw	32
   113  0742  340A               	retlw	10
   114  0743  3400               	retlw	0
   115  0007                     _PORTC	set	7
   116  0019                     _TXREG	set	25
   117  0008                     _PORTD	set	8
   118  0044                     _RD4	set	68
   119  00C7                     _SPEN	set	199
   120  0099                     _SPBRG	set	153
   121  0087                     _TRISC	set	135
   122  04C2                     _BRGH	set	1218
   123  04C4                     _SYNC	set	1220
   124  04C1                     _TRMT	set	1217
   125  04C6                     _TX9	set	1222
   126  04C5                     _TXEN	set	1221
   127                           
   128                           ; #config settings
   129  0000                     
   130                           	psect	cinit
   131  07EE                     start_initialization:	
   132  07EE                     __initialization:	
   133                           
   134                           ; Clear objects allocated to COMMON
   135  07EE  01F8               	clrf	__pbssCOMMON& (0+127)
   136  07EF  01F9               	clrf	(__pbssCOMMON+1)& (0+127)
   137                           
   138                           ; Initialize objects allocated to BANK0
   139  07F0  1383               	bcf	3,7	;select IRP bank0
   140  07F1  3042               	movlw	low (__pdataBANK0+34)
   141  07F2  00FD               	movwf	btemp+-1
   142  07F3  3007               	movlw	high __pidataBANK0
   143  07F4  00FE               	movwf	btemp
   144  07F5  3022               	movlw	low __pidataBANK0
   145  07F6  00FF               	movwf	btemp+1
   146  07F7  3020               	movlw	low __pdataBANK0
   147  07F8  0084               	movwf	4
   148  07F9  120A  118A  26FA   	fcall	init_ram0
   149  07FC                     end_of_initialization:	
   150                           ;End of C runtime variable initialization code
   151                           
   152  07FC                     __end_of__initialization:	
   153  07FC  0183               	clrf	3
   154  07FD  120A  118A  2F44   	ljmp	_main	;jump to C main() function
   155                           
   156                           	psect	bssCOMMON
   157  0078                     __pbssCOMMON:	
   158  0078                     _count_flag:	
   159  0078                     	ds	1
   160  0079                     _keypadValue:	
   161  0079                     	ds	1
   162                           
   163                           	psect	dataBANK0
   164  0020                     __pdataBANK0:	
   165  0020                     _message1:	
   166  0020                     	ds	17
   167  0031                     _message2:	
   168  0031                     	ds	17
   169                           
   170                           	psect	inittext
   171  06F6                     init_fetch0:	
   172                           ;	Called with low address in FSR and high address in W
   173                           
   174  06F6  087E               	movf	126,w
   175  06F7  008A               	movwf	10
   176  06F8  087F               	movf	127,w
   177  06F9  0082               	movwf	2
   178  06FA                     init_ram0:	
   179                           ;Called with:
   180                           ;	high address of idata address in btemp 
   181                           ;	low address of idata address in btemp+1 
   182                           ;	low address of data in FSR
   183                           ;	high address + 1 of data in btemp-1
   184                           
   185  06FA  26F6  120A  118A   	fcall	init_fetch0
   186  06FD  0080               	movwf	0
   187  06FE  0A84               	incf	4,f
   188  06FF  0804               	movf	4,w
   189  0700  067D               	xorwf	125,w
   190  0701  1903               	btfsc	3,2
   191  0702  3400               	retlw	0
   192  0703  0AFF               	incf	127,f
   193  0704  1903               	btfsc	3,2
   194  0705  0AFE               	incf	126,f
   195  0706  2EFA               	goto	init_ram0
   196                           
   197                           	psect	cstackCOMMON
   198  0070                     __pcstackCOMMON:	
   199  0070                     ?_readKeypad:	
   200  0070                     ??_readKeypad:	
   201                           ; 0 bytes @ 0x0
   202                           
   203  0070                     ??_handshake:	
   204                           ; 0 bytes @ 0x0
   205                           
   206  0070                     ?_main:	
   207                           ; 0 bytes @ 0x0
   208                           
   209  0070                     ?_handshake:	
   210                           ; 0 bytes @ 0x0
   211                           
   212  0070                     handshake@dataIn:	
   213                           ; 1 bytes @ 0x0
   214                           
   215  0070                     handshake@i_55:	
   216                           ; 1 bytes @ 0x0
   217                           
   218                           
   219                           ; 2 bytes @ 0x0
   220  0070                     	ds	1
   221  0071                     readKeypad@keypress:	
   222                           
   223                           ; 1 bytes @ 0x1
   224  0071                     	ds	1
   225  0072                     handshake@i:	
   226                           
   227                           ; 2 bytes @ 0x2
   228  0072                     	ds	2
   229  0074                     handshake@i_54:	
   230                           
   231                           ; 2 bytes @ 0x4
   232  0074                     	ds	2
   233  0076                     ??_main:	
   234  0076                     main@i:	
   235                           ; 0 bytes @ 0x6
   236                           
   237                           
   238                           ; 2 bytes @ 0x6
   239  0076                     	ds	2
   240                           
   241                           	psect	maintext
   242  0744                     __pmaintext:	
   243 ;;
   244 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   245 ;;
   246 ;; *************** function _main *****************
   247 ;; Defined at:
   248 ;;		line 53 in file "C:\Users\notjo\OneDrive\Desktop\USC\USC-Year3-Sem2\3201-EmbeddedSystems\Labs\LE_06\LE6-3\LE6-3.c"
   249 ;; Parameters:    Size  Location     Type
   250 ;;		None
   251 ;; Auto vars:     Size  Location     Type
   252 ;;  i               2    6[COMMON] int 
   253 ;; Return value:  Size  Location     Type
   254 ;;		None               void
   255 ;; Registers used:
   256 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   257 ;; Tracked objects:
   258 ;;		On entry : 17F/0
   259 ;;		On exit  : 0/0
   260 ;;		Unchanged: 0/0
   261 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   262 ;;      Params:         0       0       0       0       0
   263 ;;      Locals:         2       0       0       0       0
   264 ;;      Temps:          0       0       0       0       0
   265 ;;      Totals:         2       0       0       0       0
   266 ;;Total ram usage:        2 bytes
   267 ;; Hardware stack levels required when called:    1
   268 ;; This function calls:
   269 ;;		_handshake
   270 ;;		_readKeypad
   271 ;; This function is called by:
   272 ;;		Startup code after reset
   273 ;; This function uses a non-reentrant model
   274 ;;
   275                           
   276                           
   277                           ;psect for function _main
   278  0744                     _main:	
   279                           
   280                           ;LE6-3.c: 58: TRISC = 0x00;
   281                           
   282                           ;incstack = 0
   283                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   284  0744  1683               	bsf	3,5	;RP0=1, select bank1
   285  0745  1303               	bcf	3,6	;RP1=0, select bank1
   286  0746  0187               	clrf	7	;volatile
   287                           
   288                           ;LE6-3.c: 59: PORTC = 0x00;
   289  0747  1283               	bcf	3,5	;RP0=0, select bank0
   290  0748  1303               	bcf	3,6	;RP1=0, select bank0
   291  0749  0187               	clrf	7	;volatile
   292                           
   293                           ;LE6-3.c: 61: SPBRG = 0x19;
   294  074A  3019               	movlw	25
   295  074B  1683               	bsf	3,5	;RP0=1, select bank1
   296  074C  1303               	bcf	3,6	;RP1=0, select bank1
   297  074D  0099               	movwf	25	;volatile
   298                           
   299                           ;LE6-3.c: 63: SYNC = 0;
   300  074E  1218               	bcf	24,4	;volatile
   301                           
   302                           ;LE6-3.c: 64: SPEN = 1;
   303  074F  1283               	bcf	3,5	;RP0=0, select bank0
   304  0750  1303               	bcf	3,6	;RP1=0, select bank0
   305  0751  1798               	bsf	24,7	;volatile
   306                           
   307                           ;LE6-3.c: 65: TX9 = 0;
   308  0752  1683               	bsf	3,5	;RP0=1, select bank1
   309  0753  1303               	bcf	3,6	;RP1=0, select bank1
   310  0754  1318               	bcf	24,6	;volatile
   311                           
   312                           ;LE6-3.c: 66: BRGH = 1;
   313  0755  1518               	bsf	24,2	;volatile
   314                           
   315                           ;LE6-3.c: 67: TXEN = 1;
   316  0756  1698               	bsf	24,5	;volatile
   317  0757                     l671:	
   318                           ;LE6-3.c: 68: for(;;)
   319                           
   320                           
   321                           ;LE6-3.c: 69: {
   322                           ;LE6-3.c: 71: if(RD4)
   323  0757  1283               	bcf	3,5	;RP0=0, select bank0
   324  0758  1303               	bcf	3,6	;RP1=0, select bank0
   325  0759  1E08               	btfss	8,4	;volatile
   326  075A  2F57               	goto	l671
   327                           
   328                           ;LE6-3.c: 72: {
   329                           ;LE6-3.c: 73: readKeypad();
   330  075B  120A  118A  2707  120A  118A  	fcall	_readKeypad
   331                           
   332                           ;LE6-3.c: 74: handshake(keypadValue);
   333  0760  0879               	movf	_keypadValue,w
   334  0761  120A  118A  277A  120A  118A  	fcall	_handshake
   335                           
   336                           ;LE6-3.c: 75: for(int i = 0; i < 10000; i++);
   337  0766  01F6               	clrf	main@i
   338  0767  01F7               	clrf	main@i+1
   339  0768                     L1:	
   340  0768  0877               	movf	main@i+1,w
   341  0769  3A80               	xorlw	128
   342  076A  00FF               	movwf	127
   343  076B  30A7               	movlw	167
   344  076C  027F               	subwf	127,w
   345  076D  1D03               	skipz
   346  076E  2F71               	goto	u315
   347  076F  3010               	movlw	16
   348  0770  0276               	subwf	main@i,w
   349  0771                     u315:	
   350  0771  1803               	btfsc	3,0
   351  0772  2F57               	goto	l671
   352  0773  3001               	movlw	1
   353  0774  07F6               	addwf	main@i,f
   354  0775  1803               	skipnc
   355  0776  0AF7               	incf	main@i+1,f
   356  0777  3000               	movlw	0
   357  0778  07F7               	addwf	main@i+1,f
   358  0779  2F68               	goto	L1
   359  077A                     __end_of_main:	
   360                           ;LE6-3.c: 76: }
   361                           ;LE6-3.c: 77: }
   362                           
   363                           
   364                           	psect	text1
   365  0707                     __ptext1:	
   366 ;; *************** function _readKeypad *****************
   367 ;; Defined at:
   368 ;;		line 80 in file "C:\Users\notjo\OneDrive\Desktop\USC\USC-Year3-Sem2\3201-EmbeddedSystems\Labs\LE_06\LE6-3\LE6-3.c"
   369 ;; Parameters:    Size  Location     Type
   370 ;;		None
   371 ;; Auto vars:     Size  Location     Type
   372 ;;  keypress        1    1[COMMON] unsigned char 
   373 ;; Return value:  Size  Location     Type
   374 ;;		None               void
   375 ;; Registers used:
   376 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   377 ;; Tracked objects:
   378 ;;		On entry : 0/0
   379 ;;		On exit  : 0/0
   380 ;;		Unchanged: 0/0
   381 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   382 ;;      Params:         0       0       0       0       0
   383 ;;      Locals:         1       0       0       0       0
   384 ;;      Temps:          1       0       0       0       0
   385 ;;      Totals:         2       0       0       0       0
   386 ;;Total ram usage:        2 bytes
   387 ;; Hardware stack levels used:    1
   388 ;; This function calls:
   389 ;;		Nothing
   390 ;; This function is called by:
   391 ;;		_main
   392 ;; This function uses a non-reentrant model
   393 ;;
   394                           
   395                           
   396                           ;psect for function _readKeypad
   397  0707                     _readKeypad:	
   398                           
   399                           ;LE6-3.c: 82: char keypress = 0x0F & PORTD;
   400                           
   401                           ;incstack = 0
   402                           ; Regs used in _readKeypad: [wreg-fsr0h+status,2+status,0]
   403  0707  1283               	bcf	3,5	;RP0=0, select bank0
   404  0708  1303               	bcf	3,6	;RP1=0, select bank0
   405  0709  0808               	movf	8,w	;volatile
   406  070A  390F               	andlw	15
   407  070B  00F0               	movwf	??_readKeypad
   408  070C  0870               	movf	??_readKeypad,w
   409  070D  00F1               	movwf	readKeypad@keypress
   410                           
   411                           ;LE6-3.c: 83: switch(keypress)
   412  070E  2F19               	goto	l545
   413  070F                     l539:	
   414                           ;LE6-3.c: 84: {
   415                           ;LE6-3.c: 85: case KEY_1:
   416                           
   417                           
   418                           ;LE6-3.c: 86: keypadValue = KEY_1;
   419  070F  01F9               	clrf	_keypadValue
   420                           
   421                           ;LE6-3.c: 87: break;
   422  0710  0008               	return
   423  0711                     l50:	
   424                           ;LE6-3.c: 88: case KEY_2:
   425                           
   426                           
   427                           ;LE6-3.c: 89: keypadValue = KEY_2;
   428  0711  01F9               	clrf	_keypadValue
   429  0712  0AF9               	incf	_keypadValue,f
   430                           
   431                           ;LE6-3.c: 90: break;
   432  0713  0008               	return
   433  0714                     l541:	
   434                           ;LE6-3.c: 91: default:
   435                           
   436                           
   437                           ;LE6-3.c: 92: keypadValue = 0xFF;
   438  0714  30FF               	movlw	255
   439  0715  00F0               	movwf	??_readKeypad
   440  0716  0870               	movf	??_readKeypad,w
   441  0717  00F9               	movwf	_keypadValue
   442                           
   443                           ;LE6-3.c: 94: }
   444                           
   445                           ;LE6-3.c: 93: break;
   446  0718  0008               	return
   447  0719                     l545:	
   448  0719  0871               	movf	readKeypad@keypress,w
   449                           
   450                           ; Switch size 1, requested type "space"
   451                           ; Number of cases is 2, Range of values is 0 to 1
   452                           ; switch strategies available:
   453                           ; Name         Instructions Cycles
   454                           ; simple_byte            7     4 (average)
   455                           ; direct_byte           14     8 (fixed)
   456                           ; jumptable            260     6 (fixed)
   457                           ;	Chosen strategy is simple_byte
   458  071A  3A00               	xorlw	0	; case 0
   459  071B  1903               	skipnz
   460  071C  2F0F               	goto	l539
   461  071D  3A01               	xorlw	1	; case 1
   462  071E  1903               	skipnz
   463  071F  2F11               	goto	l50
   464  0720  2F14               	goto	l541
   465  0721  0008               	return
   466  0722                     __end_of_readKeypad:	
   467                           
   468                           	psect	text2
   469  077A                     __ptext2:	
   470 ;; *************** function _handshake *****************
   471 ;; Defined at:
   472 ;;		line 97 in file "C:\Users\notjo\OneDrive\Desktop\USC\USC-Year3-Sem2\3201-EmbeddedSystems\Labs\LE_06\LE6-3\LE6-3.c"
   473 ;; Parameters:    Size  Location     Type
   474 ;;  dataIn          1    wreg     unsigned char 
   475 ;; Auto vars:     Size  Location     Type
   476 ;;  dataIn          1    0[COMMON] unsigned char 
   477 ;;  i               2    4[COMMON] int 
   478 ;;  i               2    2[COMMON] int 
   479 ;;  i               2    0[COMMON] int 
   480 ;; Return value:  Size  Location     Type
   481 ;;                  1    wreg      unsigned char 
   482 ;; Registers used:
   483 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
   484 ;; Tracked objects:
   485 ;;		On entry : 0/0
   486 ;;		On exit  : 0/0
   487 ;;		Unchanged: 0/0
   488 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   489 ;;      Params:         0       0       0       0       0
   490 ;;      Locals:         6       0       0       0       0
   491 ;;      Temps:          0       0       0       0       0
   492 ;;      Totals:         6       0       0       0       0
   493 ;;Total ram usage:        6 bytes
   494 ;; Hardware stack levels used:    1
   495 ;; This function calls:
   496 ;;		Nothing
   497 ;; This function is called by:
   498 ;;		_main
   499 ;; This function uses a non-reentrant model
   500 ;;
   501                           
   502                           
   503                           ;psect for function _handshake
   504  077A                     _handshake:	
   505  077A                     l55:	
   506                           ;LE6-3.c: 99: while(!TRMT);
   507                           
   508                           ;incstack = 0
   509                           ; Regs used in _handshake: [wreg-fsr0h+status,2+status,0+btemp+1]
   510                           
   511  077A  1683               	bsf	3,5	;RP0=1, select bank1
   512  077B  1303               	bcf	3,6	;RP1=0, select bank1
   513  077C  1C98               	btfss	24,1	;volatile
   514  077D  2F7A               	goto	l55
   515                           
   516                           ;LE6-3.c: 100: if(keypadValue == KEY_1)
   517  077E  08F9               	movf	_keypadValue,f
   518  077F  1D03               	skipz
   519  0780  2FAC               	goto	l633
   520                           
   521                           ;LE6-3.c: 101: {
   522                           ;LE6-3.c: 102: for(int i = 0; i < sizeof(message1); i++)
   523  0781  01F2               	clrf	handshake@i
   524  0782  01F3               	clrf	handshake@i+1
   525  0783  3000               	movlw	0
   526  0784  0273               	subwf	handshake@i+1,w
   527  0785  3011               	movlw	17
   528  0786  1903               	skipnz
   529  0787  0272               	subwf	handshake@i,w
   530  0788  1803               	btfsc	3,0
   531  0789  2FA3               	goto	l631
   532  078A                     l627:	
   533                           
   534                           ;LE6-3.c: 103: {
   535                           ;LE6-3.c: 104: TXREG = message1[i];
   536  078A  0872               	movf	handshake@i,w
   537  078B  3E20               	addlw	_message1& (0+255)
   538  078C  0084               	movwf	4
   539  078D  1383               	bcf	3,7	;select IRP bank0
   540  078E  0800               	movf	0,w
   541  078F  1283               	bcf	3,5	;RP0=0, select bank0
   542  0790  1303               	bcf	3,6	;RP1=0, select bank0
   543  0791  0099               	movwf	25	;volatile
   544  0792                     l61:	
   545                           ;LE6-3.c: 105: while(!TRMT);
   546                           
   547  0792  1683               	bsf	3,5	;RP0=1, select bank1
   548  0793  1303               	bcf	3,6	;RP1=0, select bank1
   549  0794  1C98               	btfss	24,1	;volatile
   550  0795  2F92               	goto	l61
   551  0796  3001               	movlw	1
   552  0797  07F2               	addwf	handshake@i,f
   553  0798  1803               	skipnc
   554  0799  0AF3               	incf	handshake@i+1,f
   555  079A  3000               	movlw	0
   556  079B  07F3               	addwf	handshake@i+1,f
   557  079C  3000               	movlw	0
   558  079D  0273               	subwf	handshake@i+1,w
   559  079E  3011               	movlw	17
   560  079F  1903               	skipnz
   561  07A0  0272               	subwf	handshake@i,w
   562  07A1  1C03               	skipc
   563  07A2  2F8A               	goto	l627
   564  07A3                     l631:	
   565                           
   566                           ;LE6-3.c: 106: }
   567                           ;LE6-3.c: 107: TXREG = 0x0D;
   568  07A3  300D               	movlw	13
   569  07A4  1283               	bcf	3,5	;RP0=0, select bank0
   570  07A5  1303               	bcf	3,6	;RP1=0, select bank0
   571  07A6  0099               	movwf	25	;volatile
   572  07A7                     l64:	
   573                           ;LE6-3.c: 108: while(!TRMT);
   574                           
   575  07A7  1683               	bsf	3,5	;RP0=1, select bank1
   576  07A8  1303               	bcf	3,6	;RP1=0, select bank1
   577  07A9  1898               	btfsc	24,1	;volatile
   578  07AA  2FDA               	goto	l647
   579  07AB  2FA7               	goto	l64
   580  07AC                     l633:	
   581                           ;LE6-3.c: 109: }
   582                           
   583                           
   584                           ;LE6-3.c: 110: else if(keypadValue == KEY_2)
   585  07AC  0879               	movf	_keypadValue,w
   586  07AD  3A01               	xorlw	1
   587  07AE  1D03               	skipz
   588  07AF  0008               	return
   589                           
   590                           ;LE6-3.c: 111: {
   591                           ;LE6-3.c: 112: for(int i = 0; i < sizeof(message2); i++)
   592  07B0  01F4               	clrf	handshake@i_54
   593  07B1  01F5               	clrf	handshake@i_54+1
   594  07B2  3000               	movlw	0
   595  07B3  0275               	subwf	handshake@i_54+1,w
   596  07B4  3011               	movlw	17
   597  07B5  1903               	skipnz
   598  07B6  0274               	subwf	handshake@i_54,w
   599  07B7  1803               	btfsc	3,0
   600  07B8  2FD2               	goto	l645
   601  07B9                     l641:	
   602                           
   603                           ;LE6-3.c: 113: {
   604                           ;LE6-3.c: 114: TXREG = message2[i];
   605  07B9  0874               	movf	handshake@i_54,w
   606  07BA  3E31               	addlw	_message2& (0+255)
   607  07BB  0084               	movwf	4
   608  07BC  1383               	bcf	3,7	;select IRP bank0
   609  07BD  0800               	movf	0,w
   610  07BE  1283               	bcf	3,5	;RP0=0, select bank0
   611  07BF  1303               	bcf	3,6	;RP1=0, select bank0
   612  07C0  0099               	movwf	25	;volatile
   613  07C1                     l71:	
   614                           ;LE6-3.c: 115: while(!TRMT);
   615                           
   616  07C1  1683               	bsf	3,5	;RP0=1, select bank1
   617  07C2  1303               	bcf	3,6	;RP1=0, select bank1
   618  07C3  1C98               	btfss	24,1	;volatile
   619  07C4  2FC1               	goto	l71
   620  07C5  3001               	movlw	1
   621  07C6  07F4               	addwf	handshake@i_54,f
   622  07C7  1803               	skipnc
   623  07C8  0AF5               	incf	handshake@i_54+1,f
   624  07C9  3000               	movlw	0
   625  07CA  07F5               	addwf	handshake@i_54+1,f
   626  07CB  3000               	movlw	0
   627  07CC  0275               	subwf	handshake@i_54+1,w
   628  07CD  3011               	movlw	17
   629  07CE  1903               	skipnz
   630  07CF  0274               	subwf	handshake@i_54,w
   631  07D0  1C03               	skipc
   632  07D1  2FB9               	goto	l641
   633  07D2                     l645:	
   634                           
   635                           ;LE6-3.c: 116: }
   636                           ;LE6-3.c: 117: TXREG = 0x0D;
   637  07D2  300D               	movlw	13
   638  07D3  1283               	bcf	3,5	;RP0=0, select bank0
   639  07D4  1303               	bcf	3,6	;RP1=0, select bank0
   640  07D5  0099               	movwf	25	;volatile
   641  07D6                     l74:	
   642                           ;LE6-3.c: 118: while(!TRMT);
   643                           
   644  07D6  1683               	bsf	3,5	;RP0=1, select bank1
   645  07D7  1303               	bcf	3,6	;RP1=0, select bank1
   646  07D8  1C98               	btfss	24,1	;volatile
   647  07D9  2FD6               	goto	l74
   648  07DA                     l647:	
   649                           ;LE6-3.c: 120: else
   650                           ;LE6-3.c: 121: return 0;
   651                           ;	Return value of _handshake is never used
   652                           
   653                           ;LE6-3.c: 119: }
   654                           
   655                           
   656                           ;LE6-3.c: 123: for(int i = 0; i < 10000; i++);
   657  07DA  01F0               	clrf	handshake@i_55
   658  07DB  01F1               	clrf	handshake@i_55+1
   659  07DC                     L2:	
   660  07DC  0871               	movf	handshake@i_55+1,w
   661  07DD  3A80               	xorlw	128
   662  07DE  00FF               	movwf	127
   663  07DF  30A7               	movlw	167
   664  07E0  027F               	subwf	127,w
   665  07E1  1D03               	skipz
   666  07E2  2FE5               	goto	u285
   667  07E3  3010               	movlw	16
   668  07E4  0270               	subwf	handshake@i_55,w
   669  07E5                     u285:	
   670  07E5  1803               	btfsc	3,0
   671  07E6  0008               	return
   672  07E7  3001               	movlw	1
   673  07E8  07F0               	addwf	handshake@i_55,f
   674  07E9  1803               	skipnc
   675  07EA  0AF1               	incf	handshake@i_55+1,f
   676  07EB  3000               	movlw	0
   677  07EC  07F1               	addwf	handshake@i_55+1,f
   678  07ED  2FDC               	goto	L2
   679  07EE                     __end_of_handshake:	
   680                           ;LE6-3.c: 124: return 1;
   681                           ;	Return value of _handshake is never used
   682                           
   683  007E                     btemp	set	126	;btemp
   684  007E                     wtemp	set	126
   685  007E                     wtemp0	set	126
   686  0080                     wtemp1	set	128
   687  0082                     wtemp2	set	130
   688  0084                     wtemp3	set	132
   689  0086                     wtemp4	set	134
   690  0088                     wtemp5	set	136
   691  007F                     wtemp6	set	127
   692  007E                     ttemp	set	126
   693  007E                     ttemp0	set	126
   694  0081                     ttemp1	set	129
   695  0084                     ttemp2	set	132
   696  0087                     ttemp3	set	135
   697  007F                     ttemp4	set	127
   698  007E                     ltemp	set	126
   699  007E                     ltemp0	set	126
   700  0082                     ltemp1	set	130
   701  0086                     ltemp2	set	134
   702  0080                     ltemp3	set	128


Data Sizes:
    Strings     0
    Constant    0
    Data        34
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8      10
    BANK0            80      0      34
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_handshake

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0     243
                                              6 COMMON     2     2      0
                          _handshake
                         _readKeypad
 ---------------------------------------------------------------------------------
 (1) _readKeypad                                           2     2      0      15
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _handshake                                            7     7      0     182
                                              0 COMMON     6     6      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _handshake
   _readKeypad

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      0      22       5       42.5%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      8       A       1       71.4%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      2C      12        0.0%
ABS                  0      0      2C       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V1.33 build 59893 
Symbol Table                                                                                   Mon Apr 22 18:28:33 2024

                      pc 0002              __CFG_CP$OFF 0000                       l50 0711  
                     l61 0792                       l71 07C1                       l55 077A  
                     l64 07A7                       l74 07D6                       fsr 0004  
                    l541 0714                      l631 07A3                      l641 07B9  
                    l633 07AC                      l545 0719                      l627 078A  
                    l539 070F                      l645 07D2                      l647 07DA  
                    l671 0757                      _RD4 0044                      u315 0771  
           __CFG_CPD$OFF 0000                      u285 07E5                      _TX9 04C6  
                    fsr0 0004                      indf 0000             __CFG_FOSC$XT 0000  
           __CFG_LVP$OFF 0000                     _BRGH 04C2                     _SPEN 00C7  
                   _TRMT 04C1                     _TXEN 04C5                     _SYNC 04C4  
           __CFG_WRT$OFF 0000                     _main 0744                     btemp 007E  
          __CFG_BOREN$ON 0000                     ltemp 007E                     start 0000  
                   ttemp 007E                     wtemp 007E                    ?_main 0070  
          __CFG_WDTE$OFF 0000                    _SPBRG 0099                    _PORTC 0007  
                  _PORTD 0008                    _TRISC 0087                    _TXREG 0019  
          __CFG_PWRTE$ON 0000                    main@i 0076                    pclath 000A  
                  ltemp0 007E                    ltemp1 0082                    ltemp2 0086  
                  ltemp3 0080                    ttemp0 007E                    ttemp1 0081  
                  ttemp2 0084                    ttemp3 0087                    ttemp4 007F  
                  status 0003                    wtemp0 007E                    wtemp1 0080  
                  wtemp2 0082                    wtemp3 0084                    wtemp4 0086  
                  wtemp5 0088                    wtemp6 007F          __initialization 07EE  
           __end_of_main 077A                   ??_main 0076  __end_of__initialization 07FC  
         __pcstackCOMMON 0070             __pidataBANK0 0722       __size_of_handshake 0074  
     readKeypad@keypress 0071               __pmaintext 0744               _count_flag 0078  
      __end_of_handshake 07EE               _readKeypad 0707                  __ptext1 0707  
                __ptext2 077A     end_of_initialization 07FC               handshake@i 0072  
            ?_readKeypad 0070      start_initialization 07EE          handshake@dataIn 0070  
             init_fetch0 06F6              __pdataBANK0 0020              __pbssCOMMON 0078  
              ___latbits 0002      __size_of_readKeypad 001B                _handshake 077A  
             ?_handshake 0070             ??_readKeypad 0070              _keypadValue 0079  
     __end_of_readKeypad 0722            __size_of_main 0036                 _message1 0020  
               _message2 0031              ??_handshake 0070            handshake@i_54 0074  
          handshake@i_55 0070                 init_ram0 06FA  
